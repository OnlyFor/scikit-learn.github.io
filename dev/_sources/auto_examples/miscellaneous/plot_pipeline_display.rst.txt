
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 {color: black;background-color: white;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 pre{padding: 0;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-toggleable {background-color: white;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-estimator:hover {background-color: #d4ebff;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-item {z-index: 1;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-parallel-item:only-child::after {width: 0;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999 div.sk-text-repr-fallback {display: none;}</style><div id="sk-be51fe4d-1cbe-4665-b0bf-d2aa44abb999" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b343c74b-7648-4218-9f1e-3e1a3244595f" type="checkbox" ><label for="b343c74b-7648-4218-9f1e-3e1a3244595f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6536f89f-784f-41b5-864f-94b85394f896" type="checkbox" ><label for="6536f89f-784f-41b5-864f-94b85394f896" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8ba6fd9-52c1-42db-b08c-84b250121173" type="checkbox" ><label for="c8ba6fd9-52c1-42db-b08c-84b250121173" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c5532093-4f20-4827-9fea-69b233acd1a0 {color: black;background-color: white;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 pre{padding: 0;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-toggleable {background-color: white;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-item {z-index: 1;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-parallel-item:only-child::after {width: 0;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c5532093-4f20-4827-9fea-69b233acd1a0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c5532093-4f20-4827-9fea-69b233acd1a0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="341876d2-5203-4489-9e72-c3278244c1bd" type="checkbox" ><label for="341876d2-5203-4489-9e72-c3278244c1bd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13af0451-a092-4b3b-986e-504243d9a603" type="checkbox" ><label for="13af0451-a092-4b3b-986e-504243d9a603" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d0ec01e-cf0f-4c85-a1f0-84eefaa7a0a6" type="checkbox" ><label for="0d0ec01e-cf0f-4c85-a1f0-84eefaa7a0a6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14030ced-712f-47cd-a87e-d56241f84941" type="checkbox" ><label for="14030ced-712f-47cd-a87e-d56241f84941" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d {color: black;background-color: white;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d pre{padding: 0;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-toggleable {background-color: white;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-estimator:hover {background-color: #d4ebff;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-item {z-index: 1;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-parallel-item:only-child::after {width: 0;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d div.sk-text-repr-fallback {display: none;}</style><div id="sk-ddfc7bc0-13d0-4a89-a91b-306800daa06d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9ea279e-1a24-4229-8206-570c31bdafe1" type="checkbox" ><label for="e9ea279e-1a24-4229-8206-570c31bdafe1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc0cc3fc-3acd-4c74-81a5-615575616d1b" type="checkbox" ><label for="dc0cc3fc-3acd-4c74-81a5-615575616d1b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b2c684a-eb76-47a8-9c6a-5a382e70f23d" type="checkbox" ><label for="1b2c684a-eb76-47a8-9c6a-5a382e70f23d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5cb48fb8-9594-479b-babf-dd82117843aa {color: black;background-color: white;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa pre{padding: 0;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-toggleable {background-color: white;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-estimator:hover {background-color: #d4ebff;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-item {z-index: 1;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-parallel-item:only-child::after {width: 0;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5cb48fb8-9594-479b-babf-dd82117843aa div.sk-text-repr-fallback {display: none;}</style><div id="sk-5cb48fb8-9594-479b-babf-dd82117843aa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63f4316c-cd3b-4463-98a5-886f61104aa1" type="checkbox" ><label for="63f4316c-cd3b-4463-98a5-886f61104aa1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8309bc4-4632-4865-a13a-ec9c30c5a76f" type="checkbox" ><label for="a8309bc4-4632-4865-a13a-ec9c30c5a76f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef8d2b97-015c-4379-933c-6993d95c766b" type="checkbox" ><label for="ef8d2b97-015c-4379-933c-6993d95c766b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3e2cc64-9c5b-42cb-9adb-800e88d6bfc2" type="checkbox" ><label for="f3e2cc64-9c5b-42cb-9adb-800e88d6bfc2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="712ce7fd-dc02-4838-8964-bfd2047cd98b" type="checkbox" ><label for="712ce7fd-dc02-4838-8964-bfd2047cd98b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b37076a4-b8c7-4fee-b0f9-65da684d6813" type="checkbox" ><label for="b37076a4-b8c7-4fee-b0f9-65da684d6813" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b029eff0-b684-48fd-b427-775c83c5b4e5" type="checkbox" ><label for="b029eff0-b684-48fd-b427-775c83c5b4e5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b4acb7c-4ec7-42a9-b3f4-3c51599ab293" type="checkbox" ><label for="3b4acb7c-4ec7-42a9-b3f4-3c51599ab293" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3f4305e-409a-4ce8-9aaa-4d9b2f7e198a" type="checkbox" ><label for="c3f4305e-409a-4ce8-9aaa-4d9b2f7e198a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 {color: black;background-color: white;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 pre{padding: 0;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-toggleable {background-color: white;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-estimator:hover {background-color: #d4ebff;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-item {z-index: 1;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-parallel-item:only-child::after {width: 0;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-08cda9dd-faaa-4866-b2f1-8da5cedea195 div.sk-text-repr-fallback {display: none;}</style><div id="sk-08cda9dd-faaa-4866-b2f1-8da5cedea195" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2716d94-cf6e-48a8-835a-cd02558c44c8" type="checkbox" ><label for="a2716d94-cf6e-48a8-835a-cd02558c44c8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75f79cd8-ef3b-41cd-8267-5e50ad963f77" type="checkbox" ><label for="75f79cd8-ef3b-41cd-8267-5e50ad963f77" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c28a5626-18da-4371-a72b-a1701be78e73" type="checkbox" ><label for="c28a5626-18da-4371-a72b-a1701be78e73" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="918a747e-c4ea-4707-ad60-9d94718c4bd7" type="checkbox" ><label for="918a747e-c4ea-4707-ad60-9d94718c4bd7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1df4f30-9315-4782-9bd8-f0837edc6e16" type="checkbox" ><label for="b1df4f30-9315-4782-9bd8-f0837edc6e16" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="072bb862-36b2-475d-8c88-1d26adce995e" type="checkbox" ><label for="072bb862-36b2-475d-8c88-1d26adce995e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7608d2e-bdfe-402a-9a11-6c90414625bb" type="checkbox" ><label for="c7608d2e-bdfe-402a-9a11-6c90414625bb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aaa47768-2c6a-45b7-9221-13214911e113" type="checkbox" ><label for="aaa47768-2c6a-45b7-9221-13214911e113" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7792bff7-d365-48bd-ad5b-ac4c44463f92" type="checkbox" ><label for="7792bff7-d365-48bd-ad5b-ac4c44463f92" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.131 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
