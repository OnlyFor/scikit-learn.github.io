
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 {color: black;background-color: white;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 pre{padding: 0;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-toggleable {background-color: white;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-item {z-index: 1;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-parallel-item:only-child::after {width: 0;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4521ddfb-992a-4297-9d84-69ea40b920a3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4521ddfb-992a-4297-9d84-69ea40b920a3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7317d99e-d777-475f-a44b-61bc28406302" type="checkbox" ><label for="7317d99e-d777-475f-a44b-61bc28406302" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1874aeea-2259-4312-a27c-5f32d4c5966a" type="checkbox" ><label for="1874aeea-2259-4312-a27c-5f32d4c5966a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76ef0155-06bb-46e4-9e4e-9116230830eb" type="checkbox" ><label for="76ef0155-06bb-46e4-9e4e-9116230830eb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e555a86b-8a70-4e4d-befe-31e415e45333 {color: black;background-color: white;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 pre{padding: 0;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-toggleable {background-color: white;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-item {z-index: 1;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-parallel-item:only-child::after {width: 0;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e555a86b-8a70-4e4d-befe-31e415e45333 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e555a86b-8a70-4e4d-befe-31e415e45333" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfe8d8bd-f2f9-4200-bcbd-ab79c6a6c8dc" type="checkbox" ><label for="dfe8d8bd-f2f9-4200-bcbd-ab79c6a6c8dc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cfba30a-6295-4fcd-a6f3-845510fa5fff" type="checkbox" ><label for="8cfba30a-6295-4fcd-a6f3-845510fa5fff" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44be69bf-787a-49df-9209-7eb1fd98983d" type="checkbox" ><label for="44be69bf-787a-49df-9209-7eb1fd98983d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53212b68-3b81-427b-a9d2-cfd55716d9fc" type="checkbox" ><label for="53212b68-3b81-427b-a9d2-cfd55716d9fc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 {color: black;background-color: white;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 pre{padding: 0;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-toggleable {background-color: white;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-item {z-index: 1;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-parallel-item:only-child::after {width: 0;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-451bec5d-9c80-402a-9f0c-3c069682a0b4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-451bec5d-9c80-402a-9f0c-3c069682a0b4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="790406d2-7399-4bbf-adff-d3763481f9eb" type="checkbox" ><label for="790406d2-7399-4bbf-adff-d3763481f9eb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4711360c-c54e-461c-9c3e-21dae69645a7" type="checkbox" ><label for="4711360c-c54e-461c-9c3e-21dae69645a7" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="713415ca-18a7-4bff-8f49-50662cd08c32" type="checkbox" ><label for="713415ca-18a7-4bff-8f49-50662cd08c32" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-320f5e4c-9165-4775-be09-e4322dc94824 {color: black;background-color: white;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 pre{padding: 0;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-toggleable {background-color: white;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-estimator:hover {background-color: #d4ebff;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-item {z-index: 1;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-parallel-item:only-child::after {width: 0;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-320f5e4c-9165-4775-be09-e4322dc94824 div.sk-text-repr-fallback {display: none;}</style><div id="sk-320f5e4c-9165-4775-be09-e4322dc94824" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec08d1a0-1071-44dd-8e05-fb9858358dfd" type="checkbox" ><label for="ec08d1a0-1071-44dd-8e05-fb9858358dfd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e31514dc-c12c-46b5-9764-28bc3033701c" type="checkbox" ><label for="e31514dc-c12c-46b5-9764-28bc3033701c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="893e411b-b2c6-4281-ac8b-e9aba3802905" type="checkbox" ><label for="893e411b-b2c6-4281-ac8b-e9aba3802905" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd13fe31-2243-4f55-91f9-c0c3ffc9b4b5" type="checkbox" ><label for="bd13fe31-2243-4f55-91f9-c0c3ffc9b4b5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68711ba4-59f7-4559-bb26-405a1a6ebd65" type="checkbox" ><label for="68711ba4-59f7-4559-bb26-405a1a6ebd65" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00d2dfb2-dc2d-4da4-8bba-1571550b1a81" type="checkbox" ><label for="00d2dfb2-dc2d-4da4-8bba-1571550b1a81" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38d74590-33fd-46dd-b81e-983ad663491e" type="checkbox" ><label for="38d74590-33fd-46dd-b81e-983ad663491e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ffcf3e2-21cd-4dcf-b4ae-ee7e3be5fc0f" type="checkbox" ><label for="2ffcf3e2-21cd-4dcf-b4ae-ee7e3be5fc0f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="424abcab-7d16-4a2c-9d31-46b74729ccaf" type="checkbox" ><label for="424abcab-7d16-4a2c-9d31-46b74729ccaf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b {color: black;background-color: white;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b pre{padding: 0;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-toggleable {background-color: white;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-estimator:hover {background-color: #d4ebff;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-item {z-index: 1;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-parallel-item:only-child::after {width: 0;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b div.sk-text-repr-fallback {display: none;}</style><div id="sk-f0e4dc01-b928-49a9-b5bf-efb6e057988b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db8864d4-e330-4e31-a144-817f0cb15e5b" type="checkbox" ><label for="db8864d4-e330-4e31-a144-817f0cb15e5b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="640243eb-49ba-4f8d-b4c5-e66f192342c6" type="checkbox" ><label for="640243eb-49ba-4f8d-b4c5-e66f192342c6" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f7c4c57-6a1f-4197-86fa-225e05802683" type="checkbox" ><label for="8f7c4c57-6a1f-4197-86fa-225e05802683" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e2557a5-d255-4125-a3c6-3b2982b954e7" type="checkbox" ><label for="1e2557a5-d255-4125-a3c6-3b2982b954e7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6da0697d-5ca5-4d50-998b-5dff61b6a5c1" type="checkbox" ><label for="6da0697d-5ca5-4d50-998b-5dff61b6a5c1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bec19936-7b53-470f-9beb-9f680309f549" type="checkbox" ><label for="bec19936-7b53-470f-9beb-9f680309f549" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d88a9ce7-2aa4-4f55-bb75-c57dc536a788" type="checkbox" ><label for="d88a9ce7-2aa4-4f55-bb75-c57dc536a788" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a57c72c-4b12-4788-8ed8-4e055798f844" type="checkbox" ><label for="1a57c72c-4b12-4788-8ed8-4e055798f844" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="043fa6e6-bdb4-403a-b189-764ce0436e2a" type="checkbox" ><label for="043fa6e6-bdb4-403a-b189-764ce0436e2a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
