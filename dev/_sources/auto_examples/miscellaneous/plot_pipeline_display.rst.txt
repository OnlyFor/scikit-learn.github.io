
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 {color: black;background-color: white;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 pre{padding: 0;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-toggleable {background-color: white;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-item {z-index: 1;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-parallel-item:only-child::after {width: 0;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ef30d3fc-3a3a-498a-b97d-d38ffe802477" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be201c25-be54-477d-80e8-0e39e13c996e" type="checkbox" ><label for="be201c25-be54-477d-80e8-0e39e13c996e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b73dff13-7278-42af-9b5b-9f5d4f55d5e9" type="checkbox" ><label for="b73dff13-7278-42af-9b5b-9f5d4f55d5e9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61195b29-7cfd-40d2-9eaa-1216dc1715c9" type="checkbox" ><label for="61195b29-7cfd-40d2-9eaa-1216dc1715c9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-269c9766-8709-4523-a71f-819164b1dbae {color: black;background-color: white;}#sk-269c9766-8709-4523-a71f-819164b1dbae pre{padding: 0;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-toggleable {background-color: white;}#sk-269c9766-8709-4523-a71f-819164b1dbae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-269c9766-8709-4523-a71f-819164b1dbae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-269c9766-8709-4523-a71f-819164b1dbae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-269c9766-8709-4523-a71f-819164b1dbae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-269c9766-8709-4523-a71f-819164b1dbae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-269c9766-8709-4523-a71f-819164b1dbae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-estimator:hover {background-color: #d4ebff;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-item {z-index: 1;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-parallel-item:only-child::after {width: 0;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-269c9766-8709-4523-a71f-819164b1dbae div.sk-text-repr-fallback {display: none;}</style><div id="sk-269c9766-8709-4523-a71f-819164b1dbae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac8c3254-11f0-4851-ba47-8ca7a90e75a1" type="checkbox" ><label for="ac8c3254-11f0-4851-ba47-8ca7a90e75a1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4d361f6-34fc-4b5f-b663-bad4e0db76e1" type="checkbox" ><label for="c4d361f6-34fc-4b5f-b663-bad4e0db76e1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95ec82b2-cf6a-4a71-9b8f-94f04b454788" type="checkbox" ><label for="95ec82b2-cf6a-4a71-9b8f-94f04b454788" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c30c9f7-0607-48a0-999b-f670f8e7f919" type="checkbox" ><label for="5c30c9f7-0607-48a0-999b-f670f8e7f919" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca25b61a-acac-4299-bec6-1eab7fff734d {color: black;background-color: white;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d pre{padding: 0;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-toggleable {background-color: white;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-item {z-index: 1;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-parallel-item:only-child::after {width: 0;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ca25b61a-acac-4299-bec6-1eab7fff734d div.sk-text-repr-fallback {display: none;}</style><div id="sk-ca25b61a-acac-4299-bec6-1eab7fff734d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2dabfe47-5c25-41f5-9495-0163a47b9cce" type="checkbox" ><label for="2dabfe47-5c25-41f5-9495-0163a47b9cce" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cb478de-0983-4e1b-8791-40293bcaf6d2" type="checkbox" ><label for="5cb478de-0983-4e1b-8791-40293bcaf6d2" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37527876-679a-494d-8d36-3a66cf4e32c4" type="checkbox" ><label for="37527876-679a-494d-8d36-3a66cf4e32c4" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 {color: black;background-color: white;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 pre{padding: 0;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-toggleable {background-color: white;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-item {z-index: 1;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-parallel-item:only-child::after {width: 0;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb642c3b-8937-42e4-a8bd-1d2dcc8b45d8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6593fc45-8118-4964-aa4e-52904fad65e9" type="checkbox" ><label for="6593fc45-8118-4964-aa4e-52904fad65e9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da3cfa7f-3adc-4b3a-b439-93aa8be0b29d" type="checkbox" ><label for="da3cfa7f-3adc-4b3a-b439-93aa8be0b29d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f1832c3-c6f9-447c-b148-81046283d2b5" type="checkbox" ><label for="0f1832c3-c6f9-447c-b148-81046283d2b5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3c95234-68e9-43a7-8a9a-9d8ef954ee26" type="checkbox" ><label for="f3c95234-68e9-43a7-8a9a-9d8ef954ee26" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ff0e947-bb91-4672-9703-04c803d3bb87" type="checkbox" ><label for="9ff0e947-bb91-4672-9703-04c803d3bb87" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee9344e8-fdad-46b2-9022-1f8211821966" type="checkbox" ><label for="ee9344e8-fdad-46b2-9022-1f8211821966" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86514b06-536b-4734-8cc2-2e13acede43d" type="checkbox" ><label for="86514b06-536b-4734-8cc2-2e13acede43d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3cfa9fc-3704-459f-bba4-5db0c6740c91" type="checkbox" ><label for="c3cfa9fc-3704-459f-bba4-5db0c6740c91" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb306c58-79a1-42b9-8a65-7c3419e98e93" type="checkbox" ><label for="bb306c58-79a1-42b9-8a65-7c3419e98e93" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 {color: black;background-color: white;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 pre{padding: 0;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-toggleable {background-color: white;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-item {z-index: 1;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-parallel-item:only-child::after {width: 0;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b550a301-4f51-4dc9-87e7-cfea69ad1b85" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff6308c3-bc8f-4e12-a485-f56329a9bf4b" type="checkbox" ><label for="ff6308c3-bc8f-4e12-a485-f56329a9bf4b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="972de4a1-388e-4914-a777-6274e3529e84" type="checkbox" ><label for="972de4a1-388e-4914-a777-6274e3529e84" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b34cdf32-4618-4223-9910-fa11593f8ae6" type="checkbox" ><label for="b34cdf32-4618-4223-9910-fa11593f8ae6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24f94aaf-f6c5-4b0a-b45f-effd58587926" type="checkbox" ><label for="24f94aaf-f6c5-4b0a-b45f-effd58587926" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12c220be-2fce-4175-92c2-3abe407e245d" type="checkbox" ><label for="12c220be-2fce-4175-92c2-3abe407e245d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45044566-4e1e-4892-bef0-196a44cf6f2e" type="checkbox" ><label for="45044566-4e1e-4892-bef0-196a44cf6f2e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f009ad8-317f-4a48-b7e1-68281b45a028" type="checkbox" ><label for="1f009ad8-317f-4a48-b7e1-68281b45a028" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c09ae7eb-10e9-4b03-a11a-f2d86389efec" type="checkbox" ><label for="c09ae7eb-10e9-4b03-a11a-f2d86389efec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f57e966-130c-4495-803a-578a6e5a52c1" type="checkbox" ><label for="3f57e966-130c-4495-803a-578a6e5a52c1" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
