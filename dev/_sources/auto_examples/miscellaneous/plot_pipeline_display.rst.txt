
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 {color: black;background-color: white;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 pre{padding: 0;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-toggleable {background-color: white;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-item {z-index: 1;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-parallel-item:only-child::after {width: 0;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d8b20a8f-eefc-49fc-9c8c-564dd2479aa3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f71c6c1-3ff1-451d-bb7d-1a8083baec93" type="checkbox" ><label for="3f71c6c1-3ff1-451d-bb7d-1a8083baec93" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd190799-dc4f-4162-8732-55aec01f124c" type="checkbox" ><label for="bd190799-dc4f-4162-8732-55aec01f124c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09ab64a6-7970-4043-b263-e87ba40eb527" type="checkbox" ><label for="09ab64a6-7970-4043-b263-e87ba40eb527" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a667a951-a971-41b6-850b-2ae0266894c2 {color: black;background-color: white;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 pre{padding: 0;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-toggleable {background-color: white;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-item {z-index: 1;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-parallel-item:only-child::after {width: 0;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a667a951-a971-41b6-850b-2ae0266894c2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a667a951-a971-41b6-850b-2ae0266894c2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="595e5cae-2020-45cd-9fd9-9ad3013957df" type="checkbox" ><label for="595e5cae-2020-45cd-9fd9-9ad3013957df" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48c8e4a8-c017-4cd3-92d6-1f9aaf23ec54" type="checkbox" ><label for="48c8e4a8-c017-4cd3-92d6-1f9aaf23ec54" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="710f2a1f-eba8-43ee-b705-2b7aa8117169" type="checkbox" ><label for="710f2a1f-eba8-43ee-b705-2b7aa8117169" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3061a20-e7ca-47df-b2d7-ca0ac655a8d6" type="checkbox" ><label for="d3061a20-e7ca-47df-b2d7-ca0ac655a8d6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 {color: black;background-color: white;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 pre{padding: 0;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-toggleable {background-color: white;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-estimator:hover {background-color: #d4ebff;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-item {z-index: 1;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-parallel-item:only-child::after {width: 0;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-11da7e90-f22e-4438-92d9-1a6c87210a66 div.sk-text-repr-fallback {display: none;}</style><div id="sk-11da7e90-f22e-4438-92d9-1a6c87210a66" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a92c027f-2ea4-4c4b-82c7-00889352f06a" type="checkbox" ><label for="a92c027f-2ea4-4c4b-82c7-00889352f06a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9af015b4-7e0d-4b19-ac88-a1ab23741f79" type="checkbox" ><label for="9af015b4-7e0d-4b19-ac88-a1ab23741f79" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3b3067a-efbf-4c45-a9f7-ee34c90eb43e" type="checkbox" ><label for="c3b3067a-efbf-4c45-a9f7-ee34c90eb43e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 {color: black;background-color: white;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 pre{padding: 0;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-toggleable {background-color: white;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-item {z-index: 1;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-parallel-item:only-child::after {width: 0;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ecca598a-6dda-45d7-9c7a-d4cbee37c632" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc501a9b-e0f8-4b3c-8ed6-6721ff37002b" type="checkbox" ><label for="dc501a9b-e0f8-4b3c-8ed6-6721ff37002b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d92ea725-f508-4e3b-a66e-f1af95a99ec6" type="checkbox" ><label for="d92ea725-f508-4e3b-a66e-f1af95a99ec6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d219f2be-3217-48b3-83ad-4c45d6c4fbbd" type="checkbox" ><label for="d219f2be-3217-48b3-83ad-4c45d6c4fbbd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a01dd777-146f-46d9-99cf-2205c819a9dd" type="checkbox" ><label for="a01dd777-146f-46d9-99cf-2205c819a9dd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a88711ba-5d09-4ae9-86bd-6cd987dbd353" type="checkbox" ><label for="a88711ba-5d09-4ae9-86bd-6cd987dbd353" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9339fc1a-227f-4877-837b-ed35a8f89a83" type="checkbox" ><label for="9339fc1a-227f-4877-837b-ed35a8f89a83" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09e3512e-ece6-450d-ae58-07070554ce6a" type="checkbox" ><label for="09e3512e-ece6-450d-ae58-07070554ce6a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f805d0e-d4c9-4ec0-9511-dff694eb7afb" type="checkbox" ><label for="0f805d0e-d4c9-4ec0-9511-dff694eb7afb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54886fe0-5c67-428f-84f8-a3789e27f13b" type="checkbox" ><label for="54886fe0-5c67-428f-84f8-a3789e27f13b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 {color: black;background-color: white;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 pre{padding: 0;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-toggleable {background-color: white;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-item {z-index: 1;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-parallel-item:only-child::after {width: 0;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-64fc94f9-4020-451e-bcc5-45ba5d24ced2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39f88849-6ec8-4d5f-bd44-b829a0b32189" type="checkbox" ><label for="39f88849-6ec8-4d5f-bd44-b829a0b32189" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d5e7dea-9510-495e-8e6e-8244af620c2e" type="checkbox" ><label for="1d5e7dea-9510-495e-8e6e-8244af620c2e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c939dfc-9f71-408a-9a70-7d2127ad88a3" type="checkbox" ><label for="0c939dfc-9f71-408a-9a70-7d2127ad88a3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cfbbe83-1f30-452e-8291-c9047eeb0181" type="checkbox" ><label for="9cfbbe83-1f30-452e-8291-c9047eeb0181" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00142429-10a2-46ca-b998-100ae7ad79eb" type="checkbox" ><label for="00142429-10a2-46ca-b998-100ae7ad79eb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8845521-5e64-47bc-ad6b-1d0671e3a299" type="checkbox" ><label for="a8845521-5e64-47bc-ad6b-1d0671e3a299" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27451e7d-5e08-4366-ae14-9c8f5cb0d7ec" type="checkbox" ><label for="27451e7d-5e08-4366-ae14-9c8f5cb0d7ec" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd714a74-4247-4072-8b75-6fe1f904906f" type="checkbox" ><label for="dd714a74-4247-4072-8b75-6fe1f904906f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5437bc0-1138-4dbb-b9a4-1fc7ee12222b" type="checkbox" ><label for="d5437bc0-1138-4dbb-b9a4-1fc7ee12222b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.120 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
