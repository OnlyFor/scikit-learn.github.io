
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 {color: black;background-color: white;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 pre{padding: 0;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-toggleable {background-color: white;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-item {z-index: 1;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-parallel-item:only-child::after {width: 0;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cc4123a2-2a86-43a8-8a98-2c5b4d574c24" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83f9255a-5610-4e66-99c5-f190a628d240" type="checkbox" ><label for="83f9255a-5610-4e66-99c5-f190a628d240" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="460451a7-da23-4f91-b29e-219554e55764" type="checkbox" ><label for="460451a7-da23-4f91-b29e-219554e55764" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e420332-0cf1-451a-bfcf-4f68dea1406c" type="checkbox" ><label for="3e420332-0cf1-451a-bfcf-4f68dea1406c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b980ef2b-3866-4853-bb42-d424c8d60404 {color: black;background-color: white;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 pre{padding: 0;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-toggleable {background-color: white;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-item {z-index: 1;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-parallel-item:only-child::after {width: 0;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b980ef2b-3866-4853-bb42-d424c8d60404 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b980ef2b-3866-4853-bb42-d424c8d60404" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a9e5fcc-ff09-4914-bd46-d8183fd7743b" type="checkbox" ><label for="1a9e5fcc-ff09-4914-bd46-d8183fd7743b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42e53450-2f4d-43dc-a20e-c2d80aed91ee" type="checkbox" ><label for="42e53450-2f4d-43dc-a20e-c2d80aed91ee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03321eab-8c0d-4dbf-9968-6b56213bf5fa" type="checkbox" ><label for="03321eab-8c0d-4dbf-9968-6b56213bf5fa" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff7c148d-f8b8-498b-b0c7-cb2d6031f64c" type="checkbox" ><label for="ff7c148d-f8b8-498b-b0c7-cb2d6031f64c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca {color: black;background-color: white;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca pre{padding: 0;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-toggleable {background-color: white;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-estimator:hover {background-color: #d4ebff;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-item {z-index: 1;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-parallel-item:only-child::after {width: 0;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca div.sk-text-repr-fallback {display: none;}</style><div id="sk-b4d6b65a-1679-4b45-9ce7-621b51e1edca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7b0d327-8462-45ee-9a4a-6327255d9e85" type="checkbox" ><label for="f7b0d327-8462-45ee-9a4a-6327255d9e85" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5740e10-a464-48de-b462-a501258bf5ac" type="checkbox" ><label for="d5740e10-a464-48de-b462-a501258bf5ac" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3f18861-809a-472b-b9d0-0b389255cddd" type="checkbox" ><label for="b3f18861-809a-472b-b9d0-0b389255cddd" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2ad86571-15be-461b-9785-33908955b6af {color: black;background-color: white;}#sk-2ad86571-15be-461b-9785-33908955b6af pre{padding: 0;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-toggleable {background-color: white;}#sk-2ad86571-15be-461b-9785-33908955b6af label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2ad86571-15be-461b-9785-33908955b6af label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2ad86571-15be-461b-9785-33908955b6af label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2ad86571-15be-461b-9785-33908955b6af input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2ad86571-15be-461b-9785-33908955b6af input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ad86571-15be-461b-9785-33908955b6af input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-estimator:hover {background-color: #d4ebff;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-item {z-index: 1;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-parallel-item:only-child::after {width: 0;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2ad86571-15be-461b-9785-33908955b6af div.sk-text-repr-fallback {display: none;}</style><div id="sk-2ad86571-15be-461b-9785-33908955b6af" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0245c37-2f02-4fde-beaf-b3f80de3eec1" type="checkbox" ><label for="f0245c37-2f02-4fde-beaf-b3f80de3eec1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bdeeaa9-3f77-4989-b29b-1dbc5536351b" type="checkbox" ><label for="8bdeeaa9-3f77-4989-b29b-1dbc5536351b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44afa031-82b6-4e32-95b2-16476baa3dcd" type="checkbox" ><label for="44afa031-82b6-4e32-95b2-16476baa3dcd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9eedb56-ec5f-4fc7-8010-7e6d36caf89a" type="checkbox" ><label for="f9eedb56-ec5f-4fc7-8010-7e6d36caf89a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4513d9ed-df9e-4915-81bd-5822e05c0a4f" type="checkbox" ><label for="4513d9ed-df9e-4915-81bd-5822e05c0a4f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a208af4a-9bae-4537-9786-50553210e590" type="checkbox" ><label for="a208af4a-9bae-4537-9786-50553210e590" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aafc2c4b-cf3c-46b3-b256-74539b22fcad" type="checkbox" ><label for="aafc2c4b-cf3c-46b3-b256-74539b22fcad" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="244c188c-7f61-4428-aded-925bce19a046" type="checkbox" ><label for="244c188c-7f61-4428-aded-925bce19a046" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="540e7ab4-6b09-4b20-901f-e56288ad0413" type="checkbox" ><label for="540e7ab4-6b09-4b20-901f-e56288ad0413" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 {color: black;background-color: white;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 pre{padding: 0;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-toggleable {background-color: white;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-estimator:hover {background-color: #d4ebff;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-item {z-index: 1;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-parallel-item:only-child::after {width: 0;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-895e52a1-5409-4e76-a1ec-f99d85e3d968 div.sk-text-repr-fallback {display: none;}</style><div id="sk-895e52a1-5409-4e76-a1ec-f99d85e3d968" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc80fabe-c81b-4786-a69b-9b3d1facab6b" type="checkbox" ><label for="fc80fabe-c81b-4786-a69b-9b3d1facab6b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acad3bf0-dade-4619-b064-15f43e582395" type="checkbox" ><label for="acad3bf0-dade-4619-b064-15f43e582395" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f3ed61b-030e-4d0d-8467-5597327a465f" type="checkbox" ><label for="2f3ed61b-030e-4d0d-8467-5597327a465f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b87b28f-0ad8-4822-b2b7-ae1b65fa1319" type="checkbox" ><label for="6b87b28f-0ad8-4822-b2b7-ae1b65fa1319" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9db1c00-bcc5-4a00-8a99-c43ce82c098c" type="checkbox" ><label for="b9db1c00-bcc5-4a00-8a99-c43ce82c098c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41d4e009-a3fb-40fc-9649-7dd1638f738d" type="checkbox" ><label for="41d4e009-a3fb-40fc-9649-7dd1638f738d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b36bed3-368e-428a-b3fe-9bd94b7551c5" type="checkbox" ><label for="5b36bed3-368e-428a-b3fe-9bd94b7551c5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a18c441-4025-4ec7-8119-95ba1a1265c5" type="checkbox" ><label for="7a18c441-4025-4ec7-8119-95ba1a1265c5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18e56bfa-76e3-4a45-9c75-63d4e1fccd29" type="checkbox" ><label for="18e56bfa-76e3-4a45-9c75-63d4e1fccd29" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
