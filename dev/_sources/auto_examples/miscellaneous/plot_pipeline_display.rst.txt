
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-514d9baf-b572-4e99-a6f6-2473f923f378 {color: black;background-color: white;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 pre{padding: 0;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-toggleable {background-color: white;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-estimator:hover {background-color: #d4ebff;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-item {z-index: 1;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-parallel-item:only-child::after {width: 0;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-container {display: inline-block;position: relative;}#sk-514d9baf-b572-4e99-a6f6-2473f923f378 div.sk-text-repr-fallback {display: none;}</style><div id="sk-514d9baf-b572-4e99-a6f6-2473f923f378" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25c79a0a-3901-43cd-9226-b972540a0af6" type="checkbox" ><label class="sk-toggleable__label" for="25c79a0a-3901-43cd-9226-b972540a0af6">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d38f803-1434-4868-9cbd-8ee5a5da6ac8" type="checkbox" ><label class="sk-toggleable__label" for="2d38f803-1434-4868-9cbd-8ee5a5da6ac8">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66fe4c48-4196-4445-abd3-5a92573a8978" type="checkbox" ><label class="sk-toggleable__label" for="66fe4c48-4196-4445-abd3-5a92573a8978">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 {color: black;background-color: white;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 pre{padding: 0;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-toggleable {background-color: white;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-estimator:hover {background-color: #d4ebff;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-item {z-index: 1;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-parallel-item:only-child::after {width: 0;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-container {display: inline-block;position: relative;}#sk-08e1c7c4-26c8-4d7c-a236-602a30341e04 div.sk-text-repr-fallback {display: none;}</style><div id="sk-08e1c7c4-26c8-4d7c-a236-602a30341e04" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db6b240e-24d2-4d93-8a0f-1e2c74beada8" type="checkbox" ><label class="sk-toggleable__label" for="db6b240e-24d2-4d93-8a0f-1e2c74beada8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10d57937-a82d-48fb-88a1-af736046a1ad" type="checkbox" ><label class="sk-toggleable__label" for="10d57937-a82d-48fb-88a1-af736046a1ad">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0f00206-b454-45a6-819b-1ddd2c01323d" type="checkbox" ><label class="sk-toggleable__label" for="f0f00206-b454-45a6-819b-1ddd2c01323d">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e9f03cf-e1ab-4b33-9c71-7a98b3d9dd4b" type="checkbox" ><label class="sk-toggleable__label" for="1e9f03cf-e1ab-4b33-9c71-7a98b3d9dd4b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d {color: black;background-color: white;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d pre{padding: 0;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-toggleable {background-color: white;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-item {z-index: 1;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-parallel-item:only-child::after {width: 0;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-container {display: inline-block;position: relative;}#sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-db5368cb-333e-4fd8-8c4c-d9f4d690ea3d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d4c5b77-6184-45fe-baae-bdcc00e04b88" type="checkbox" ><label class="sk-toggleable__label" for="0d4c5b77-6184-45fe-baae-bdcc00e04b88">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fab08a81-d1b8-404d-88b5-b6ac6f9a6e53" type="checkbox" ><label class="sk-toggleable__label" for="fab08a81-d1b8-404d-88b5-b6ac6f9a6e53">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8e5cacb-c38d-4875-b68d-f7cba5124a10" type="checkbox" ><label class="sk-toggleable__label" for="d8e5cacb-c38d-4875-b68d-f7cba5124a10">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 {color: black;background-color: white;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 pre{padding: 0;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-toggleable {background-color: white;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-item {z-index: 1;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-parallel-item:only-child::after {width: 0;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-container {display: inline-block;position: relative;}#sk-9e12a14c-c001-4db0-b4d3-341c79af3040 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9e12a14c-c001-4db0-b4d3-341c79af3040" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd68a91b-79dd-4226-882f-c62bd7dad573" type="checkbox" ><label class="sk-toggleable__label" for="dd68a91b-79dd-4226-882f-c62bd7dad573">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42156490-51f1-462e-95f0-e5505285972e" type="checkbox" ><label class="sk-toggleable__label" for="42156490-51f1-462e-95f0-e5505285972e">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a35e372-cff6-4012-8f79-ea6277861c1b" type="checkbox" ><label class="sk-toggleable__label" for="1a35e372-cff6-4012-8f79-ea6277861c1b">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="007a0fc1-e97a-46d3-a2cb-0287bacbd8c7" type="checkbox" ><label class="sk-toggleable__label" for="007a0fc1-e97a-46d3-a2cb-0287bacbd8c7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14149506-daf6-48af-88a3-9ca1b5498bfe" type="checkbox" ><label class="sk-toggleable__label" for="14149506-daf6-48af-88a3-9ca1b5498bfe">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bab22020-fb71-4b4d-8802-5f24c3afbf54" type="checkbox" ><label class="sk-toggleable__label" for="bab22020-fb71-4b4d-8802-5f24c3afbf54">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fd0c9ee-2780-485f-aa90-3d8c729285e2" type="checkbox" ><label class="sk-toggleable__label" for="1fd0c9ee-2780-485f-aa90-3d8c729285e2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a92a77d8-1fe6-41a3-a5d5-87ee0c1e534b" type="checkbox" ><label class="sk-toggleable__label" for="a92a77d8-1fe6-41a3-a5d5-87ee0c1e534b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89f79380-eb92-43b4-a3b3-f1cff73e2054" type="checkbox" ><label class="sk-toggleable__label" for="89f79380-eb92-43b4-a3b3-f1cff73e2054">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d0911253-1b71-4183-9b9a-5382ee3d771d {color: black;background-color: white;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d pre{padding: 0;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-toggleable {background-color: white;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-estimator:hover {background-color: #d4ebff;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-item {z-index: 1;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-parallel-item:only-child::after {width: 0;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-container {display: inline-block;position: relative;}#sk-d0911253-1b71-4183-9b9a-5382ee3d771d div.sk-text-repr-fallback {display: none;}</style><div id="sk-d0911253-1b71-4183-9b9a-5382ee3d771d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da64a143-f2c6-4a9f-a720-26e333bae414" type="checkbox" ><label class="sk-toggleable__label" for="da64a143-f2c6-4a9f-a720-26e333bae414">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c77c9af8-7d6f-4ebd-bd19-168f13e074a4" type="checkbox" ><label class="sk-toggleable__label" for="c77c9af8-7d6f-4ebd-bd19-168f13e074a4">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc2967f8-ba4e-4148-9451-040dc1462f1a" type="checkbox" ><label class="sk-toggleable__label" for="cc2967f8-ba4e-4148-9451-040dc1462f1a">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55524bc7-98b0-4b67-b876-c7bc14a5b010" type="checkbox" ><label class="sk-toggleable__label" for="55524bc7-98b0-4b67-b876-c7bc14a5b010">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de66783f-7bd6-44f4-a54a-752d0fdb9c93" type="checkbox" ><label class="sk-toggleable__label" for="de66783f-7bd6-44f4-a54a-752d0fdb9c93">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae7af70a-3bda-4391-9cf0-8c4e987db071" type="checkbox" ><label class="sk-toggleable__label" for="ae7af70a-3bda-4391-9cf0-8c4e987db071">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00ae3818-8f6e-418f-9604-2cb1134c92f3" type="checkbox" ><label class="sk-toggleable__label" for="00ae3818-8f6e-418f-9604-2cb1134c92f3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a292d7b3-cf1c-4953-bbf3-aef6689bd9e4" type="checkbox" ><label class="sk-toggleable__label" for="a292d7b3-cf1c-4953-bbf3-aef6689bd9e4">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d3a38de-6764-4311-87f8-a6d1375856af" type="checkbox" ><label class="sk-toggleable__label" for="0d3a38de-6764-4311-87f8-a6d1375856af">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.090 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
