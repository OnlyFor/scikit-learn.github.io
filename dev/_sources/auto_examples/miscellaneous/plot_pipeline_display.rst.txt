
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b1e042e6-86e0-4794-86c6-4717be19a20d {color: black;background-color: white;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d pre{padding: 0;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-toggleable {background-color: white;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-estimator:hover {background-color: #d4ebff;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-item {z-index: 1;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-parallel-item:only-child::after {width: 0;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b1e042e6-86e0-4794-86c6-4717be19a20d div.sk-text-repr-fallback {display: none;}</style><div id="sk-b1e042e6-86e0-4794-86c6-4717be19a20d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bca70dc-270b-418b-9436-1f1ca72e0da6" type="checkbox" ><label for="0bca70dc-270b-418b-9436-1f1ca72e0da6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f0b6e82-0bc5-4cfa-b6d0-a3b3281b4839" type="checkbox" ><label for="7f0b6e82-0bc5-4cfa-b6d0-a3b3281b4839" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5c09e9b-d579-4716-b81e-b90c539356a5" type="checkbox" ><label for="b5c09e9b-d579-4716-b81e-b90c539356a5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5392de8c-9d47-469a-8068-ebfb4df18232 {color: black;background-color: white;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 pre{padding: 0;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-toggleable {background-color: white;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-item {z-index: 1;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-parallel-item:only-child::after {width: 0;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5392de8c-9d47-469a-8068-ebfb4df18232 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5392de8c-9d47-469a-8068-ebfb4df18232" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b729f712-a147-4007-9b3c-6a67464d07b3" type="checkbox" ><label for="b729f712-a147-4007-9b3c-6a67464d07b3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2553250-9b74-41df-81a6-bdea7a1da3dc" type="checkbox" ><label for="d2553250-9b74-41df-81a6-bdea7a1da3dc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03e2da16-7042-44b6-a22f-d7d1898ac59f" type="checkbox" ><label for="03e2da16-7042-44b6-a22f-d7d1898ac59f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="226e1b6f-9932-4ad7-bdbc-8f1c850f9b62" type="checkbox" ><label for="226e1b6f-9932-4ad7-bdbc-8f1c850f9b62" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 {color: black;background-color: white;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 pre{padding: 0;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-toggleable {background-color: white;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-item {z-index: 1;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-parallel-item:only-child::after {width: 0;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2188261d-b30a-4a50-afb3-81a63d362cd6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2188261d-b30a-4a50-afb3-81a63d362cd6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aad21923-b44e-4cec-ae45-c45cb4a8c12e" type="checkbox" ><label for="aad21923-b44e-4cec-ae45-c45cb4a8c12e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec960019-65c8-4880-9850-4c3d30c07146" type="checkbox" ><label for="ec960019-65c8-4880-9850-4c3d30c07146" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24329e81-6972-4071-abae-0e8ddcf09a8c" type="checkbox" ><label for="24329e81-6972-4071-abae-0e8ddcf09a8c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd {color: black;background-color: white;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd pre{padding: 0;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-toggleable {background-color: white;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-estimator:hover {background-color: #d4ebff;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-item {z-index: 1;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-parallel-item:only-child::after {width: 0;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd div.sk-text-repr-fallback {display: none;}</style><div id="sk-265ce264-d6b0-40a4-bd6e-3f0637eefdfd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42747b1d-f194-46a5-b7ce-722a1cfc3f3b" type="checkbox" ><label for="42747b1d-f194-46a5-b7ce-722a1cfc3f3b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14c2f02c-b0fd-439d-91ae-4b6f84d3ac70" type="checkbox" ><label for="14c2f02c-b0fd-439d-91ae-4b6f84d3ac70" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47685d96-ac67-42e8-a533-d3254c35327b" type="checkbox" ><label for="47685d96-ac67-42e8-a533-d3254c35327b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="004f38eb-3d71-4c43-9f7c-ea5bea426412" type="checkbox" ><label for="004f38eb-3d71-4c43-9f7c-ea5bea426412" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3dac7950-7a4c-49c1-a276-64f079d32188" type="checkbox" ><label for="3dac7950-7a4c-49c1-a276-64f079d32188" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94e49767-3ee2-4cbc-bd89-64b8c06fc8cc" type="checkbox" ><label for="94e49767-3ee2-4cbc-bd89-64b8c06fc8cc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83b7af7e-485b-4a96-8985-6fc01a94650b" type="checkbox" ><label for="83b7af7e-485b-4a96-8985-6fc01a94650b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69595600-75d2-4eb3-ade2-ec633208b301" type="checkbox" ><label for="69595600-75d2-4eb3-ade2-ec633208b301" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd2fd411-0571-4d0b-88a0-cd9aa172701a" type="checkbox" ><label for="fd2fd411-0571-4d0b-88a0-cd9aa172701a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 {color: black;background-color: white;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 pre{padding: 0;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-toggleable {background-color: white;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-item {z-index: 1;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-parallel-item:only-child::after {width: 0;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a5cb5d9-1774-44e6-80b1-7a82f57c5099" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35ab76b1-8bac-45e0-9728-b70459e102fa" type="checkbox" ><label for="35ab76b1-8bac-45e0-9728-b70459e102fa" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a2009fe-8158-49de-921a-5e720e1f29e7" type="checkbox" ><label for="2a2009fe-8158-49de-921a-5e720e1f29e7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="014993a4-4bc0-452b-8a2d-a141965969d2" type="checkbox" ><label for="014993a4-4bc0-452b-8a2d-a141965969d2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2656d098-999e-4b14-aceb-dbf58db2c100" type="checkbox" ><label for="2656d098-999e-4b14-aceb-dbf58db2c100" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0457fa91-22ea-4d0b-88d5-24ddb2177f82" type="checkbox" ><label for="0457fa91-22ea-4d0b-88d5-24ddb2177f82" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6135c402-9ab7-40f3-8f46-749f9340e328" type="checkbox" ><label for="6135c402-9ab7-40f3-8f46-749f9340e328" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cef60967-de1f-45f4-873b-da58b794a0c9" type="checkbox" ><label for="cef60967-de1f-45f4-873b-da58b794a0c9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92780b11-081b-4db8-a426-c58a32f76df9" type="checkbox" ><label for="92780b11-081b-4db8-a426-c58a32f76df9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce0e018d-8a8f-4244-8633-2d6d9e7587eb" type="checkbox" ><label for="ce0e018d-8a8f-4244-8633-2d6d9e7587eb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
