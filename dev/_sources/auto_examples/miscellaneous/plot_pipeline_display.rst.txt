
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cba575dc-f4b5-45f9-ac12-6152e687edee {color: black;background-color: white;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee pre{padding: 0;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-toggleable {background-color: white;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-estimator:hover {background-color: #d4ebff;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-item {z-index: 1;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-parallel-item:only-child::after {width: 0;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-container {display: inline-block;position: relative;}#sk-cba575dc-f4b5-45f9-ac12-6152e687edee div.sk-text-repr-fallback {display: none;}</style><div id="sk-cba575dc-f4b5-45f9-ac12-6152e687edee" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54b29fda-b4ec-4509-b20c-1bab427c6244" type="checkbox" ><label class="sk-toggleable__label" for="54b29fda-b4ec-4509-b20c-1bab427c6244">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b361a9c-fb7d-4de9-b46a-b9e780edc8ee" type="checkbox" ><label class="sk-toggleable__label" for="3b361a9c-fb7d-4de9-b46a-b9e780edc8ee">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11aabbf2-38ca-4f7d-bd91-c1cd09fc20d6" type="checkbox" ><label class="sk-toggleable__label" for="11aabbf2-38ca-4f7d-bd91-c1cd09fc20d6">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-44b51c93-4948-4713-bae2-a5f0f706af3f {color: black;background-color: white;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f pre{padding: 0;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-toggleable {background-color: white;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-estimator:hover {background-color: #d4ebff;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-item {z-index: 1;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-parallel-item:only-child::after {width: 0;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-container {display: inline-block;position: relative;}#sk-44b51c93-4948-4713-bae2-a5f0f706af3f div.sk-text-repr-fallback {display: none;}</style><div id="sk-44b51c93-4948-4713-bae2-a5f0f706af3f" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a086fb71-7c78-4412-a4de-34e2c2d26ba4" type="checkbox" ><label class="sk-toggleable__label" for="a086fb71-7c78-4412-a4de-34e2c2d26ba4">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48daf53e-f2a4-4c31-8646-6ad204a607b1" type="checkbox" ><label class="sk-toggleable__label" for="48daf53e-f2a4-4c31-8646-6ad204a607b1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc6df017-01a0-4a96-b495-be8f1ae7f1ff" type="checkbox" ><label class="sk-toggleable__label" for="fc6df017-01a0-4a96-b495-be8f1ae7f1ff">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a01bbaf0-b459-4d99-bd42-c135daea5d11" type="checkbox" ><label class="sk-toggleable__label" for="a01bbaf0-b459-4d99-bd42-c135daea5d11">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 {color: black;background-color: white;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 pre{padding: 0;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-toggleable {background-color: white;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-item {z-index: 1;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-parallel-item:only-child::after {width: 0;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-container {display: inline-block;position: relative;}#sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2fb91e55-7dbe-4ffb-946f-c8f7b29abe37" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="618d639e-8981-4987-bd5e-f1e5b7434828" type="checkbox" ><label class="sk-toggleable__label" for="618d639e-8981-4987-bd5e-f1e5b7434828">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33b30f6f-5772-4533-9cc6-c6b93bef8865" type="checkbox" ><label class="sk-toggleable__label" for="33b30f6f-5772-4533-9cc6-c6b93bef8865">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcba1842-1acb-4390-a65d-b8bea40ab5e9" type="checkbox" ><label class="sk-toggleable__label" for="bcba1842-1acb-4390-a65d-b8bea40ab5e9">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 {color: black;background-color: white;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 pre{padding: 0;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-toggleable {background-color: white;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-item {z-index: 1;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-parallel-item:only-child::after {width: 0;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-container {display: inline-block;position: relative;}#sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b3b207b7-8230-4351-a9cc-8f6fb0d1ae76" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1c25541-ebab-4b8b-b241-5fabc77d72f9" type="checkbox" ><label class="sk-toggleable__label" for="c1c25541-ebab-4b8b-b241-5fabc77d72f9">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5575eb1c-e12e-438c-8c6c-97236493c5f0" type="checkbox" ><label class="sk-toggleable__label" for="5575eb1c-e12e-438c-8c6c-97236493c5f0">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3999f85e-bc65-4e28-a9be-cbd8abffac32" type="checkbox" ><label class="sk-toggleable__label" for="3999f85e-bc65-4e28-a9be-cbd8abffac32">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c1f7d32-6348-4ca4-ae45-4bf6439d6dc6" type="checkbox" ><label class="sk-toggleable__label" for="3c1f7d32-6348-4ca4-ae45-4bf6439d6dc6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b085f516-0ad5-4c73-9186-213d31f5f2cb" type="checkbox" ><label class="sk-toggleable__label" for="b085f516-0ad5-4c73-9186-213d31f5f2cb">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e96dd5c1-23a0-439e-a407-3b095bb80042" type="checkbox" ><label class="sk-toggleable__label" for="e96dd5c1-23a0-439e-a407-3b095bb80042">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="775e5e9e-a89b-4a15-9755-c1ae0a59b893" type="checkbox" ><label class="sk-toggleable__label" for="775e5e9e-a89b-4a15-9755-c1ae0a59b893">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35bb618b-4bf1-45f9-b667-bb9955bb2a5a" type="checkbox" ><label class="sk-toggleable__label" for="35bb618b-4bf1-45f9-b667-bb9955bb2a5a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89dab7cc-50db-429c-9202-3c3eda75db7a" type="checkbox" ><label class="sk-toggleable__label" for="89dab7cc-50db-429c-9202-3c3eda75db7a">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb {color: black;background-color: white;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb pre{padding: 0;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-toggleable {background-color: white;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-estimator:hover {background-color: #d4ebff;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-item {z-index: 1;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-parallel-item:only-child::after {width: 0;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-container {display: inline-block;position: relative;}#sk-fb99ccab-49da-4efd-9b5f-5073090af6fb div.sk-text-repr-fallback {display: none;}</style><div id="sk-fb99ccab-49da-4efd-9b5f-5073090af6fb" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3063aff6-1dd0-4997-b092-f13a1ee4383a" type="checkbox" ><label class="sk-toggleable__label" for="3063aff6-1dd0-4997-b092-f13a1ee4383a">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47b75703-b117-4bbd-8c8f-eb785cab9fff" type="checkbox" ><label class="sk-toggleable__label" for="47b75703-b117-4bbd-8c8f-eb785cab9fff">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84a4f271-87b1-43a3-8c6a-5e90904a6868" type="checkbox" ><label class="sk-toggleable__label" for="84a4f271-87b1-43a3-8c6a-5e90904a6868">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4351c3b1-cf08-4396-aad2-a828ae406792" type="checkbox" ><label class="sk-toggleable__label" for="4351c3b1-cf08-4396-aad2-a828ae406792">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="badedea9-a152-4c46-bc33-42d4d6543b08" type="checkbox" ><label class="sk-toggleable__label" for="badedea9-a152-4c46-bc33-42d4d6543b08">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cedc5e73-17d4-4565-8849-b31e6349bea2" type="checkbox" ><label class="sk-toggleable__label" for="cedc5e73-17d4-4565-8849-b31e6349bea2">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19266be4-82c4-46a7-b4f0-cb7fba883836" type="checkbox" ><label class="sk-toggleable__label" for="19266be4-82c4-46a7-b4f0-cb7fba883836">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89b07b25-96c4-42b1-8caf-83e338d4013a" type="checkbox" ><label class="sk-toggleable__label" for="89b07b25-96c4-42b1-8caf-83e338d4013a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70f846c0-bd86-4fa9-9e9f-4fc8e244f51b" type="checkbox" ><label class="sk-toggleable__label" for="70f846c0-bd86-4fa9-9e9f-4fc8e244f51b">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.083 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
