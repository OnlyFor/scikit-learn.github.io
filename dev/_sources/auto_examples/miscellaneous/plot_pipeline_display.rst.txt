
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 {color: black;background-color: white;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 pre{padding: 0;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-toggleable {background-color: white;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-item {z-index: 1;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-parallel-item:only-child::after {width: 0;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bd6d1e01-6644-439c-aa14-9d6e31f4ce13" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1acc6b59-24b8-4c5c-be5b-9e4fecf5dd97" type="checkbox" ><label for="1acc6b59-24b8-4c5c-be5b-9e4fecf5dd97" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c071ee9-b444-43c0-97e1-8c056a6d5244" type="checkbox" ><label for="4c071ee9-b444-43c0-97e1-8c056a6d5244" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6af47db3-c219-482b-98f4-5640f1eee644" type="checkbox" ><label for="6af47db3-c219-482b-98f4-5640f1eee644" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 {color: black;background-color: white;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 pre{padding: 0;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-toggleable {background-color: white;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-item {z-index: 1;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-parallel-item:only-child::after {width: 0;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6c27adf6-6ad0-4f8c-8be4-9868355ca986" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62241a5d-e708-4ca0-8dea-15d259c6c203" type="checkbox" ><label for="62241a5d-e708-4ca0-8dea-15d259c6c203" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f4dc251-b5f1-44ce-bc63-afd7c155aa9a" type="checkbox" ><label for="4f4dc251-b5f1-44ce-bc63-afd7c155aa9a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d3cd5ba-7b64-4b3d-8f24-cf9bea3f4bc6" type="checkbox" ><label for="1d3cd5ba-7b64-4b3d-8f24-cf9bea3f4bc6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81d75f11-92a8-4ffa-83e9-0df1b1c99ef5" type="checkbox" ><label for="81d75f11-92a8-4ffa-83e9-0df1b1c99ef5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6251aaca-9933-4441-994f-351e11613cbe {color: black;background-color: white;}#sk-6251aaca-9933-4441-994f-351e11613cbe pre{padding: 0;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-toggleable {background-color: white;}#sk-6251aaca-9933-4441-994f-351e11613cbe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6251aaca-9933-4441-994f-351e11613cbe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6251aaca-9933-4441-994f-351e11613cbe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6251aaca-9933-4441-994f-351e11613cbe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6251aaca-9933-4441-994f-351e11613cbe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6251aaca-9933-4441-994f-351e11613cbe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-estimator:hover {background-color: #d4ebff;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-item {z-index: 1;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-parallel-item:only-child::after {width: 0;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6251aaca-9933-4441-994f-351e11613cbe div.sk-text-repr-fallback {display: none;}</style><div id="sk-6251aaca-9933-4441-994f-351e11613cbe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2acb1566-dc73-4c11-9391-c186c5b8fd92" type="checkbox" ><label for="2acb1566-dc73-4c11-9391-c186c5b8fd92" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab1a2f9d-52c6-44ac-874d-97b6f5afe77d" type="checkbox" ><label for="ab1a2f9d-52c6-44ac-874d-97b6f5afe77d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3beaf659-65b4-4107-bdf5-40733599c8aa" type="checkbox" ><label for="3beaf659-65b4-4107-bdf5-40733599c8aa" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e {color: black;background-color: white;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e pre{padding: 0;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-toggleable {background-color: white;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-item {z-index: 1;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-parallel-item:only-child::after {width: 0;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1b7f6945-780b-426a-8e02-32fb9dd3936e div.sk-text-repr-fallback {display: none;}</style><div id="sk-1b7f6945-780b-426a-8e02-32fb9dd3936e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae66b594-7e8b-44fe-8f8a-db062e877419" type="checkbox" ><label for="ae66b594-7e8b-44fe-8f8a-db062e877419" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fec853b0-352b-4268-aba7-dcb8b6cc5662" type="checkbox" ><label for="fec853b0-352b-4268-aba7-dcb8b6cc5662" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d001ff5-6c79-4633-9656-9afeeec76aef" type="checkbox" ><label for="4d001ff5-6c79-4633-9656-9afeeec76aef" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ca9d1ae-e3df-4805-aeeb-f3eda5c8a6e2" type="checkbox" ><label for="1ca9d1ae-e3df-4805-aeeb-f3eda5c8a6e2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6040575-466d-49b1-84ea-02e071d92d23" type="checkbox" ><label for="a6040575-466d-49b1-84ea-02e071d92d23" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bff1593-08b8-4494-9aa1-1958eada5b00" type="checkbox" ><label for="7bff1593-08b8-4494-9aa1-1958eada5b00" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6e522b0-3147-4110-9353-5ecf9612b098" type="checkbox" ><label for="e6e522b0-3147-4110-9353-5ecf9612b098" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe4f449e-eb16-4a66-a55c-ab69d42295b3" type="checkbox" ><label for="fe4f449e-eb16-4a66-a55c-ab69d42295b3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cf02516-d0a3-48bd-9bd9-2f1ca15f21a8" type="checkbox" ><label for="7cf02516-d0a3-48bd-9bd9-2f1ca15f21a8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f {color: black;background-color: white;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f pre{padding: 0;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-toggleable {background-color: white;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-estimator:hover {background-color: #d4ebff;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-item {z-index: 1;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-parallel-item:only-child::after {width: 0;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f div.sk-text-repr-fallback {display: none;}</style><div id="sk-f77fa816-66e6-4ec0-9052-da19c32c5e1f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7815eaa7-b920-41da-a099-feab18fa413f" type="checkbox" ><label for="7815eaa7-b920-41da-a099-feab18fa413f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83c29620-f613-4333-b020-8b88f0b70c24" type="checkbox" ><label for="83c29620-f613-4333-b020-8b88f0b70c24" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a9dc1dd-1e01-4859-9c4a-d9974430e64c" type="checkbox" ><label for="4a9dc1dd-1e01-4859-9c4a-d9974430e64c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79d2b184-d708-4bd7-a40d-1055f2707dcf" type="checkbox" ><label for="79d2b184-d708-4bd7-a40d-1055f2707dcf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f5f493f-60b2-4288-8a30-456b46f1d7bb" type="checkbox" ><label for="4f5f493f-60b2-4288-8a30-456b46f1d7bb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9737f824-d756-44c7-bae1-8a14894bc707" type="checkbox" ><label for="9737f824-d756-44c7-bae1-8a14894bc707" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6b8e8ae-d641-4273-887a-f9a8500bc053" type="checkbox" ><label for="b6b8e8ae-d641-4273-887a-f9a8500bc053" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7f8a95f-5c5c-462e-9d2e-a3246282cb5c" type="checkbox" ><label for="c7f8a95f-5c5c-462e-9d2e-a3246282cb5c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9d1f060-b440-4048-9a0e-c4551f392195" type="checkbox" ><label for="a9d1f060-b440-4048-9a0e-c4551f392195" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
