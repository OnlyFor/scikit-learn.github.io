
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e {color: black;background-color: white;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e pre{padding: 0;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-toggleable {background-color: white;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-estimator:hover {background-color: #d4ebff;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-item {z-index: 1;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-parallel-item:only-child::after {width: 0;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e div.sk-text-repr-fallback {display: none;}</style><div id="sk-a7f8056c-d81e-4a6d-bc09-78c431a4483e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b74b47fe-6ecd-496d-b60a-71608de9e98e" type="checkbox" ><label for="b74b47fe-6ecd-496d-b60a-71608de9e98e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c481f9a6-6b65-46db-ba85-d1a154cc56cb" type="checkbox" ><label for="c481f9a6-6b65-46db-ba85-d1a154cc56cb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90ab0649-98a7-433e-a0b2-759828a098c6" type="checkbox" ><label for="90ab0649-98a7-433e-a0b2-759828a098c6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea {color: black;background-color: white;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea pre{padding: 0;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-toggleable {background-color: white;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-item {z-index: 1;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-parallel-item:only-child::after {width: 0;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-e32c4052-bbcf-472d-9077-f10eeab5d5ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ff2391a-6140-44a8-b24d-614f5a391289" type="checkbox" ><label for="4ff2391a-6140-44a8-b24d-614f5a391289" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="015264ea-6998-41e8-aae3-ee898f4a1a07" type="checkbox" ><label for="015264ea-6998-41e8-aae3-ee898f4a1a07" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb03c481-3c9d-4aee-8ae8-bb3741b21876" type="checkbox" ><label for="cb03c481-3c9d-4aee-8ae8-bb3741b21876" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79a48150-ff3e-44eb-81e9-8d14e70e1ce0" type="checkbox" ><label for="79a48150-ff3e-44eb-81e9-8d14e70e1ce0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 {color: black;background-color: white;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 pre{padding: 0;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-toggleable {background-color: white;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-item {z-index: 1;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-parallel-item:only-child::after {width: 0;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6355e343-0f03-4e4a-8c16-0d98d0c1e716" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4cdd9da-161f-4cf8-acb5-dd2d60f845fb" type="checkbox" ><label for="e4cdd9da-161f-4cf8-acb5-dd2d60f845fb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="faeb889b-dd8a-4a91-8705-460ea6db7377" type="checkbox" ><label for="faeb889b-dd8a-4a91-8705-460ea6db7377" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="433b52e2-0254-4244-bac8-be1e1e47fe26" type="checkbox" ><label for="433b52e2-0254-4244-bac8-be1e1e47fe26" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 {color: black;background-color: white;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 pre{padding: 0;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-toggleable {background-color: white;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-item {z-index: 1;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-parallel-item:only-child::after {width: 0;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa0382db-a302-40bb-ba21-bb9c8b4a8358" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77cc41f6-1c71-4490-971d-1f3cf333ac80" type="checkbox" ><label for="77cc41f6-1c71-4490-971d-1f3cf333ac80" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f660addb-6128-45d3-9fd2-f68b469c62ca" type="checkbox" ><label for="f660addb-6128-45d3-9fd2-f68b469c62ca" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b614d12-74fa-4a05-a8cf-24e2131bf09b" type="checkbox" ><label for="0b614d12-74fa-4a05-a8cf-24e2131bf09b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49d2a3c8-93d9-42cc-ade0-bdb9a0dbd04d" type="checkbox" ><label for="49d2a3c8-93d9-42cc-ade0-bdb9a0dbd04d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a791d4f2-fb20-4e8c-be97-195af7126d25" type="checkbox" ><label for="a791d4f2-fb20-4e8c-be97-195af7126d25" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b31074e1-a831-47aa-8dd4-52eda6c08cc4" type="checkbox" ><label for="b31074e1-a831-47aa-8dd4-52eda6c08cc4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a054eb6-d8ec-4b50-803d-a6f18ad0973d" type="checkbox" ><label for="3a054eb6-d8ec-4b50-803d-a6f18ad0973d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1b9f9b0-2a39-461f-8f9a-577e7fac2217" type="checkbox" ><label for="b1b9f9b0-2a39-461f-8f9a-577e7fac2217" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37dd21c9-24a5-440c-9f5f-ac30263018e4" type="checkbox" ><label for="37dd21c9-24a5-440c-9f5f-ac30263018e4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 {color: black;background-color: white;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 pre{padding: 0;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-toggleable {background-color: white;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-item {z-index: 1;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-parallel-item:only-child::after {width: 0;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a001fdb3-f0b4-4bcb-b3c7-19950941cf10" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a484d11-2847-4181-9e33-67954c5382b0" type="checkbox" ><label for="3a484d11-2847-4181-9e33-67954c5382b0" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d0d3af1-bf34-4f16-8b37-f383528843bc" type="checkbox" ><label for="2d0d3af1-bf34-4f16-8b37-f383528843bc" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29b39c17-4714-4b9c-a8bf-f5dcc7acba86" type="checkbox" ><label for="29b39c17-4714-4b9c-a8bf-f5dcc7acba86" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da79249b-6dc0-4934-8576-3f2ca610fada" type="checkbox" ><label for="da79249b-6dc0-4934-8576-3f2ca610fada" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3a761d8-7388-4765-8244-08c6c6a725cd" type="checkbox" ><label for="e3a761d8-7388-4765-8244-08c6c6a725cd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="617a7321-5d7e-44b4-b9e9-741e539a5d60" type="checkbox" ><label for="617a7321-5d7e-44b4-b9e9-741e539a5d60" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82b2e0af-ff00-4fbb-aad3-1aa9394a8406" type="checkbox" ><label for="82b2e0af-ff00-4fbb-aad3-1aa9394a8406" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48fb79a6-1571-4c29-a8ef-76adb7746407" type="checkbox" ><label for="48fb79a6-1571-4c29-a8ef-76adb7746407" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e732391-7913-4570-837a-7adba63669e9" type="checkbox" ><label for="4e732391-7913-4570-837a-7adba63669e9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
