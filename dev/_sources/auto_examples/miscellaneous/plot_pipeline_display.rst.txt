
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5bed3e22-1c82-433d-8417-b9f212665b25 {color: black;background-color: white;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 pre{padding: 0;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-toggleable {background-color: white;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-item {z-index: 1;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-parallel-item:only-child::after {width: 0;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5bed3e22-1c82-433d-8417-b9f212665b25 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5bed3e22-1c82-433d-8417-b9f212665b25" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1c160ee-e837-4d63-82d7-2a7a7b6b1b04" type="checkbox" ><label for="e1c160ee-e837-4d63-82d7-2a7a7b6b1b04" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="372d076c-05f7-4440-b7d5-a3aae012eaa9" type="checkbox" ><label for="372d076c-05f7-4440-b7d5-a3aae012eaa9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf2f55cc-c46c-49db-bf67-6d744705569a" type="checkbox" ><label for="cf2f55cc-c46c-49db-bf67-6d744705569a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 {color: black;background-color: white;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 pre{padding: 0;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-toggleable {background-color: white;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-item {z-index: 1;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-parallel-item:only-child::after {width: 0;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f8091fe6-e5cb-4d3c-aa28-36839438a2a2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="306f6be8-da8d-455c-a908-4f2bc2c11dad" type="checkbox" ><label for="306f6be8-da8d-455c-a908-4f2bc2c11dad" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1de12718-9b17-4187-8697-76725bdb1364" type="checkbox" ><label for="1de12718-9b17-4187-8697-76725bdb1364" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6e3ac3a-0b7b-4ce7-b968-8a7acc00158a" type="checkbox" ><label for="e6e3ac3a-0b7b-4ce7-b968-8a7acc00158a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a1d45ba-a7ed-485f-b59c-8c6bf609d722" type="checkbox" ><label for="9a1d45ba-a7ed-485f-b59c-8c6bf609d722" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 {color: black;background-color: white;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 pre{padding: 0;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-toggleable {background-color: white;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-estimator:hover {background-color: #d4ebff;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-item {z-index: 1;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-parallel-item:only-child::after {width: 0;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76 div.sk-text-repr-fallback {display: none;}</style><div id="sk-54a1c823-4e5a-4166-af3f-02e6bcc03b76" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b49e5b66-31ae-49dd-a241-23c5e4a1fb8a" type="checkbox" ><label for="b49e5b66-31ae-49dd-a241-23c5e4a1fb8a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eac49db-9ebd-46b6-b926-53010a3f7b3c" type="checkbox" ><label for="0eac49db-9ebd-46b6-b926-53010a3f7b3c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec2f9924-04a1-42e8-9ccc-fd472ac44177" type="checkbox" ><label for="ec2f9924-04a1-42e8-9ccc-fd472ac44177" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 {color: black;background-color: white;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 pre{padding: 0;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-toggleable {background-color: white;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-item {z-index: 1;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-parallel-item:only-child::after {width: 0;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ca8793f8-d2aa-49f1-b6d9-de3d9fbdc104" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1392f56a-ddfa-47f1-a407-978e9597ca2a" type="checkbox" ><label for="1392f56a-ddfa-47f1-a407-978e9597ca2a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c2feba8-be43-43f3-ad79-953bf3d6250e" type="checkbox" ><label for="1c2feba8-be43-43f3-ad79-953bf3d6250e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="addb6b76-36da-48d0-a558-66e1b7162e23" type="checkbox" ><label for="addb6b76-36da-48d0-a558-66e1b7162e23" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ea26115-60b5-47bf-9c1e-d2d7f96dc2e5" type="checkbox" ><label for="3ea26115-60b5-47bf-9c1e-d2d7f96dc2e5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="deb4ff2f-2d14-4473-b887-5a22b7ea335d" type="checkbox" ><label for="deb4ff2f-2d14-4473-b887-5a22b7ea335d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="addda7b2-510d-40fe-a55e-ae64b52646d8" type="checkbox" ><label for="addda7b2-510d-40fe-a55e-ae64b52646d8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b099e8fd-ea46-49c4-b5e4-5f7f7f005519" type="checkbox" ><label for="b099e8fd-ea46-49c4-b5e4-5f7f7f005519" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eab63550-a7ae-4744-8112-500ea13a22e3" type="checkbox" ><label for="eab63550-a7ae-4744-8112-500ea13a22e3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e466b7b5-59c2-442a-b703-29e72b482b3c" type="checkbox" ><label for="e466b7b5-59c2-442a-b703-29e72b482b3c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb {color: black;background-color: white;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb pre{padding: 0;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-toggleable {background-color: white;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-item {z-index: 1;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-parallel-item:only-child::after {width: 0;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eb852996-6b95-472b-b7f2-3e91f759eeeb div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb852996-6b95-472b-b7f2-3e91f759eeeb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db31069b-99a2-4402-a57b-3e0b71de954a" type="checkbox" ><label for="db31069b-99a2-4402-a57b-3e0b71de954a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65c47c16-4ff4-43b4-b80f-38c3d852cd5f" type="checkbox" ><label for="65c47c16-4ff4-43b4-b80f-38c3d852cd5f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98ab935f-51bd-492c-a371-ad90ebf2ee7b" type="checkbox" ><label for="98ab935f-51bd-492c-a371-ad90ebf2ee7b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="599b841b-5fa9-42e6-8b13-cac6840e9ddc" type="checkbox" ><label for="599b841b-5fa9-42e6-8b13-cac6840e9ddc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4b6dd88-c306-4f22-b28d-a1ba7ea9da54" type="checkbox" ><label for="a4b6dd88-c306-4f22-b28d-a1ba7ea9da54" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bf9d88f-6e7a-4cac-bbc4-2a295e55699d" type="checkbox" ><label for="3bf9d88f-6e7a-4cac-bbc4-2a295e55699d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f7b7930-5684-49e4-b72c-2a1597987b2e" type="checkbox" ><label for="2f7b7930-5684-49e4-b72c-2a1597987b2e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91fa064d-5f66-4e15-8ab0-bda718072ba2" type="checkbox" ><label for="91fa064d-5f66-4e15-8ab0-bda718072ba2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="698fc2db-be7e-48c0-bef6-ea111e98f00f" type="checkbox" ><label for="698fc2db-be7e-48c0-bef6-ea111e98f00f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
