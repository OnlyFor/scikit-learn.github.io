
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 {color: black;background-color: white;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 pre{padding: 0;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-toggleable {background-color: white;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-item {z-index: 1;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-parallel-item:only-child::after {width: 0;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-container {display: inline-block;position: relative;}#sk-4e3131f3-602a-4daf-b521-1fdf01b46738 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4e3131f3-602a-4daf-b521-1fdf01b46738" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1500584e-c9aa-4913-91eb-ce3ffe2e725d" type="checkbox" ><label class="sk-toggleable__label" for="1500584e-c9aa-4913-91eb-ce3ffe2e725d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbaad0d6-3015-425b-bb57-aa9ed5562aea" type="checkbox" ><label class="sk-toggleable__label" for="bbaad0d6-3015-425b-bb57-aa9ed5562aea">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77059e22-38f9-45fd-88c1-5e3cc4ceb018" type="checkbox" ><label class="sk-toggleable__label" for="77059e22-38f9-45fd-88c1-5e3cc4ceb018">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee {color: black;background-color: white;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee pre{padding: 0;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-toggleable {background-color: white;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-estimator:hover {background-color: #d4ebff;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-item {z-index: 1;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-parallel-item:only-child::after {width: 0;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-container {display: inline-block;position: relative;}#sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee div.sk-text-repr-fallback {display: none;}</style><div id="sk-ebe6a8b5-df19-4cb0-9be8-65b59b22ccee" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44191873-81e7-47bf-9284-8db5f01e62f9" type="checkbox" ><label class="sk-toggleable__label" for="44191873-81e7-47bf-9284-8db5f01e62f9">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e877a382-d91d-47ac-91f0-285289284161" type="checkbox" ><label class="sk-toggleable__label" for="e877a382-d91d-47ac-91f0-285289284161">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd342248-fe7d-4d62-abe9-4768ff18d65f" type="checkbox" ><label class="sk-toggleable__label" for="dd342248-fe7d-4d62-abe9-4768ff18d65f">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96870d42-0ca7-46ff-8d24-75497b4d178e" type="checkbox" ><label class="sk-toggleable__label" for="96870d42-0ca7-46ff-8d24-75497b4d178e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e {color: black;background-color: white;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e pre{padding: 0;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-toggleable {background-color: white;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-estimator:hover {background-color: #d4ebff;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-item {z-index: 1;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-parallel-item:only-child::after {width: 0;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-container {display: inline-block;position: relative;}#sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e div.sk-text-repr-fallback {display: none;}</style><div id="sk-7b4f8284-b9d5-4040-a69c-dc8a52de222e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be8f7dd8-2286-414f-8c90-6bf45e9fdf0c" type="checkbox" ><label class="sk-toggleable__label" for="be8f7dd8-2286-414f-8c90-6bf45e9fdf0c">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98a92470-d45e-4bfc-ab45-cda1e616fada" type="checkbox" ><label class="sk-toggleable__label" for="98a92470-d45e-4bfc-ab45-cda1e616fada">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91235b01-8d04-4edd-806d-a2d10409687e" type="checkbox" ><label class="sk-toggleable__label" for="91235b01-8d04-4edd-806d-a2d10409687e">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 {color: black;background-color: white;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 pre{padding: 0;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-toggleable {background-color: white;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-item {z-index: 1;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-parallel-item:only-child::after {width: 0;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-container {display: inline-block;position: relative;}#sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5f898cf8-779d-4448-a5f6-f4b9eca3ee29" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ace89349-013d-44d2-9b3c-d8ce89d99406" type="checkbox" ><label class="sk-toggleable__label" for="ace89349-013d-44d2-9b3c-d8ce89d99406">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44b7e778-79c8-475f-a383-2fa796aee332" type="checkbox" ><label class="sk-toggleable__label" for="44b7e778-79c8-475f-a383-2fa796aee332">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="886da52b-c336-4f7f-ac15-4fc037b156a2" type="checkbox" ><label class="sk-toggleable__label" for="886da52b-c336-4f7f-ac15-4fc037b156a2">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2215434-2c1b-4a00-8e70-6ed77b168383" type="checkbox" ><label class="sk-toggleable__label" for="e2215434-2c1b-4a00-8e70-6ed77b168383">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5737e49b-ec1f-4277-a504-1d5c98ee8455" type="checkbox" ><label class="sk-toggleable__label" for="5737e49b-ec1f-4277-a504-1d5c98ee8455">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="616cbbc5-18e0-47d3-b4bf-2b351662a3a2" type="checkbox" ><label class="sk-toggleable__label" for="616cbbc5-18e0-47d3-b4bf-2b351662a3a2">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d117621f-9ac6-4afb-bba9-b8d102d5c00c" type="checkbox" ><label class="sk-toggleable__label" for="d117621f-9ac6-4afb-bba9-b8d102d5c00c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="991c5f8e-9845-40da-ac24-9019f12a3ecb" type="checkbox" ><label class="sk-toggleable__label" for="991c5f8e-9845-40da-ac24-9019f12a3ecb">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="711ed81a-77ad-4d4f-8870-b8932d8ebd73" type="checkbox" ><label class="sk-toggleable__label" for="711ed81a-77ad-4d4f-8870-b8932d8ebd73">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 {color: black;background-color: white;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 pre{padding: 0;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-toggleable {background-color: white;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-item {z-index: 1;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-parallel-item:only-child::after {width: 0;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-container {display: inline-block;position: relative;}#sk-3ad4c341-5c4f-48a1-8785-ae72080c4935 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3ad4c341-5c4f-48a1-8785-ae72080c4935" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27f29650-fabd-447f-9a2b-9c13563db245" type="checkbox" ><label class="sk-toggleable__label" for="27f29650-fabd-447f-9a2b-9c13563db245">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e511c086-ae9c-4755-b68a-c263aede5388" type="checkbox" ><label class="sk-toggleable__label" for="e511c086-ae9c-4755-b68a-c263aede5388">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01599193-bfc5-49c7-8458-2e3919eb0cd5" type="checkbox" ><label class="sk-toggleable__label" for="01599193-bfc5-49c7-8458-2e3919eb0cd5">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19a41633-84e4-4cfb-bbb3-de62bead2f77" type="checkbox" ><label class="sk-toggleable__label" for="19a41633-84e4-4cfb-bbb3-de62bead2f77">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26ecc33b-554a-4cba-9989-676bfbc424d8" type="checkbox" ><label class="sk-toggleable__label" for="26ecc33b-554a-4cba-9989-676bfbc424d8">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be408ee3-77f7-482f-9f95-bc1cd3f3c0c1" type="checkbox" ><label class="sk-toggleable__label" for="be408ee3-77f7-482f-9f95-bc1cd3f3c0c1">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64586db9-5062-49ae-a174-f21bca45cbc2" type="checkbox" ><label class="sk-toggleable__label" for="64586db9-5062-49ae-a174-f21bca45cbc2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74bf987f-40fd-4e0b-bcba-05194af4290e" type="checkbox" ><label class="sk-toggleable__label" for="74bf987f-40fd-4e0b-bcba-05194af4290e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="169b6262-ef44-4fbc-8284-2cad27b0566d" type="checkbox" ><label class="sk-toggleable__label" for="169b6262-ef44-4fbc-8284-2cad27b0566d">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
