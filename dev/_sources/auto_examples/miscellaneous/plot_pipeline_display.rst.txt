
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac {color: black;background-color: white;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac pre{padding: 0;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-toggleable {background-color: white;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-estimator:hover {background-color: #d4ebff;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-item {z-index: 1;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-parallel-item:only-child::after {width: 0;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-163f8910-2efe-4f0f-a975-c32d35e2bdac div.sk-text-repr-fallback {display: none;}</style><div id="sk-163f8910-2efe-4f0f-a975-c32d35e2bdac" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe5668c5-2e74-41f7-a434-39a2ebf6c482" type="checkbox" ><label for="fe5668c5-2e74-41f7-a434-39a2ebf6c482" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3be489ad-e403-480c-9794-ff0a2f4e22f1" type="checkbox" ><label for="3be489ad-e403-480c-9794-ff0a2f4e22f1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07d6edcc-96b9-43cd-8163-629e84a51ffe" type="checkbox" ><label for="07d6edcc-96b9-43cd-8163-629e84a51ffe" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a2fc67dd-212d-4b35-b304-078148091fd5 {color: black;background-color: white;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 pre{padding: 0;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-toggleable {background-color: white;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-item {z-index: 1;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-parallel-item:only-child::after {width: 0;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a2fc67dd-212d-4b35-b304-078148091fd5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a2fc67dd-212d-4b35-b304-078148091fd5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72d533ff-2411-4317-b27c-7b9de26f3d1c" type="checkbox" ><label for="72d533ff-2411-4317-b27c-7b9de26f3d1c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="688d355d-ea7a-4e1f-b2e3-cb2d9ad87f61" type="checkbox" ><label for="688d355d-ea7a-4e1f-b2e3-cb2d9ad87f61" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac871920-0f64-49f4-9286-9b7d3c89bef1" type="checkbox" ><label for="ac871920-0f64-49f4-9286-9b7d3c89bef1" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe4e70b2-2d15-4aba-bb6d-8e8e683c6a2e" type="checkbox" ><label for="fe4e70b2-2d15-4aba-bb6d-8e8e683c6a2e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-53d323ea-990f-442d-8d67-b4812269236b {color: black;background-color: white;}#sk-53d323ea-990f-442d-8d67-b4812269236b pre{padding: 0;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-toggleable {background-color: white;}#sk-53d323ea-990f-442d-8d67-b4812269236b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-53d323ea-990f-442d-8d67-b4812269236b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-53d323ea-990f-442d-8d67-b4812269236b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-53d323ea-990f-442d-8d67-b4812269236b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-53d323ea-990f-442d-8d67-b4812269236b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-53d323ea-990f-442d-8d67-b4812269236b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-estimator:hover {background-color: #d4ebff;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-item {z-index: 1;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-parallel-item:only-child::after {width: 0;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-53d323ea-990f-442d-8d67-b4812269236b div.sk-text-repr-fallback {display: none;}</style><div id="sk-53d323ea-990f-442d-8d67-b4812269236b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d4c9dd4-b8fd-4cf7-8d7a-78f7fbdbb0b5" type="checkbox" ><label for="1d4c9dd4-b8fd-4cf7-8d7a-78f7fbdbb0b5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c995d04-9c6d-402d-abf4-ee92b9451d57" type="checkbox" ><label for="6c995d04-9c6d-402d-abf4-ee92b9451d57" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="741b6c01-0ff5-4de9-b93f-688dd87024da" type="checkbox" ><label for="741b6c01-0ff5-4de9-b93f-688dd87024da" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-370485c3-b6ce-416b-b8ca-c76809c18991 {color: black;background-color: white;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 pre{padding: 0;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-toggleable {background-color: white;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-estimator:hover {background-color: #d4ebff;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-item {z-index: 1;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-parallel-item:only-child::after {width: 0;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-370485c3-b6ce-416b-b8ca-c76809c18991 div.sk-text-repr-fallback {display: none;}</style><div id="sk-370485c3-b6ce-416b-b8ca-c76809c18991" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a76d7c10-8167-46b6-b87b-5e062eb91ecf" type="checkbox" ><label for="a76d7c10-8167-46b6-b87b-5e062eb91ecf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6fcff61-9f39-4296-ac66-b9544dade45d" type="checkbox" ><label for="d6fcff61-9f39-4296-ac66-b9544dade45d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53b46fdf-1653-4342-b433-dcb154b4dbef" type="checkbox" ><label for="53b46fdf-1653-4342-b433-dcb154b4dbef" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3952440-ccfc-4a75-908e-647f267fbc90" type="checkbox" ><label for="a3952440-ccfc-4a75-908e-647f267fbc90" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6d28501-1b3d-4087-934c-0fce1bb8ecb9" type="checkbox" ><label for="d6d28501-1b3d-4087-934c-0fce1bb8ecb9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa08bf18-12e4-42bb-a2c6-8d562250e9db" type="checkbox" ><label for="aa08bf18-12e4-42bb-a2c6-8d562250e9db" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f7ec437-ed81-42c5-a343-a409c2ef38bc" type="checkbox" ><label for="9f7ec437-ed81-42c5-a343-a409c2ef38bc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46c3396b-1863-409e-82a7-f8e681696eaa" type="checkbox" ><label for="46c3396b-1863-409e-82a7-f8e681696eaa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b78fc8b-e193-451b-92ec-a323cfa09e61" type="checkbox" ><label for="1b78fc8b-e193-451b-92ec-a323cfa09e61" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 {color: black;background-color: white;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 pre{padding: 0;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-toggleable {background-color: white;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-item {z-index: 1;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-parallel-item:only-child::after {width: 0;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-080d3372-3cd4-413c-a2a7-d3a4133435d6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-080d3372-3cd4-413c-a2a7-d3a4133435d6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="576b3bb4-c552-41eb-9b88-ed251c559d82" type="checkbox" ><label for="576b3bb4-c552-41eb-9b88-ed251c559d82" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c9a0dd0-ae41-42c4-8c59-c1661ef980ad" type="checkbox" ><label for="3c9a0dd0-ae41-42c4-8c59-c1661ef980ad" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bd1ba6c-c301-4ef9-84e7-0ba92ec92e50" type="checkbox" ><label for="9bd1ba6c-c301-4ef9-84e7-0ba92ec92e50" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e969e4c6-2eef-4731-a8ad-e98a10ead03a" type="checkbox" ><label for="e969e4c6-2eef-4731-a8ad-e98a10ead03a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6bb421f-c131-4bbe-a945-1b8b5ff2226e" type="checkbox" ><label for="e6bb421f-c131-4bbe-a945-1b8b5ff2226e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd19476c-7370-4e01-bd8a-cfd8399768d8" type="checkbox" ><label for="cd19476c-7370-4e01-bd8a-cfd8399768d8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c1a91f5-292e-46d2-85df-6dcc35f07a0f" type="checkbox" ><label for="4c1a91f5-292e-46d2-85df-6dcc35f07a0f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c538ba9a-8344-411d-926a-634d5e56eb51" type="checkbox" ><label for="c538ba9a-8344-411d-926a-634d5e56eb51" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa613acf-2c5b-489e-869b-5208c93b7792" type="checkbox" ><label for="aa613acf-2c5b-489e-869b-5208c93b7792" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
