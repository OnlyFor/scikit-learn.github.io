
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a682f74-0ea5-465c-a819-7157a119ac9d {color: black;background-color: white;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d pre{padding: 0;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-toggleable {background-color: white;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-item {z-index: 1;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-parallel-item:only-child::after {width: 0;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a682f74-0ea5-465c-a819-7157a119ac9d div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a682f74-0ea5-465c-a819-7157a119ac9d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4f9fcdc-4de5-4282-924a-2fcafaf97a05" type="checkbox" ><label for="c4f9fcdc-4de5-4282-924a-2fcafaf97a05" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d97184e1-37df-4a50-a9de-9810de93412d" type="checkbox" ><label for="d97184e1-37df-4a50-a9de-9810de93412d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2600ce61-66d7-493f-8033-4a9b9df37f3b" type="checkbox" ><label for="2600ce61-66d7-493f-8033-4a9b9df37f3b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97029235-478b-44e3-92c5-09889c87f7c9 {color: black;background-color: white;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 pre{padding: 0;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-toggleable {background-color: white;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-item {z-index: 1;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-parallel-item:only-child::after {width: 0;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97029235-478b-44e3-92c5-09889c87f7c9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-97029235-478b-44e3-92c5-09889c87f7c9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aec02bfa-a08d-424e-940f-d14c1aed0124" type="checkbox" ><label for="aec02bfa-a08d-424e-940f-d14c1aed0124" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90cd3a56-b639-4016-b4b7-ba8cfa036fc2" type="checkbox" ><label for="90cd3a56-b639-4016-b4b7-ba8cfa036fc2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d595d7c3-ef07-4a60-9040-1f11cee59fae" type="checkbox" ><label for="d595d7c3-ef07-4a60-9040-1f11cee59fae" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="227ace88-1f39-4234-97a3-da9e57642015" type="checkbox" ><label for="227ace88-1f39-4234-97a3-da9e57642015" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-98566218-f379-4603-8eb0-b1d0f164d9ff {color: black;background-color: white;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff pre{padding: 0;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-toggleable {background-color: white;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-item {z-index: 1;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-parallel-item:only-child::after {width: 0;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-98566218-f379-4603-8eb0-b1d0f164d9ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-98566218-f379-4603-8eb0-b1d0f164d9ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54614d8a-74e0-479c-ba22-8645404b08e0" type="checkbox" ><label for="54614d8a-74e0-479c-ba22-8645404b08e0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a784fcf-510e-4a12-b7df-3a9ca13b7423" type="checkbox" ><label for="1a784fcf-510e-4a12-b7df-3a9ca13b7423" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50c6fc6e-70d7-465b-a582-3b7221ed3426" type="checkbox" ><label for="50c6fc6e-70d7-465b-a582-3b7221ed3426" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea {color: black;background-color: white;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea pre{padding: 0;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-toggleable {background-color: white;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-item {z-index: 1;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-parallel-item:only-child::after {width: 0;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-7741b0d4-b89d-49b7-b876-5dc42f2aa1ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff2b55a4-4605-41a3-ba58-d1d286f9fabb" type="checkbox" ><label for="ff2b55a4-4605-41a3-ba58-d1d286f9fabb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d28bdd8-60a4-4f45-b4ce-953eb0fd9d86" type="checkbox" ><label for="6d28bdd8-60a4-4f45-b4ce-953eb0fd9d86" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcdb351f-cb4a-49fa-9211-5156d3ee05d4" type="checkbox" ><label for="fcdb351f-cb4a-49fa-9211-5156d3ee05d4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88541c2f-f606-48da-9221-366254a4675b" type="checkbox" ><label for="88541c2f-f606-48da-9221-366254a4675b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f431cdba-0f9d-4fec-94bd-484ca1b74152" type="checkbox" ><label for="f431cdba-0f9d-4fec-94bd-484ca1b74152" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44105a19-1c1e-48aa-8f16-ff08c9181970" type="checkbox" ><label for="44105a19-1c1e-48aa-8f16-ff08c9181970" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="099a2a2a-d7bd-4ec7-895e-8b0387ea7f5e" type="checkbox" ><label for="099a2a2a-d7bd-4ec7-895e-8b0387ea7f5e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bca1665-925d-43dc-8fd2-ef3dd876695a" type="checkbox" ><label for="9bca1665-925d-43dc-8fd2-ef3dd876695a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7dd2e27-7048-40cf-a768-da22365812bb" type="checkbox" ><label for="e7dd2e27-7048-40cf-a768-da22365812bb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 {color: black;background-color: white;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 pre{padding: 0;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-toggleable {background-color: white;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-item {z-index: 1;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-parallel-item:only-child::after {width: 0;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1a40e75d-5e7e-479b-9e9c-c7dbd69c2437" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ce7e7dc-8c0d-4cfe-aa3f-d4fbc05ce33b" type="checkbox" ><label for="2ce7e7dc-8c0d-4cfe-aa3f-d4fbc05ce33b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06a5be81-5e12-4f21-843d-4af8f6ebca0f" type="checkbox" ><label for="06a5be81-5e12-4f21-843d-4af8f6ebca0f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93acbdba-1bd7-4b74-a761-ea74410ad077" type="checkbox" ><label for="93acbdba-1bd7-4b74-a761-ea74410ad077" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f30510d4-a370-4fe7-b1e3-e2f0a19e4cf9" type="checkbox" ><label for="f30510d4-a370-4fe7-b1e3-e2f0a19e4cf9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99b942e4-7197-434e-9c9c-9c770c7cd45b" type="checkbox" ><label for="99b942e4-7197-434e-9c9c-9c770c7cd45b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71dd5a25-a5c5-477c-91b3-01f2be34f1c6" type="checkbox" ><label for="71dd5a25-a5c5-477c-91b3-01f2be34f1c6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e720421c-50aa-49fd-ae32-41132307c3c3" type="checkbox" ><label for="e720421c-50aa-49fd-ae32-41132307c3c3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38fabf7a-9458-450a-b346-37be6f6fc3b8" type="checkbox" ><label for="38fabf7a-9458-450a-b346-37be6f6fc3b8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cd127cd-378b-4497-84ff-9dad512fc5a8" type="checkbox" ><label for="4cd127cd-378b-4497-84ff-9dad512fc5a8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
