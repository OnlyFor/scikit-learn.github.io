
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 {color: black;background-color: white;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 pre{padding: 0;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-toggleable {background-color: white;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-item {z-index: 1;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-parallel-item:only-child::after {width: 0;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4efc4bf9-85b9-4ed2-a1e3-7e78e564c240" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="984b40ba-99fe-4be4-a2db-43207f6f130b" type="checkbox" ><label for="984b40ba-99fe-4be4-a2db-43207f6f130b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b4abe7f-bf29-4c22-9e96-576e1ddc7e22" type="checkbox" ><label for="2b4abe7f-bf29-4c22-9e96-576e1ddc7e22" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff5583f3-12b7-4584-b89f-803ec3959ff3" type="checkbox" ><label for="ff5583f3-12b7-4584-b89f-803ec3959ff3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 {color: black;background-color: white;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 pre{padding: 0;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-toggleable {background-color: white;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-item {z-index: 1;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e7550653-4a71-4e99-9408-b7c91aa114d3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e7550653-4a71-4e99-9408-b7c91aa114d3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e290f938-fea7-4ca0-848a-83b72708b784" type="checkbox" ><label for="e290f938-fea7-4ca0-848a-83b72708b784" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41ad6197-dc89-47cf-aaed-0bec7d84b064" type="checkbox" ><label for="41ad6197-dc89-47cf-aaed-0bec7d84b064" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="293fd3de-8d22-465b-8683-aff3108e67d4" type="checkbox" ><label for="293fd3de-8d22-465b-8683-aff3108e67d4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b35d4d0-fdeb-4f39-b4f8-eda50466fd00" type="checkbox" ><label for="6b35d4d0-fdeb-4f39-b4f8-eda50466fd00" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 {color: black;background-color: white;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 pre{padding: 0;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-toggleable {background-color: white;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-item {z-index: 1;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-parallel-item:only-child::after {width: 0;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7cbb8289-5f84-47f8-b8ff-e60aa146f5c6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c13a74c0-cdef-4fe9-9065-7fcd7cee83a8" type="checkbox" ><label for="c13a74c0-cdef-4fe9-9065-7fcd7cee83a8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24dd61f4-a518-4fbb-a992-81e78ec5ec97" type="checkbox" ><label for="24dd61f4-a518-4fbb-a992-81e78ec5ec97" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28977cf6-8cb4-47c7-b538-49ecb16f04aa" type="checkbox" ><label for="28977cf6-8cb4-47c7-b538-49ecb16f04aa" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc {color: black;background-color: white;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc pre{padding: 0;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-toggleable {background-color: white;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-estimator:hover {background-color: #d4ebff;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-item {z-index: 1;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-parallel-item:only-child::after {width: 0;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc div.sk-text-repr-fallback {display: none;}</style><div id="sk-30e9a75b-be54-42ea-9d64-d04be2fae5fc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0688ba3-326c-4296-b1c4-c410143717bb" type="checkbox" ><label for="d0688ba3-326c-4296-b1c4-c410143717bb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1d17027-3cac-424b-a21c-197f551abe58" type="checkbox" ><label for="d1d17027-3cac-424b-a21c-197f551abe58" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b38c427-1fd7-4ca0-a4de-34d233e66aec" type="checkbox" ><label for="5b38c427-1fd7-4ca0-a4de-34d233e66aec" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="000ee658-5495-42d5-b247-94e646a02b80" type="checkbox" ><label for="000ee658-5495-42d5-b247-94e646a02b80" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="024e1e8f-6f07-46a5-b2f3-c4cb92ae84af" type="checkbox" ><label for="024e1e8f-6f07-46a5-b2f3-c4cb92ae84af" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9c77593-6526-4cb4-b71d-e29295e8ab98" type="checkbox" ><label for="b9c77593-6526-4cb4-b71d-e29295e8ab98" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="041fe93d-0555-4580-9dcd-7f4c100690ce" type="checkbox" ><label for="041fe93d-0555-4580-9dcd-7f4c100690ce" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6eee9d42-6300-4fad-b903-3957f0568864" type="checkbox" ><label for="6eee9d42-6300-4fad-b903-3957f0568864" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9be8229c-eb85-4ca0-a6bc-4445b2597138" type="checkbox" ><label for="9be8229c-eb85-4ca0-a6bc-4445b2597138" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 {color: black;background-color: white;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 pre{padding: 0;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-toggleable {background-color: white;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-item {z-index: 1;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-parallel-item:only-child::after {width: 0;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bbf742ac-adba-48fd-93f2-e7ab4c2eafa3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05cfe670-c69d-4b4b-98c3-4bd05644170a" type="checkbox" ><label for="05cfe670-c69d-4b4b-98c3-4bd05644170a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4e575fe-6724-4319-bccb-5fe83f59f8ce" type="checkbox" ><label for="a4e575fe-6724-4319-bccb-5fe83f59f8ce" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eadf7661-e53b-40a9-b4b7-3330d81718d6" type="checkbox" ><label for="eadf7661-e53b-40a9-b4b7-3330d81718d6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53baa1cb-f31d-409f-953f-117826dc4df3" type="checkbox" ><label for="53baa1cb-f31d-409f-953f-117826dc4df3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47e3abbf-05bb-4fab-ac66-5096548244c1" type="checkbox" ><label for="47e3abbf-05bb-4fab-ac66-5096548244c1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01da6769-1731-41d6-9eb5-dbd3f988af43" type="checkbox" ><label for="01da6769-1731-41d6-9eb5-dbd3f988af43" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8ef747a-0b81-4a53-8be0-8ecee1ddd61f" type="checkbox" ><label for="c8ef747a-0b81-4a53-8be0-8ecee1ddd61f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="362a81f0-00b1-41ea-a5fa-e0572d1666d7" type="checkbox" ><label for="362a81f0-00b1-41ea-a5fa-e0572d1666d7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c212262-c7d9-4d10-b5f9-a9842148e7f4" type="checkbox" ><label for="0c212262-c7d9-4d10-b5f9-a9842148e7f4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
