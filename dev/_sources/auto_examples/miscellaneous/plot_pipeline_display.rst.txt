
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 {color: black;background-color: white;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 pre{padding: 0;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-toggleable {background-color: white;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-item {z-index: 1;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-parallel-item:only-child::after {width: 0;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ce172d0a-e691-4b18-bd40-260c61d33ea3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ce172d0a-e691-4b18-bd40-260c61d33ea3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc082351-0778-4537-84ad-5396c75a3271" type="checkbox" ><label for="fc082351-0778-4537-84ad-5396c75a3271" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f471761-5452-472c-8152-87d4b3335713" type="checkbox" ><label for="1f471761-5452-472c-8152-87d4b3335713" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d2d24c6-1e42-48db-901f-6968a5cdeee7" type="checkbox" ><label for="6d2d24c6-1e42-48db-901f-6968a5cdeee7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 {color: black;background-color: white;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 pre{padding: 0;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-toggleable {background-color: white;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-item {z-index: 1;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-parallel-item:only-child::after {width: 0;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e990b9a4-a950-430b-bb24-fe89ff6bcc91" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0274d07-6dc3-4257-a44a-57dd3c76a1f9" type="checkbox" ><label for="e0274d07-6dc3-4257-a44a-57dd3c76a1f9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccd9f270-9bad-470b-8843-ff520e7a5bcd" type="checkbox" ><label for="ccd9f270-9bad-470b-8843-ff520e7a5bcd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="327501de-cb0e-43d3-9b4c-f46f8cb25079" type="checkbox" ><label for="327501de-cb0e-43d3-9b4c-f46f8cb25079" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d99a9ec-447f-47b2-8376-8e5b01e95ce6" type="checkbox" ><label for="4d99a9ec-447f-47b2-8376-8e5b01e95ce6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d1c2488-2248-483b-a030-760032d407b9 {color: black;background-color: white;}#sk-7d1c2488-2248-483b-a030-760032d407b9 pre{padding: 0;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-toggleable {background-color: white;}#sk-7d1c2488-2248-483b-a030-760032d407b9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d1c2488-2248-483b-a030-760032d407b9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7d1c2488-2248-483b-a030-760032d407b9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d1c2488-2248-483b-a030-760032d407b9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d1c2488-2248-483b-a030-760032d407b9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d1c2488-2248-483b-a030-760032d407b9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-item {z-index: 1;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-parallel-item:only-child::after {width: 0;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7d1c2488-2248-483b-a030-760032d407b9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d1c2488-2248-483b-a030-760032d407b9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14c8fa06-d556-4bec-84be-9fab6a7409a5" type="checkbox" ><label for="14c8fa06-d556-4bec-84be-9fab6a7409a5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cebd7680-1f31-4c2a-a189-96f99cfffd0e" type="checkbox" ><label for="cebd7680-1f31-4c2a-a189-96f99cfffd0e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9db4182c-0a6a-42fa-a2b9-68f48f9c96c1" type="checkbox" ><label for="9db4182c-0a6a-42fa-a2b9-68f48f9c96c1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f {color: black;background-color: white;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f pre{padding: 0;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-toggleable {background-color: white;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-estimator:hover {background-color: #d4ebff;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-item {z-index: 1;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-parallel-item:only-child::after {width: 0;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3b601f18-6c99-40ae-9bb2-bc138749c91f div.sk-text-repr-fallback {display: none;}</style><div id="sk-3b601f18-6c99-40ae-9bb2-bc138749c91f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7113891-160b-4e12-887a-f8a2e0c8f40c" type="checkbox" ><label for="a7113891-160b-4e12-887a-f8a2e0c8f40c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7960a67d-b5d0-48ac-9105-f449d3007e06" type="checkbox" ><label for="7960a67d-b5d0-48ac-9105-f449d3007e06" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="000f5b68-83cf-4967-9185-f12b46c5d95c" type="checkbox" ><label for="000f5b68-83cf-4967-9185-f12b46c5d95c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="733f9b6b-5b41-48ea-9f10-91a369005014" type="checkbox" ><label for="733f9b6b-5b41-48ea-9f10-91a369005014" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc63850e-a0b0-43ff-af45-ba26fa79f865" type="checkbox" ><label for="fc63850e-a0b0-43ff-af45-ba26fa79f865" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcfb2184-ad36-43ae-a333-fc9a40a118d1" type="checkbox" ><label for="bcfb2184-ad36-43ae-a333-fc9a40a118d1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="611753e5-837b-41a1-85d4-26a6f8d3943e" type="checkbox" ><label for="611753e5-837b-41a1-85d4-26a6f8d3943e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff41c5de-a510-497a-a7a6-9a89eb3b7341" type="checkbox" ><label for="ff41c5de-a510-497a-a7a6-9a89eb3b7341" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd5f09d1-7c12-4728-8b94-e4d6bf783a82" type="checkbox" ><label for="cd5f09d1-7c12-4728-8b94-e4d6bf783a82" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 {color: black;background-color: white;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 pre{padding: 0;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-toggleable {background-color: white;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-estimator:hover {background-color: #d4ebff;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-item {z-index: 1;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-parallel-item:only-child::after {width: 0;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-10475578-5bb5-4e94-bf48-7297ac7f7547 div.sk-text-repr-fallback {display: none;}</style><div id="sk-10475578-5bb5-4e94-bf48-7297ac7f7547" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47c3f109-7253-434c-8fb3-e895f30c5704" type="checkbox" ><label for="47c3f109-7253-434c-8fb3-e895f30c5704" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2658920a-6483-42dd-b40f-671ff03d4831" type="checkbox" ><label for="2658920a-6483-42dd-b40f-671ff03d4831" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="348ef136-6a7f-4b2e-9035-f3aeb9863b89" type="checkbox" ><label for="348ef136-6a7f-4b2e-9035-f3aeb9863b89" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55335941-80df-487f-9e3f-a6518d783eda" type="checkbox" ><label for="55335941-80df-487f-9e3f-a6518d783eda" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c416c56f-9995-4f2e-afc0-095ddf4ca2c5" type="checkbox" ><label for="c416c56f-9995-4f2e-afc0-095ddf4ca2c5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60f602c2-9791-404f-9d76-a66b982f325b" type="checkbox" ><label for="60f602c2-9791-404f-9d76-a66b982f325b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="099b6a25-63e6-4288-8d61-81d0ba89e302" type="checkbox" ><label for="099b6a25-63e6-4288-8d61-81d0ba89e302" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6fffead-82d8-40e1-b543-2087a89492b8" type="checkbox" ><label for="a6fffead-82d8-40e1-b543-2087a89492b8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="009568a0-f36e-496f-9c96-0bf27cf760dd" type="checkbox" ><label for="009568a0-f36e-496f-9c96-0bf27cf760dd" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
