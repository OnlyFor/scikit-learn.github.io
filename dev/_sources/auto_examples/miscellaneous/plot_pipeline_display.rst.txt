
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 {color: black;background-color: white;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 pre{padding: 0;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-toggleable {background-color: white;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-item {z-index: 1;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-parallel-item:only-child::after {width: 0;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1f2fbc4e-f2b2-4ebd-b371-0b04accb29f6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68d79279-420d-4d9d-8c66-1e126ede09ce" type="checkbox" ><label for="68d79279-420d-4d9d-8c66-1e126ede09ce" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8469e1a7-1f05-49db-853b-28306a0b60a0" type="checkbox" ><label for="8469e1a7-1f05-49db-853b-28306a0b60a0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1219ea2f-0d73-4694-8a55-429a4c3dd5a7" type="checkbox" ><label for="1219ea2f-0d73-4694-8a55-429a4c3dd5a7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 {color: black;background-color: white;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 pre{padding: 0;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-toggleable {background-color: white;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-item {z-index: 1;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-parallel-item:only-child::after {width: 0;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b35e24c6-78af-4c26-8d75-45f1fb3715a3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="786b7bea-cb2e-4c6b-b978-04c43ba3e2f3" type="checkbox" ><label for="786b7bea-cb2e-4c6b-b978-04c43ba3e2f3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28c2909d-7c10-42f4-a068-7b3df1257a17" type="checkbox" ><label for="28c2909d-7c10-42f4-a068-7b3df1257a17" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d89e78ea-a10e-4ea2-b635-31f189cc93eb" type="checkbox" ><label for="d89e78ea-a10e-4ea2-b635-31f189cc93eb" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e8930de-9986-42f1-8e0c-6bab92683d3b" type="checkbox" ><label for="7e8930de-9986-42f1-8e0c-6bab92683d3b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd {color: black;background-color: white;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd pre{padding: 0;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-toggleable {background-color: white;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-estimator:hover {background-color: #d4ebff;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-item {z-index: 1;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-parallel-item:only-child::after {width: 0;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-43d45497-0674-4ae4-b1a8-c00889a8abdd div.sk-text-repr-fallback {display: none;}</style><div id="sk-43d45497-0674-4ae4-b1a8-c00889a8abdd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da22e02b-b279-4d5d-ae2c-2b24e19d2c09" type="checkbox" ><label for="da22e02b-b279-4d5d-ae2c-2b24e19d2c09" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c074f6af-80df-4b86-aa17-efc76b58e593" type="checkbox" ><label for="c074f6af-80df-4b86-aa17-efc76b58e593" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54ca064e-0280-4bac-bc3c-4f5eb9fd43e9" type="checkbox" ><label for="54ca064e-0280-4bac-bc3c-4f5eb9fd43e9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 {color: black;background-color: white;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 pre{padding: 0;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-toggleable {background-color: white;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-item {z-index: 1;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-parallel-item:only-child::after {width: 0;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0ea16cf5-9bc4-4cc9-a658-58d0454b9673" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a6fa747-ed86-4565-99fd-cc693f25ee6b" type="checkbox" ><label for="9a6fa747-ed86-4565-99fd-cc693f25ee6b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdd3648c-c78c-4a3a-9128-a2ae75f19ddd" type="checkbox" ><label for="bdd3648c-c78c-4a3a-9128-a2ae75f19ddd" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="034e7198-39ab-4344-bd70-25cbf937c0c0" type="checkbox" ><label for="034e7198-39ab-4344-bd70-25cbf937c0c0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45de96c7-6091-49fc-9bce-13567046b4d9" type="checkbox" ><label for="45de96c7-6091-49fc-9bce-13567046b4d9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2e32270-5ad2-4a19-a6dc-e8a8ac1e778a" type="checkbox" ><label for="a2e32270-5ad2-4a19-a6dc-e8a8ac1e778a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f09cb08f-c18e-4a70-a918-6f8536f2aec3" type="checkbox" ><label for="f09cb08f-c18e-4a70-a918-6f8536f2aec3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b976a86-369c-4183-8aa2-06fe44d28ed5" type="checkbox" ><label for="5b976a86-369c-4183-8aa2-06fe44d28ed5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc33e1ff-87b2-45e7-a9a9-0e8ca61dc1a0" type="checkbox" ><label for="dc33e1ff-87b2-45e7-a9a9-0e8ca61dc1a0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eace37b8-465d-4d42-8421-6065cea60ecc" type="checkbox" ><label for="eace37b8-465d-4d42-8421-6065cea60ecc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 {color: black;background-color: white;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 pre{padding: 0;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-toggleable {background-color: white;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-item {z-index: 1;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-parallel-item:only-child::after {width: 0;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a7ff42e2-71bf-4d16-881c-794e114ab576 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a7ff42e2-71bf-4d16-881c-794e114ab576" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ac3eb76-6383-490e-a217-06b7dfcc3d8a" type="checkbox" ><label for="8ac3eb76-6383-490e-a217-06b7dfcc3d8a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee86c3e6-e13d-4e0a-9639-ee4980bca89b" type="checkbox" ><label for="ee86c3e6-e13d-4e0a-9639-ee4980bca89b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20fdaa73-4ce3-4f9d-bb20-fca124b835d1" type="checkbox" ><label for="20fdaa73-4ce3-4f9d-bb20-fca124b835d1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3de9daf0-4f19-4bfb-9167-45a26dc6f1c2" type="checkbox" ><label for="3de9daf0-4f19-4bfb-9167-45a26dc6f1c2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8667e91e-886e-4d36-9082-a89bd0e12d16" type="checkbox" ><label for="8667e91e-886e-4d36-9082-a89bd0e12d16" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54231c94-421f-4e68-9926-acb5fab37281" type="checkbox" ><label for="54231c94-421f-4e68-9926-acb5fab37281" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="721488d0-5c4f-474d-b30e-85c9c1c96e85" type="checkbox" ><label for="721488d0-5c4f-474d-b30e-85c9c1c96e85" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19a4742a-550f-4f6f-b294-218844f19380" type="checkbox" ><label for="19a4742a-550f-4f6f-b294-218844f19380" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a324a30a-13fd-4ed5-adee-32995a7ecd07" type="checkbox" ><label for="a324a30a-13fd-4ed5-adee-32995a7ecd07" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
