
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d {color: black;background-color: white;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d pre{padding: 0;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-toggleable {background-color: white;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-estimator:hover {background-color: #d4ebff;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-item {z-index: 1;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-parallel-item:only-child::after {width: 0;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d div.sk-text-repr-fallback {display: none;}</style><div id="sk-8fa95333-d06b-4aeb-b0ec-578a5c34431d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="890f64bc-9747-401c-b78b-da599053b2b3" type="checkbox" ><label for="890f64bc-9747-401c-b78b-da599053b2b3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1060498e-400f-4846-b704-35a2a27aec30" type="checkbox" ><label for="1060498e-400f-4846-b704-35a2a27aec30" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e75ac27-5957-492f-80b9-07d63251420a" type="checkbox" ><label for="1e75ac27-5957-492f-80b9-07d63251420a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf {color: black;background-color: white;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf pre{padding: 0;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-toggleable {background-color: white;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-estimator:hover {background-color: #d4ebff;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-item {z-index: 1;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-parallel-item:only-child::after {width: 0;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf div.sk-text-repr-fallback {display: none;}</style><div id="sk-f6db0016-4d15-44ba-a72a-e7e3dddf3abf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d08101c3-f660-499b-a831-11d954dca1bb" type="checkbox" ><label for="d08101c3-f660-499b-a831-11d954dca1bb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc902050-02ac-459d-9832-d88f2fa2616d" type="checkbox" ><label for="dc902050-02ac-459d-9832-d88f2fa2616d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="520af4c3-ead1-4d0f-accf-bc90779ecc0b" type="checkbox" ><label for="520af4c3-ead1-4d0f-accf-bc90779ecc0b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9d334c4-87a7-48cc-b9e7-023683d29098" type="checkbox" ><label for="a9d334c4-87a7-48cc-b9e7-023683d29098" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 {color: black;background-color: white;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 pre{padding: 0;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-toggleable {background-color: white;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-item {z-index: 1;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-parallel-item:only-child::after {width: 0;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f8517534-f9ef-4f9b-a6a5-62a77ccbadb0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2eae71b8-ad94-4415-a035-24f4b953cda7" type="checkbox" ><label for="2eae71b8-ad94-4415-a035-24f4b953cda7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee87493c-107c-4178-81ff-a53309a8bd97" type="checkbox" ><label for="ee87493c-107c-4178-81ff-a53309a8bd97" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8960d96f-bc11-4a9f-a8eb-57dc480a1ad5" type="checkbox" ><label for="8960d96f-bc11-4a9f-a8eb-57dc480a1ad5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d {color: black;background-color: white;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d pre{padding: 0;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-toggleable {background-color: white;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-estimator:hover {background-color: #d4ebff;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-item {z-index: 1;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-parallel-item:only-child::after {width: 0;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1a70a276-ae3d-4815-a028-a03831b7bc6d div.sk-text-repr-fallback {display: none;}</style><div id="sk-1a70a276-ae3d-4815-a028-a03831b7bc6d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92303eca-33c1-4ea4-9a46-e3469ed4ae03" type="checkbox" ><label for="92303eca-33c1-4ea4-9a46-e3469ed4ae03" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="237a6c69-f2c2-492c-9c37-c98e4fc02d39" type="checkbox" ><label for="237a6c69-f2c2-492c-9c37-c98e4fc02d39" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cef3d67-d13b-4907-ac7c-4cedf9a7b6f2" type="checkbox" ><label for="0cef3d67-d13b-4907-ac7c-4cedf9a7b6f2" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6aaa8a4-605a-47b3-95db-a646b269d388" type="checkbox" ><label for="d6aaa8a4-605a-47b3-95db-a646b269d388" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc56c75a-2069-414e-abb2-f5f00516ce32" type="checkbox" ><label for="cc56c75a-2069-414e-abb2-f5f00516ce32" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06ead6fa-9ca9-4599-aa93-201a85aad60b" type="checkbox" ><label for="06ead6fa-9ca9-4599-aa93-201a85aad60b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0b1e49a-8240-42d9-b63e-29673e02732e" type="checkbox" ><label for="e0b1e49a-8240-42d9-b63e-29673e02732e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b09e8fa9-5326-4bf2-996e-ceecd7ee1e7d" type="checkbox" ><label for="b09e8fa9-5326-4bf2-996e-ceecd7ee1e7d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a803ca6-3922-4957-a266-9e341c720383" type="checkbox" ><label for="5a803ca6-3922-4957-a266-9e341c720383" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e2594e85-8193-4728-ab52-210c6d4ba992 {color: black;background-color: white;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 pre{padding: 0;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-toggleable {background-color: white;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-item {z-index: 1;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-parallel-item:only-child::after {width: 0;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e2594e85-8193-4728-ab52-210c6d4ba992 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e2594e85-8193-4728-ab52-210c6d4ba992" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad714605-1dde-4000-8520-f8123c4f6c8d" type="checkbox" ><label for="ad714605-1dde-4000-8520-f8123c4f6c8d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c61b18d2-4549-4ccc-aae1-176f65540466" type="checkbox" ><label for="c61b18d2-4549-4ccc-aae1-176f65540466" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27990566-6fa0-4bfa-9e6b-79ced48adefe" type="checkbox" ><label for="27990566-6fa0-4bfa-9e6b-79ced48adefe" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42eef4c7-c2b1-477a-b1d6-c02af12674aa" type="checkbox" ><label for="42eef4c7-c2b1-477a-b1d6-c02af12674aa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecef6ee1-c68d-4c88-a134-5b1d98709583" type="checkbox" ><label for="ecef6ee1-c68d-4c88-a134-5b1d98709583" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="291f4ba6-f6eb-4db2-a194-d449ca824fdb" type="checkbox" ><label for="291f4ba6-f6eb-4db2-a194-d449ca824fdb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="185eea79-09ca-442f-a9fd-6852f8bed703" type="checkbox" ><label for="185eea79-09ca-442f-a9fd-6852f8bed703" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="084ba89b-a0aa-4de8-8bce-6ecc8778ae4f" type="checkbox" ><label for="084ba89b-a0aa-4de8-8bce-6ecc8778ae4f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54c79224-d689-48cf-99dd-a74cbe5abc98" type="checkbox" ><label for="54c79224-d689-48cf-99dd-a74cbe5abc98" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
