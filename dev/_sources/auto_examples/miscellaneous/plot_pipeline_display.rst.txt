
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline in a Jupyter Notebook is
`'diagram'` where `set_config(display='diagram')`. To deactivate HTML representation,
use `set_config(display='text')`.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To visualize the diagram, the default is `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a {color: black;background-color: white;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a pre{padding: 0;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-toggleable {background-color: white;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-estimator:hover {background-color: #d4ebff;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-item {z-index: 1;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-parallel-item:only-child::after {width: 0;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a div.sk-text-repr-fallback {display: none;}</style><div id="sk-eaab1c4f-48c0-4f9c-8c89-457be4af242a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e851ebe-b3be-4dd1-ad81-98fc38d51f90" type="checkbox" ><label for="6e851ebe-b3be-4dd1-ad81-98fc38d51f90" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33bfa74c-313a-45bc-9117-3b3faf959792" type="checkbox" ><label for="33bfa74c-313a-45bc-9117-3b3faf959792" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b49be387-0a9a-4ab1-aa3a-fede961bc538" type="checkbox" ><label for="b49be387-0a9a-4ab1-aa3a-fede961bc538" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-40

To view the text pipeline, change to `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 44-45

Put back the default display

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 48-55

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifier step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 55-68

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd {color: black;background-color: white;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd pre{padding: 0;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-toggleable {background-color: white;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-estimator:hover {background-color: #d4ebff;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-item {z-index: 1;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-parallel-item:only-child::after {width: 0;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9976c652-d97b-4b8d-899b-4066c78a5fdd div.sk-text-repr-fallback {display: none;}</style><div id="sk-9976c652-d97b-4b8d-899b-4066c78a5fdd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58648055-9a23-4e13-b925-26859bd07a74" type="checkbox" ><label for="58648055-9a23-4e13-b925-26859bd07a74" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c33fdc4a-57eb-432b-b501-67e6946a5c03" type="checkbox" ><label for="c33fdc4a-57eb-432b-b501-67e6946a5c03" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c519f02b-e550-4e8b-b4cc-dbe93c0cdeec" type="checkbox" ><label for="c519f02b-e550-4e8b-b4cc-dbe93c0cdeec" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="700b3fc1-03e7-4213-9e83-5e94d08fb403" type="checkbox" ><label for="700b3fc1-03e7-4213-9e83-5e94d08fb403" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-75

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 75-84

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b {color: black;background-color: white;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b pre{padding: 0;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-toggleable {background-color: white;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-estimator:hover {background-color: #d4ebff;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-item {z-index: 1;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-parallel-item:only-child::after {width: 0;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b div.sk-text-repr-fallback {display: none;}</style><div id="sk-c5781baa-a4a6-4ffe-8fe9-f0767406e02b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e94eeb8-bfc4-46ad-ae40-5714157d4140" type="checkbox" ><label for="5e94eeb8-bfc4-46ad-ae40-5714157d4140" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65bb93dc-7847-4b9f-9a34-30d5f588336f" type="checkbox" ><label for="65bb93dc-7847-4b9f-9a34-30d5f588336f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75731613-fa92-4a45-b80e-4d946c77271f" type="checkbox" ><label for="75731613-fa92-4a45-b80e-4d946c77271f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-91

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 91-127

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b770c144-e344-42ec-9317-5566f3cef248 {color: black;background-color: white;}#sk-b770c144-e344-42ec-9317-5566f3cef248 pre{padding: 0;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-toggleable {background-color: white;}#sk-b770c144-e344-42ec-9317-5566f3cef248 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b770c144-e344-42ec-9317-5566f3cef248 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b770c144-e344-42ec-9317-5566f3cef248 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b770c144-e344-42ec-9317-5566f3cef248 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b770c144-e344-42ec-9317-5566f3cef248 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b770c144-e344-42ec-9317-5566f3cef248 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-item {z-index: 1;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-parallel-item:only-child::after {width: 0;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b770c144-e344-42ec-9317-5566f3cef248 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b770c144-e344-42ec-9317-5566f3cef248" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0b1ddfb-35f4-4d4e-98f5-2a6a1709b72a" type="checkbox" ><label for="e0b1ddfb-35f4-4d4e-98f5-2a6a1709b72a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1ddb312-548a-46ad-ac7b-8faa06b34fb8" type="checkbox" ><label for="d1ddb312-548a-46ad-ac7b-8faa06b34fb8" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d18b2a40-4a0f-47a8-9633-087302ca40bb" type="checkbox" ><label for="d18b2a40-4a0f-47a8-9633-087302ca40bb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc49eaa2-2f1f-489b-ab3f-c50895eb28a6" type="checkbox" ><label for="cc49eaa2-2f1f-489b-ab3f-c50895eb28a6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15814c87-5127-48a4-b339-616c968b7f1c" type="checkbox" ><label for="15814c87-5127-48a4-b339-616c968b7f1c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abebd55c-71f0-4173-b723-50032cb5b762" type="checkbox" ><label for="abebd55c-71f0-4173-b723-50032cb5b762" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59b882d6-5160-4b42-bcdc-f84e52b223f3" type="checkbox" ><label for="59b882d6-5160-4b42-bcdc-f84e52b223f3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f309a38-3b69-4681-93b8-695391cba65c" type="checkbox" ><label for="6f309a38-3b69-4681-93b8-695391cba65c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c58ce91a-9b6b-47d0-b017-88da7d2c3fdf" type="checkbox" ><label for="c58ce91a-9b6b-47d0-b017-88da7d2c3fdf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 128-134

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 134-181

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-843ccabb-cec5-4f48-a55a-02cf053989ff {color: black;background-color: white;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff pre{padding: 0;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-toggleable {background-color: white;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-item {z-index: 1;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-parallel-item:only-child::after {width: 0;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-843ccabb-cec5-4f48-a55a-02cf053989ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-843ccabb-cec5-4f48-a55a-02cf053989ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39488176-449c-4adb-94ee-c372ed3c18db" type="checkbox" ><label for="39488176-449c-4adb-94ee-c372ed3c18db" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1d9cb41-be61-4825-ad6d-f5bf7da025a7" type="checkbox" ><label for="e1d9cb41-be61-4825-ad6d-f5bf7da025a7" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d955554-3fef-4b8b-8fb2-3399d0c61aaf" type="checkbox" ><label for="2d955554-3fef-4b8b-8fb2-3399d0c61aaf" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31de9813-fe27-4a98-a1c9-1f09c203eb84" type="checkbox" ><label for="31de9813-fe27-4a98-a1c9-1f09c203eb84" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d89c0edb-6534-4745-aaa0-7358dfb74166" type="checkbox" ><label for="d89c0edb-6534-4745-aaa0-7358dfb74166" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8df4db78-f2dc-4679-826c-9ff727c99e00" type="checkbox" ><label for="8df4db78-f2dc-4679-826c-9ff727c99e00" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17ad393a-c7f8-4bc6-a168-b85dd05ee82d" type="checkbox" ><label for="17ad393a-c7f8-4bc6-a168-b85dd05ee82d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54728dcd-8e98-454a-b8d2-8f5ef1cc7766" type="checkbox" ><label for="54728dcd-8e98-454a-b8d2-8f5ef1cc7766" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8143a7fb-961f-40c9-8be4-18494fa3f050" type="checkbox" ><label for="8143a7fb-961f-40c9-8be4-18494fa3f050" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3dadc128-8b88-4ce7-a2a4-b6bbcae7ed5c" type="checkbox" ><label for="3dadc128-8b88-4ce7-a2a4-b6bbcae7ed5c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.089 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
