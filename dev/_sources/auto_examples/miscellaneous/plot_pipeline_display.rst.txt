
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd {color: black;background-color: white;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd pre{padding: 0;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-toggleable {background-color: white;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-estimator:hover {background-color: #d4ebff;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-item {z-index: 1;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-parallel-item:only-child::after {width: 0;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-container {display: inline-block;position: relative;}#sk-2c933bcd-acb7-42bd-82b0-e674edc726cd div.sk-text-repr-fallback {display: none;}</style><div id="sk-2c933bcd-acb7-42bd-82b0-e674edc726cd" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2346334a-5eae-49e7-9011-4b27808bddb4" type="checkbox" ><label class="sk-toggleable__label" for="2346334a-5eae-49e7-9011-4b27808bddb4">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93cec8ec-feb0-4fc0-b662-67e8d0fed5d6" type="checkbox" ><label class="sk-toggleable__label" for="93cec8ec-feb0-4fc0-b662-67e8d0fed5d6">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22140d63-ce0c-4753-a542-5787d6daa2e4" type="checkbox" ><label class="sk-toggleable__label" for="22140d63-ce0c-4753-a542-5787d6daa2e4">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff {color: black;background-color: white;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff pre{padding: 0;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-toggleable {background-color: white;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-item {z-index: 1;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-parallel-item:only-child::after {width: 0;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-container {display: inline-block;position: relative;}#sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-62573bd4-1987-4fa7-9a16-c89d5b5736ff" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66832e77-020d-4dcb-9480-cf56aa5719ae" type="checkbox" ><label class="sk-toggleable__label" for="66832e77-020d-4dcb-9480-cf56aa5719ae">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e2dc5c8-93a2-4022-bb6c-51a2e8f4644b" type="checkbox" ><label class="sk-toggleable__label" for="9e2dc5c8-93a2-4022-bb6c-51a2e8f4644b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3398585-7bd6-4168-8e52-d5488d0b8579" type="checkbox" ><label class="sk-toggleable__label" for="d3398585-7bd6-4168-8e52-d5488d0b8579">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3dd5ec5-36a6-4fdd-98cb-5faf753a0a26" type="checkbox" ><label class="sk-toggleable__label" for="d3dd5ec5-36a6-4fdd-98cb-5faf753a0a26">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 {color: black;background-color: white;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 pre{padding: 0;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-toggleable {background-color: white;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-item {z-index: 1;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-parallel-item:only-child::after {width: 0;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-container {display: inline-block;position: relative;}#sk-d52cfa29-63ae-49fb-998e-8269808d46f9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d52cfa29-63ae-49fb-998e-8269808d46f9" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb4de101-6d37-46bb-acee-da82b8d4d79e" type="checkbox" ><label class="sk-toggleable__label" for="fb4de101-6d37-46bb-acee-da82b8d4d79e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdd99ad2-aa97-41ef-b88b-f6c4e74795a6" type="checkbox" ><label class="sk-toggleable__label" for="cdd99ad2-aa97-41ef-b88b-f6c4e74795a6">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1bab350d-b88c-4c57-8f26-03da6ecd0e37" type="checkbox" ><label class="sk-toggleable__label" for="1bab350d-b88c-4c57-8f26-03da6ecd0e37">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e207cd05-fd85-4298-82ab-32b38b95b72c {color: black;background-color: white;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c pre{padding: 0;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-toggleable {background-color: white;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-estimator:hover {background-color: #d4ebff;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-item {z-index: 1;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-parallel-item:only-child::after {width: 0;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-container {display: inline-block;position: relative;}#sk-e207cd05-fd85-4298-82ab-32b38b95b72c div.sk-text-repr-fallback {display: none;}</style><div id="sk-e207cd05-fd85-4298-82ab-32b38b95b72c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa88c9b3-5ed6-46ce-89ef-5c28c97aee3c" type="checkbox" ><label class="sk-toggleable__label" for="aa88c9b3-5ed6-46ce-89ef-5c28c97aee3c">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b79c97f4-8971-4510-895f-4a79721dbaf8" type="checkbox" ><label class="sk-toggleable__label" for="b79c97f4-8971-4510-895f-4a79721dbaf8">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1a157be-a98e-45e0-8143-178c21aadc6c" type="checkbox" ><label class="sk-toggleable__label" for="c1a157be-a98e-45e0-8143-178c21aadc6c">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f934b636-d631-4f76-9358-60de04deeaae" type="checkbox" ><label class="sk-toggleable__label" for="f934b636-d631-4f76-9358-60de04deeaae">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbc28f27-f3ce-42b8-a10b-305339212327" type="checkbox" ><label class="sk-toggleable__label" for="fbc28f27-f3ce-42b8-a10b-305339212327">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2befd735-2427-4bf9-91ab-3a9713fc3f3c" type="checkbox" ><label class="sk-toggleable__label" for="2befd735-2427-4bf9-91ab-3a9713fc3f3c">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02e1969d-8603-4da2-baea-2faac77d68fe" type="checkbox" ><label class="sk-toggleable__label" for="02e1969d-8603-4da2-baea-2faac77d68fe">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da9a8bdc-dc1f-4365-bcc9-b1e7aeedf5df" type="checkbox" ><label class="sk-toggleable__label" for="da9a8bdc-dc1f-4365-bcc9-b1e7aeedf5df">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37441b31-9b43-4382-870e-7e5144c9efd7" type="checkbox" ><label class="sk-toggleable__label" for="37441b31-9b43-4382-870e-7e5144c9efd7">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-50d080bb-f423-45ec-931b-6d8b4048941d {color: black;background-color: white;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d pre{padding: 0;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-toggleable {background-color: white;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-estimator:hover {background-color: #d4ebff;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-item {z-index: 1;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-parallel-item:only-child::after {width: 0;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-container {display: inline-block;position: relative;}#sk-50d080bb-f423-45ec-931b-6d8b4048941d div.sk-text-repr-fallback {display: none;}</style><div id="sk-50d080bb-f423-45ec-931b-6d8b4048941d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b24f84fc-609f-4b88-b881-c57f56409a17" type="checkbox" ><label class="sk-toggleable__label" for="b24f84fc-609f-4b88-b881-c57f56409a17">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa0cda43-89a7-4543-ba37-9dfb58dbccac" type="checkbox" ><label class="sk-toggleable__label" for="fa0cda43-89a7-4543-ba37-9dfb58dbccac">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e707dcc9-c013-4bf3-a167-ca01c74b9271" type="checkbox" ><label class="sk-toggleable__label" for="e707dcc9-c013-4bf3-a167-ca01c74b9271">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8765efc-3b4f-40c9-a6e1-33c99dd23003" type="checkbox" ><label class="sk-toggleable__label" for="f8765efc-3b4f-40c9-a6e1-33c99dd23003">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6109058-a7be-42ca-849d-9582cc7f02b9" type="checkbox" ><label class="sk-toggleable__label" for="a6109058-a7be-42ca-849d-9582cc7f02b9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98edf260-a5a2-4d2b-af3a-2d053611981b" type="checkbox" ><label class="sk-toggleable__label" for="98edf260-a5a2-4d2b-af3a-2d053611981b">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1328aa4-543f-445b-a9f0-6f4c57f3bd90" type="checkbox" ><label class="sk-toggleable__label" for="a1328aa4-543f-445b-a9f0-6f4c57f3bd90">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36ac7236-9499-45c4-b399-389ce2e4ab1e" type="checkbox" ><label class="sk-toggleable__label" for="36ac7236-9499-45c4-b399-389ce2e4ab1e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bbd7618-a4b0-4a9a-9bd2-1657c6877848" type="checkbox" ><label class="sk-toggleable__label" for="9bbd7618-a4b0-4a9a-9bd2-1657c6877848">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.090 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
