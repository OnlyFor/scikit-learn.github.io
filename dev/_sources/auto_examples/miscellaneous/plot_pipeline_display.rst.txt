
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b {color: black;background-color: white;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b pre{padding: 0;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-toggleable {background-color: white;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-estimator:hover {background-color: #d4ebff;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-item {z-index: 1;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-parallel-item:only-child::after {width: 0;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b div.sk-text-repr-fallback {display: none;}</style><div id="sk-6f5b0e3e-46df-470a-acc7-302931b4ad6b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99ae1164-9a74-4260-88de-f6b759b005c9" type="checkbox" ><label for="99ae1164-9a74-4260-88de-f6b759b005c9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="308d5ebb-45f6-470f-9916-37726bcfdfc9" type="checkbox" ><label for="308d5ebb-45f6-470f-9916-37726bcfdfc9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3da20d89-8250-4db1-9e35-590bdcc430de" type="checkbox" ><label for="3da20d89-8250-4db1-9e35-590bdcc430de" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e {color: black;background-color: white;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e pre{padding: 0;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-toggleable {background-color: white;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-item {z-index: 1;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-parallel-item:only-child::after {width: 0;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ab18665a-4940-4ea0-b83e-ec26a01a859e div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab18665a-4940-4ea0-b83e-ec26a01a859e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71ce16d1-b4b1-4233-af2d-c2e9f910faf1" type="checkbox" ><label for="71ce16d1-b4b1-4233-af2d-c2e9f910faf1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f145fca-ebc0-4424-af14-35b459e6e3a8" type="checkbox" ><label for="4f145fca-ebc0-4424-af14-35b459e6e3a8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd7a8678-dce5-4fcc-88ec-26a0236f5db1" type="checkbox" ><label for="bd7a8678-dce5-4fcc-88ec-26a0236f5db1" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c8186fc-a70e-40ff-a6e0-64063b2a45d0" type="checkbox" ><label for="8c8186fc-a70e-40ff-a6e0-64063b2a45d0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd {color: black;background-color: white;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd pre{padding: 0;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-toggleable {background-color: white;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-estimator:hover {background-color: #d4ebff;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-item {z-index: 1;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-parallel-item:only-child::after {width: 0;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd div.sk-text-repr-fallback {display: none;}</style><div id="sk-ef1e1ab9-17a7-4ddb-8b05-a73df49d3abd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="debe5f1d-b0e6-413f-88d3-15c2eb2427e8" type="checkbox" ><label for="debe5f1d-b0e6-413f-88d3-15c2eb2427e8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84bff2e5-8e8c-4b0f-a27c-822692e1fe3f" type="checkbox" ><label for="84bff2e5-8e8c-4b0f-a27c-822692e1fe3f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4d8a532-0bb7-486e-98d4-f2f372da27c5" type="checkbox" ><label for="e4d8a532-0bb7-486e-98d4-f2f372da27c5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa {color: black;background-color: white;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa pre{padding: 0;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-toggleable {background-color: white;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-estimator:hover {background-color: #d4ebff;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-item {z-index: 1;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-parallel-item:only-child::after {width: 0;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa div.sk-text-repr-fallback {display: none;}</style><div id="sk-6de88d4c-ea8f-4c08-873b-a593fca91bfa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1257e6ea-014d-429e-aad0-bffcd7e1a892" type="checkbox" ><label for="1257e6ea-014d-429e-aad0-bffcd7e1a892" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="238da1fa-7330-443e-8542-e4dc29d00f09" type="checkbox" ><label for="238da1fa-7330-443e-8542-e4dc29d00f09" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fd45fb1-b409-467b-b695-cb2757ad6302" type="checkbox" ><label for="5fd45fb1-b409-467b-b695-cb2757ad6302" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0fc8e62-5466-4230-812b-c83aecb2fcf4" type="checkbox" ><label for="f0fc8e62-5466-4230-812b-c83aecb2fcf4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7aad5f3-0aa5-45b4-8e1a-e220dd09853a" type="checkbox" ><label for="a7aad5f3-0aa5-45b4-8e1a-e220dd09853a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a633ab7b-7943-4782-a63a-f06ca9e87d69" type="checkbox" ><label for="a633ab7b-7943-4782-a63a-f06ca9e87d69" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6667b30-9a12-49fc-a8c3-c7cba71f1377" type="checkbox" ><label for="e6667b30-9a12-49fc-a8c3-c7cba71f1377" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f841670a-22d0-4ef9-a001-6dacfad21f50" type="checkbox" ><label for="f841670a-22d0-4ef9-a001-6dacfad21f50" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f6bf40c-ce89-4e6f-9976-e85f7caf8cd6" type="checkbox" ><label for="8f6bf40c-ce89-4e6f-9976-e85f7caf8cd6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 {color: black;background-color: white;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 pre{padding: 0;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-toggleable {background-color: white;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-item {z-index: 1;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-parallel-item:only-child::after {width: 0;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cc4c8a5c-ce17-4694-a8c8-5b04ee6ff815" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29587ed9-a975-43b3-a4f6-3c41774e0615" type="checkbox" ><label for="29587ed9-a975-43b3-a4f6-3c41774e0615" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="596a6601-d90e-4d29-9d9f-c02643dbddc5" type="checkbox" ><label for="596a6601-d90e-4d29-9d9f-c02643dbddc5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18702fc4-4eda-4e1a-a06d-6f97a510cb2a" type="checkbox" ><label for="18702fc4-4eda-4e1a-a06d-6f97a510cb2a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31a01215-a6c5-4c05-9c9d-ee95cdf2a2a4" type="checkbox" ><label for="31a01215-a6c5-4c05-9c9d-ee95cdf2a2a4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fd5401c-58ef-4bfd-8cf9-2d1352c69fe2" type="checkbox" ><label for="4fd5401c-58ef-4bfd-8cf9-2d1352c69fe2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c86b995-b111-4405-b7df-909bde556d46" type="checkbox" ><label for="2c86b995-b111-4405-b7df-909bde556d46" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="878c9eb8-bf54-4a4b-9c82-d696d7e65201" type="checkbox" ><label for="878c9eb8-bf54-4a4b-9c82-d696d7e65201" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93bd0883-016f-45d0-b003-855c9292ada0" type="checkbox" ><label for="93bd0883-016f-45d0-b003-855c9292ada0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bad418f4-0615-4bdb-9b75-630cc585415e" type="checkbox" ><label for="bad418f4-0615-4bdb-9b75-630cc585415e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
