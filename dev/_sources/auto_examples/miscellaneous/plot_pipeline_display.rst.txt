
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b {color: black;background-color: white;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b pre{padding: 0;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-toggleable {background-color: white;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-estimator:hover {background-color: #d4ebff;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-item {z-index: 1;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-parallel-item:only-child::after {width: 0;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b div.sk-text-repr-fallback {display: none;}</style><div id="sk-caa4a0fe-ea75-42a0-b8c7-b38362e07e4b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a608b839-5ac8-4198-b894-db6625062d1a" type="checkbox" ><label for="a608b839-5ac8-4198-b894-db6625062d1a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93d41954-1724-412b-8fed-cc5083c39909" type="checkbox" ><label for="93d41954-1724-412b-8fed-cc5083c39909" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82f1750d-2ad4-4dfe-a983-078be73bdc0b" type="checkbox" ><label for="82f1750d-2ad4-4dfe-a983-078be73bdc0b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb {color: black;background-color: white;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb pre{padding: 0;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-toggleable {background-color: white;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-item {z-index: 1;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-parallel-item:only-child::after {width: 0;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf5a0a9a-4654-4e3b-b28d-422e0a70addb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb626997-defb-4220-b38b-1bf1c2909f6e" type="checkbox" ><label for="eb626997-defb-4220-b38b-1bf1c2909f6e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ad7c55c-6aef-4130-9c91-43a3d8d3441c" type="checkbox" ><label for="4ad7c55c-6aef-4130-9c91-43a3d8d3441c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b027a6b-fd68-4657-8905-3fe4d4099f28" type="checkbox" ><label for="9b027a6b-fd68-4657-8905-3fe4d4099f28" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4776398c-a502-4dde-9c15-476356bad328" type="checkbox" ><label for="4776398c-a502-4dde-9c15-476356bad328" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 {color: black;background-color: white;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 pre{padding: 0;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-toggleable {background-color: white;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-estimator:hover {background-color: #d4ebff;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-item {z-index: 1;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-parallel-item:only-child::after {width: 0;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-84fe27b4-d639-4d1c-8e16-388291da4c37 div.sk-text-repr-fallback {display: none;}</style><div id="sk-84fe27b4-d639-4d1c-8e16-388291da4c37" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f10c8e83-eef4-42e0-a637-533e3fb5d67f" type="checkbox" ><label for="f10c8e83-eef4-42e0-a637-533e3fb5d67f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5632915a-5363-40bd-8d43-4aee4ada95a5" type="checkbox" ><label for="5632915a-5363-40bd-8d43-4aee4ada95a5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e2969a0-add3-4198-a494-521362e483f0" type="checkbox" ><label for="8e2969a0-add3-4198-a494-521362e483f0" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-54e06354-e921-4448-bf45-c97d19e1e196 {color: black;background-color: white;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 pre{padding: 0;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-toggleable {background-color: white;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-estimator:hover {background-color: #d4ebff;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-item {z-index: 1;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-parallel-item:only-child::after {width: 0;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-54e06354-e921-4448-bf45-c97d19e1e196 div.sk-text-repr-fallback {display: none;}</style><div id="sk-54e06354-e921-4448-bf45-c97d19e1e196" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfb79c9c-3766-42ab-84b9-bc44cb1ba2bf" type="checkbox" ><label for="bfb79c9c-3766-42ab-84b9-bc44cb1ba2bf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95c80b60-021f-4380-83a2-ed459a51dd93" type="checkbox" ><label for="95c80b60-021f-4380-83a2-ed459a51dd93" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b016387-4396-4517-85e9-5ebd4210f372" type="checkbox" ><label for="7b016387-4396-4517-85e9-5ebd4210f372" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cf882f2-7a47-44d5-92f2-7244c9fe5cf1" type="checkbox" ><label for="1cf882f2-7a47-44d5-92f2-7244c9fe5cf1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a166a9e-9cd4-4237-9d16-382a34c413d9" type="checkbox" ><label for="6a166a9e-9cd4-4237-9d16-382a34c413d9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b86e743-2920-4b2f-968c-7f1f99412cf6" type="checkbox" ><label for="9b86e743-2920-4b2f-968c-7f1f99412cf6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2476654d-160d-4b75-9513-4acfeb99146b" type="checkbox" ><label for="2476654d-160d-4b75-9513-4acfeb99146b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef06004f-dd84-4d91-9d92-6ddabd4972fe" type="checkbox" ><label for="ef06004f-dd84-4d91-9d92-6ddabd4972fe" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cba9b89-0709-461a-a9ac-ac666b12537c" type="checkbox" ><label for="6cba9b89-0709-461a-a9ac-ac666b12537c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 {color: black;background-color: white;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 pre{padding: 0;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-toggleable {background-color: white;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-item {z-index: 1;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-parallel-item:only-child::after {width: 0;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-15258d6e-751c-42af-b5ff-c5a6ea07cde3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3271d57c-c4da-4c44-8bf9-4a82d0fda4cc" type="checkbox" ><label for="3271d57c-c4da-4c44-8bf9-4a82d0fda4cc" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="269b6e73-3036-4919-87ee-242832fcf91a" type="checkbox" ><label for="269b6e73-3036-4919-87ee-242832fcf91a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eebdd105-4d84-4ecf-a377-f8ab916842e7" type="checkbox" ><label for="eebdd105-4d84-4ecf-a377-f8ab916842e7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdea18d4-373d-425c-8802-638a257cf0aa" type="checkbox" ><label for="bdea18d4-373d-425c-8802-638a257cf0aa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="213ff1a8-f130-4774-a627-ad90f9b8c8d2" type="checkbox" ><label for="213ff1a8-f130-4774-a627-ad90f9b8c8d2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccab4781-5f85-4032-8feb-f1b8cd629ae6" type="checkbox" ><label for="ccab4781-5f85-4032-8feb-f1b8cd629ae6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d03815-4ecb-44d9-a60c-2a74b334ae90" type="checkbox" ><label for="a7d03815-4ecb-44d9-a60c-2a74b334ae90" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65e66d92-1ab8-490f-a0a1-00439fe5d08b" type="checkbox" ><label for="65e66d92-1ab8-490f-a0a1-00439fe5d08b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fff98fa2-714b-41d0-a18f-4bedd42e869a" type="checkbox" ><label for="fff98fa2-714b-41d0-a18f-4bedd42e869a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
