
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec {color: black;background-color: white;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec pre{padding: 0;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-toggleable {background-color: white;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-estimator:hover {background-color: #d4ebff;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-item {z-index: 1;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-parallel-item:only-child::after {width: 0;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b1db7047-5d3b-47c4-86cd-68bf699911ec div.sk-text-repr-fallback {display: none;}</style><div id="sk-b1db7047-5d3b-47c4-86cd-68bf699911ec" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="225ddf96-1cd4-4b67-8e47-f3011357a72d" type="checkbox" ><label for="225ddf96-1cd4-4b67-8e47-f3011357a72d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="beb1e307-cb74-479f-bd79-104f594f8e8e" type="checkbox" ><label for="beb1e307-cb74-479f-bd79-104f594f8e8e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3b8c9a5-d5ad-49c5-b530-ea03d3066f6c" type="checkbox" ><label for="a3b8c9a5-d5ad-49c5-b530-ea03d3066f6c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-55f61c29-b885-4ced-9697-aefe92406bc6 {color: black;background-color: white;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 pre{padding: 0;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-toggleable {background-color: white;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-item {z-index: 1;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-parallel-item:only-child::after {width: 0;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-55f61c29-b885-4ced-9697-aefe92406bc6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-55f61c29-b885-4ced-9697-aefe92406bc6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9ec4029-2f1d-49cc-8395-f4d95fae4cc1" type="checkbox" ><label for="f9ec4029-2f1d-49cc-8395-f4d95fae4cc1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1576c92e-9442-4891-9f24-453251001848" type="checkbox" ><label for="1576c92e-9442-4891-9f24-453251001848" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2efdedb9-6289-4bd9-a1d0-29b0ce6fff86" type="checkbox" ><label for="2efdedb9-6289-4bd9-a1d0-29b0ce6fff86" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf5385bf-5df7-4b46-9e00-75049bef97ec" type="checkbox" ><label for="bf5385bf-5df7-4b46-9e00-75049bef97ec" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 {color: black;background-color: white;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 pre{padding: 0;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-toggleable {background-color: white;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-item {z-index: 1;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-parallel-item:only-child::after {width: 0;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fff48aba-bdfc-438e-9e6d-3e1c3b6748b6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdf2d9e1-9ebb-485b-8bea-602f8547cd7a" type="checkbox" ><label for="fdf2d9e1-9ebb-485b-8bea-602f8547cd7a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e7a10f7-98e9-495d-bdfb-1a442ec01cb8" type="checkbox" ><label for="7e7a10f7-98e9-495d-bdfb-1a442ec01cb8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7278790e-dec9-44fa-83e2-eaf4670431d9" type="checkbox" ><label for="7278790e-dec9-44fa-83e2-eaf4670431d9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca {color: black;background-color: white;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca pre{padding: 0;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-toggleable {background-color: white;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-item {z-index: 1;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-parallel-item:only-child::after {width: 0;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca div.sk-text-repr-fallback {display: none;}</style><div id="sk-a5d4f2e4-8bca-4810-9a5b-29116e0db8ca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b391b8c-c4b4-4911-b01b-3b68ddc4b396" type="checkbox" ><label for="2b391b8c-c4b4-4911-b01b-3b68ddc4b396" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9590d89-8aac-407c-8e7e-b50e514d18b6" type="checkbox" ><label for="d9590d89-8aac-407c-8e7e-b50e514d18b6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23018b39-e6d1-4e9d-9d31-7d7045f483e0" type="checkbox" ><label for="23018b39-e6d1-4e9d-9d31-7d7045f483e0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcb88fba-4670-41f8-9642-b2e570b39dc4" type="checkbox" ><label for="dcb88fba-4670-41f8-9642-b2e570b39dc4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a99347a9-52bb-4bae-87a4-142c5f90615f" type="checkbox" ><label for="a99347a9-52bb-4bae-87a4-142c5f90615f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="050eedf4-4e44-482b-88ad-57cf13229d18" type="checkbox" ><label for="050eedf4-4e44-482b-88ad-57cf13229d18" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23749e34-0799-48ed-951c-ce245ddfba33" type="checkbox" ><label for="23749e34-0799-48ed-951c-ce245ddfba33" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e923d4c1-d86b-48c2-b203-318d7f94022e" type="checkbox" ><label for="e923d4c1-d86b-48c2-b203-318d7f94022e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8398e191-460b-4b83-ad84-59d799683f1f" type="checkbox" ><label for="8398e191-460b-4b83-ad84-59d799683f1f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 {color: black;background-color: white;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 pre{padding: 0;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-toggleable {background-color: white;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-item {z-index: 1;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-parallel-item:only-child::after {width: 0;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5a974f7b-b63e-4c51-859e-bbb3a74e33d4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35eb8a8f-0579-4d45-87d5-7cd0ded0e1ef" type="checkbox" ><label for="35eb8a8f-0579-4d45-87d5-7cd0ded0e1ef" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d32e0b25-13b1-494a-8681-06cc02b64fa2" type="checkbox" ><label for="d32e0b25-13b1-494a-8681-06cc02b64fa2" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a2fa4a9-62b6-49a9-ba2f-c2a8ff60e762" type="checkbox" ><label for="8a2fa4a9-62b6-49a9-ba2f-c2a8ff60e762" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddafb91a-c0a7-480f-b34e-70e763900b77" type="checkbox" ><label for="ddafb91a-c0a7-480f-b34e-70e763900b77" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2726aa52-d522-4d54-b7b3-870fe2a33abe" type="checkbox" ><label for="2726aa52-d522-4d54-b7b3-870fe2a33abe" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0808040b-d396-48df-bb8f-f4d46fba0a15" type="checkbox" ><label for="0808040b-d396-48df-bb8f-f4d46fba0a15" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac1363e2-04dd-4e4c-8ced-89a83d7b5b50" type="checkbox" ><label for="ac1363e2-04dd-4e4c-8ced-89a83d7b5b50" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43f77add-0e04-46b4-89f6-992b608ce026" type="checkbox" ><label for="43f77add-0e04-46b4-89f6-992b608ce026" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56b24e4a-8de7-4b90-be03-73784961a08d" type="checkbox" ><label for="56b24e4a-8de7-4b90-be03-73784961a08d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46d85ee3-11fd-4401-94a7-b52b5f01ff65" type="checkbox" ><label for="46d85ee3-11fd-4401-94a7-b52b5f01ff65" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.095 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
