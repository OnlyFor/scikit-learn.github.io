
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-77cf7325-9b8c-485b-afab-4990ee90a87b {color: black;background-color: white;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b pre{padding: 0;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-toggleable {background-color: white;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-estimator:hover {background-color: #d4ebff;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-item {z-index: 1;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-parallel-item:only-child::after {width: 0;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-77cf7325-9b8c-485b-afab-4990ee90a87b div.sk-text-repr-fallback {display: none;}</style><div id="sk-77cf7325-9b8c-485b-afab-4990ee90a87b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31931731-1a46-4f05-9f15-df9db419affc" type="checkbox" ><label for="31931731-1a46-4f05-9f15-df9db419affc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d58c31b-4036-429a-afbc-2998b1d7c8f0" type="checkbox" ><label for="5d58c31b-4036-429a-afbc-2998b1d7c8f0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aab55e3f-4ddb-4ef7-9219-c0de3c240efc" type="checkbox" ><label for="aab55e3f-4ddb-4ef7-9219-c0de3c240efc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-00948291-599c-4fb2-be86-aff008fe5794 {color: black;background-color: white;}#sk-00948291-599c-4fb2-be86-aff008fe5794 pre{padding: 0;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-toggleable {background-color: white;}#sk-00948291-599c-4fb2-be86-aff008fe5794 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-00948291-599c-4fb2-be86-aff008fe5794 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-00948291-599c-4fb2-be86-aff008fe5794 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-00948291-599c-4fb2-be86-aff008fe5794 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-00948291-599c-4fb2-be86-aff008fe5794 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00948291-599c-4fb2-be86-aff008fe5794 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-estimator:hover {background-color: #d4ebff;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-item {z-index: 1;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-parallel-item:only-child::after {width: 0;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-00948291-599c-4fb2-be86-aff008fe5794 div.sk-text-repr-fallback {display: none;}</style><div id="sk-00948291-599c-4fb2-be86-aff008fe5794" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a68ed4d-78bf-4c84-bbf7-02f861db3d6c" type="checkbox" ><label for="1a68ed4d-78bf-4c84-bbf7-02f861db3d6c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bee7987-bf22-4847-9929-03c6f3cbf013" type="checkbox" ><label for="7bee7987-bf22-4847-9929-03c6f3cbf013" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fe986a4-a846-4cf7-8589-22297db7f664" type="checkbox" ><label for="6fe986a4-a846-4cf7-8589-22297db7f664" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="260e878a-7f97-4463-ad24-9908ef606c0c" type="checkbox" ><label for="260e878a-7f97-4463-ad24-9908ef606c0c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 {color: black;background-color: white;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 pre{padding: 0;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-toggleable {background-color: white;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-estimator:hover {background-color: #d4ebff;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-item {z-index: 1;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-parallel-item:only-child::after {width: 0;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-53f96879-4e02-41d6-be9b-17f22c4f1152 div.sk-text-repr-fallback {display: none;}</style><div id="sk-53f96879-4e02-41d6-be9b-17f22c4f1152" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4920f2a1-82ba-4886-b356-a6ce93f40302" type="checkbox" ><label for="4920f2a1-82ba-4886-b356-a6ce93f40302" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d65c28d0-8f18-4db4-b26e-0ddccc2396ad" type="checkbox" ><label for="d65c28d0-8f18-4db4-b26e-0ddccc2396ad" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7589747d-7ceb-4711-b5f9-997cec43aae9" type="checkbox" ><label for="7589747d-7ceb-4711-b5f9-997cec43aae9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 {color: black;background-color: white;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 pre{padding: 0;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-toggleable {background-color: white;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-item {z-index: 1;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-parallel-item:only-child::after {width: 0;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa6b77cb-a232-4b2c-840b-3f8fd3536be8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2034e21-e66c-494f-8310-ba08bf5b4c9f" type="checkbox" ><label for="a2034e21-e66c-494f-8310-ba08bf5b4c9f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b01a3ed4-89f6-4792-b982-2d6cde56a0ef" type="checkbox" ><label for="b01a3ed4-89f6-4792-b982-2d6cde56a0ef" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ed4e4e1-f2f7-4d86-93c8-67ba5247859e" type="checkbox" ><label for="8ed4e4e1-f2f7-4d86-93c8-67ba5247859e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56e2e053-6d10-478c-b707-6f822c265f9b" type="checkbox" ><label for="56e2e053-6d10-478c-b707-6f822c265f9b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d37a9e2-f9cd-4573-b2c1-ef1964199b32" type="checkbox" ><label for="9d37a9e2-f9cd-4573-b2c1-ef1964199b32" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0f8db92-51e3-48a3-9e07-b0fde0a88535" type="checkbox" ><label for="e0f8db92-51e3-48a3-9e07-b0fde0a88535" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3843b079-f804-401e-915d-467f2417d61a" type="checkbox" ><label for="3843b079-f804-401e-915d-467f2417d61a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f63f509-e038-4d2e-90b9-e05af5d716d7" type="checkbox" ><label for="3f63f509-e038-4d2e-90b9-e05af5d716d7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f384f4fa-9ebb-454b-b610-f218326b3d6e" type="checkbox" ><label for="f384f4fa-9ebb-454b-b610-f218326b3d6e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a {color: black;background-color: white;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a pre{padding: 0;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-toggleable {background-color: white;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-estimator:hover {background-color: #d4ebff;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-item {z-index: 1;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-parallel-item:only-child::after {width: 0;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cbeb9c5b-bb62-4457-a598-fda056998f3a div.sk-text-repr-fallback {display: none;}</style><div id="sk-cbeb9c5b-bb62-4457-a598-fda056998f3a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5d5c228-c743-4a59-82e3-4cd0c4106480" type="checkbox" ><label for="b5d5c228-c743-4a59-82e3-4cd0c4106480" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34ddb2e8-d2ae-4dc3-bf82-ef23d69760a1" type="checkbox" ><label for="34ddb2e8-d2ae-4dc3-bf82-ef23d69760a1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="727281fb-19b0-42b3-977c-cfe79e341ed9" type="checkbox" ><label for="727281fb-19b0-42b3-977c-cfe79e341ed9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4bcea43-4304-4002-9662-331a98325543" type="checkbox" ><label for="d4bcea43-4304-4002-9662-331a98325543" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="838d6dbf-a819-4e05-bd6e-4b33a1539aba" type="checkbox" ><label for="838d6dbf-a819-4e05-bd6e-4b33a1539aba" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d26dda15-facf-4e5d-b1f2-cc085c81b6ba" type="checkbox" ><label for="d26dda15-facf-4e5d-b1f2-cc085c81b6ba" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6ddea35-fadd-40f2-9f6a-b396fb2b2992" type="checkbox" ><label for="f6ddea35-fadd-40f2-9f6a-b396fb2b2992" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59b3afb9-32c3-4eb1-ab01-e2dd405875aa" type="checkbox" ><label for="59b3afb9-32c3-4eb1-ab01-e2dd405875aa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42bac790-7f56-4c28-8e3b-880a1ea68cbe" type="checkbox" ><label for="42bac790-7f56-4c28-8e3b-880a1ea68cbe" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
