
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 {color: black;background-color: white;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 pre{padding: 0;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-toggleable {background-color: white;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-item {z-index: 1;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-parallel-item:only-child::after {width: 0;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a95d436-4f8b-4b4d-b392-74186dba6200 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a95d436-4f8b-4b4d-b392-74186dba6200" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb0c2066-be67-4e81-a801-789b0def7f2e" type="checkbox" ><label for="fb0c2066-be67-4e81-a801-789b0def7f2e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf2b0846-92f4-412f-a825-8dd2eb515b58" type="checkbox" ><label for="cf2b0846-92f4-412f-a825-8dd2eb515b58" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bedd6ce-3d54-4c9a-96ff-5bbb0a432541" type="checkbox" ><label for="2bedd6ce-3d54-4c9a-96ff-5bbb0a432541" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 {color: black;background-color: white;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 pre{padding: 0;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-toggleable {background-color: white;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-item {z-index: 1;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-parallel-item:only-child::after {width: 0;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1af3e87d-4c9f-4327-b2f5-a6d2d2a7fa75" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6ef70e3-d1a6-41ea-89c1-db7c13de0616" type="checkbox" ><label for="b6ef70e3-d1a6-41ea-89c1-db7c13de0616" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fd1e09b-021f-4263-a492-e6a8313b576a" type="checkbox" ><label for="6fd1e09b-021f-4263-a492-e6a8313b576a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c455c5c-2e39-4230-b930-df36cbb4532c" type="checkbox" ><label for="4c455c5c-2e39-4230-b930-df36cbb4532c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4eec5f72-328c-4c39-b732-fd934207055c" type="checkbox" ><label for="4eec5f72-328c-4c39-b732-fd934207055c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 {color: black;background-color: white;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 pre{padding: 0;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-toggleable {background-color: white;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-item {z-index: 1;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-parallel-item:only-child::after {width: 0;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8bc94c6e-5c1d-44f5-bc4d-f9ccecb0efd9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba8908b0-4daa-40a3-868b-ac1373c58fe9" type="checkbox" ><label for="ba8908b0-4daa-40a3-868b-ac1373c58fe9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23326559-c237-4503-af70-5f4938411cd9" type="checkbox" ><label for="23326559-c237-4503-af70-5f4938411cd9" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e082906-9a0d-4e34-b04b-2b02daead784" type="checkbox" ><label for="0e082906-9a0d-4e34-b04b-2b02daead784" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 {color: black;background-color: white;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 pre{padding: 0;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-toggleable {background-color: white;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-item {z-index: 1;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-parallel-item:only-child::after {width: 0;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f99d9f76-782f-4dc3-a424-88a1e3518c04 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f99d9f76-782f-4dc3-a424-88a1e3518c04" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc003598-9230-44d9-9ee1-402420920a93" type="checkbox" ><label for="bc003598-9230-44d9-9ee1-402420920a93" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff02a9a3-a621-4fab-b79a-48644dc592a4" type="checkbox" ><label for="ff02a9a3-a621-4fab-b79a-48644dc592a4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="760def00-5535-403f-8752-3699844b7367" type="checkbox" ><label for="760def00-5535-403f-8752-3699844b7367" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5f3e779-fd97-4190-930e-9d3746a8fdac" type="checkbox" ><label for="b5f3e779-fd97-4190-930e-9d3746a8fdac" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec341d0b-026c-4b8c-ae4c-e4ffb1a7f56e" type="checkbox" ><label for="ec341d0b-026c-4b8c-ae4c-e4ffb1a7f56e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4a4618c-738c-45e4-9848-3552dcb1162a" type="checkbox" ><label for="a4a4618c-738c-45e4-9848-3552dcb1162a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28da1b56-c299-4d80-a9c9-7d35cb48c72c" type="checkbox" ><label for="28da1b56-c299-4d80-a9c9-7d35cb48c72c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2480fb19-fe28-43fc-a7c9-785d20c15c27" type="checkbox" ><label for="2480fb19-fe28-43fc-a7c9-785d20c15c27" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e77f1615-d4e9-4275-b5d0-858a44be1dbf" type="checkbox" ><label for="e77f1615-d4e9-4275-b5d0-858a44be1dbf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 {color: black;background-color: white;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 pre{padding: 0;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-toggleable {background-color: white;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-item {z-index: 1;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-parallel-item:only-child::after {width: 0;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f5f0b70a-ddcd-4d16-a380-455cad72fdb8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2429d405-e064-448e-9528-0310c708c24c" type="checkbox" ><label for="2429d405-e064-448e-9528-0310c708c24c" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73f703e0-6505-4d60-bf9c-3ef7430783fc" type="checkbox" ><label for="73f703e0-6505-4d60-bf9c-3ef7430783fc" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12b37f54-6d90-40a6-a860-a7af9bf5d49e" type="checkbox" ><label for="12b37f54-6d90-40a6-a860-a7af9bf5d49e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d562bf5-09f0-46dc-b3b6-23f6cb6ac505" type="checkbox" ><label for="8d562bf5-09f0-46dc-b3b6-23f6cb6ac505" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5227830-509a-4ba6-8d92-64fb29298202" type="checkbox" ><label for="a5227830-509a-4ba6-8d92-64fb29298202" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0db8d773-5655-4768-aa13-04ee3be3b186" type="checkbox" ><label for="0db8d773-5655-4768-aa13-04ee3be3b186" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78d3ec68-54f2-47b2-9c57-6e915cc56315" type="checkbox" ><label for="78d3ec68-54f2-47b2-9c57-6e915cc56315" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be38dde0-921b-49cb-9f76-25d4a24239b5" type="checkbox" ><label for="be38dde0-921b-49cb-9f76-25d4a24239b5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2ea500b-ec85-46a7-a8c3-57760b56b66b" type="checkbox" ><label for="a2ea500b-ec85-46a7-a8c3-57760b56b66b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.078 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
