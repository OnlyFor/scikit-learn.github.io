
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8963030f-13f7-4c3d-8c92-6c409811e507 {color: black;background-color: white;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 pre{padding: 0;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-toggleable {background-color: white;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-item {z-index: 1;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-parallel-item:only-child::after {width: 0;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-container {display: inline-block;position: relative;}#sk-8963030f-13f7-4c3d-8c92-6c409811e507 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8963030f-13f7-4c3d-8c92-6c409811e507" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3be22507-58fe-4fda-8b26-0285bc8e96d5" type="checkbox" ><label class="sk-toggleable__label" for="3be22507-58fe-4fda-8b26-0285bc8e96d5">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0bd67f0-dce3-41f2-89fe-d731597cd6f3" type="checkbox" ><label class="sk-toggleable__label" for="c0bd67f0-dce3-41f2-89fe-d731597cd6f3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cbf8ab6-66ac-427e-8cab-1812a493fd00" type="checkbox" ><label class="sk-toggleable__label" for="9cbf8ab6-66ac-427e-8cab-1812a493fd00">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 {color: black;background-color: white;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 pre{padding: 0;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-toggleable {background-color: white;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-item {z-index: 1;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-parallel-item:only-child::after {width: 0;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-container {display: inline-block;position: relative;}#sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d3ea51ef-8c52-4d33-b9f7-39eb41f4f947" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33c9b6a8-0a4f-4985-b305-aea515ce2b3c" type="checkbox" ><label class="sk-toggleable__label" for="33c9b6a8-0a4f-4985-b305-aea515ce2b3c">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67f813c1-ab2b-4d83-a6f0-3f8e8effb22b" type="checkbox" ><label class="sk-toggleable__label" for="67f813c1-ab2b-4d83-a6f0-3f8e8effb22b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f11ab68-97fb-43aa-914a-19dde5beb837" type="checkbox" ><label class="sk-toggleable__label" for="2f11ab68-97fb-43aa-914a-19dde5beb837">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b94f83e5-e58f-4cb1-86f8-b36406422efd" type="checkbox" ><label class="sk-toggleable__label" for="b94f83e5-e58f-4cb1-86f8-b36406422efd">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca {color: black;background-color: white;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca pre{padding: 0;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-toggleable {background-color: white;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-item {z-index: 1;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-parallel-item:only-child::after {width: 0;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-container {display: inline-block;position: relative;}#sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca div.sk-text-repr-fallback {display: none;}</style><div id="sk-df057f16-64ea-4c80-9b4a-f8a26431c9ca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d94012d7-0898-4d47-bdf8-56dd51f0bc2f" type="checkbox" ><label class="sk-toggleable__label" for="d94012d7-0898-4d47-bdf8-56dd51f0bc2f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84380295-7549-40e7-b03d-fdac20117aee" type="checkbox" ><label class="sk-toggleable__label" for="84380295-7549-40e7-b03d-fdac20117aee">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b672a32-a736-4e84-871f-d3623f901194" type="checkbox" ><label class="sk-toggleable__label" for="7b672a32-a736-4e84-871f-d3623f901194">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 {color: black;background-color: white;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 pre{padding: 0;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-toggleable {background-color: white;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-item {z-index: 1;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-parallel-item:only-child::after {width: 0;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-container {display: inline-block;position: relative;}#sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d8f5b4eb-f51b-4f4d-b4d6-958e2644db29" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ee5c350-83e9-4a2a-8525-f4ceab863f2b" type="checkbox" ><label class="sk-toggleable__label" for="2ee5c350-83e9-4a2a-8525-f4ceab863f2b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09fc1d6c-304f-413c-b20c-ba281221b60a" type="checkbox" ><label class="sk-toggleable__label" for="09fc1d6c-304f-413c-b20c-ba281221b60a">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19404d6f-eda6-4693-b9cc-7c3e7e5dced1" type="checkbox" ><label class="sk-toggleable__label" for="19404d6f-eda6-4693-b9cc-7c3e7e5dced1">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44ba237c-c107-46fa-9666-5c7258700f7b" type="checkbox" ><label class="sk-toggleable__label" for="44ba237c-c107-46fa-9666-5c7258700f7b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f0ac4ac-b6ca-411c-bc11-0fa8800d58c9" type="checkbox" ><label class="sk-toggleable__label" for="3f0ac4ac-b6ca-411c-bc11-0fa8800d58c9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6535c39b-c966-4b95-a0bd-7fd190de9b6e" type="checkbox" ><label class="sk-toggleable__label" for="6535c39b-c966-4b95-a0bd-7fd190de9b6e">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2319cb60-5717-435c-a39b-6486bec64a12" type="checkbox" ><label class="sk-toggleable__label" for="2319cb60-5717-435c-a39b-6486bec64a12">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9c9451a-13b4-40d8-8087-4113a6da8d9d" type="checkbox" ><label class="sk-toggleable__label" for="e9c9451a-13b4-40d8-8087-4113a6da8d9d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dfb53e5-f7a4-4de0-8fb9-76ee8a737d6b" type="checkbox" ><label class="sk-toggleable__label" for="4dfb53e5-f7a4-4de0-8fb9-76ee8a737d6b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d0dd9a5e-419b-4159-9218-7d6661135cad {color: black;background-color: white;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad pre{padding: 0;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-toggleable {background-color: white;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-estimator:hover {background-color: #d4ebff;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-item {z-index: 1;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-parallel-item:only-child::after {width: 0;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-container {display: inline-block;position: relative;}#sk-d0dd9a5e-419b-4159-9218-7d6661135cad div.sk-text-repr-fallback {display: none;}</style><div id="sk-d0dd9a5e-419b-4159-9218-7d6661135cad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed1c4ce2-4a4b-4284-bc9c-69eca4324794" type="checkbox" ><label class="sk-toggleable__label" for="ed1c4ce2-4a4b-4284-bc9c-69eca4324794">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c65a4d3-6c5c-49b0-8e4d-f5a8b4350018" type="checkbox" ><label class="sk-toggleable__label" for="1c65a4d3-6c5c-49b0-8e4d-f5a8b4350018">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7c9c466-f5c6-4cf1-83d8-1f151693757a" type="checkbox" ><label class="sk-toggleable__label" for="f7c9c466-f5c6-4cf1-83d8-1f151693757a">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddd50e78-a91b-48bf-b522-45019b4a01c8" type="checkbox" ><label class="sk-toggleable__label" for="ddd50e78-a91b-48bf-b522-45019b4a01c8">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="683b1427-1c1d-40c7-b73c-959c990a5018" type="checkbox" ><label class="sk-toggleable__label" for="683b1427-1c1d-40c7-b73c-959c990a5018">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59275353-3bde-4670-9052-4526de0b1cd1" type="checkbox" ><label class="sk-toggleable__label" for="59275353-3bde-4670-9052-4526de0b1cd1">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9aa0463f-f343-4de6-9e2d-ddb91065c757" type="checkbox" ><label class="sk-toggleable__label" for="9aa0463f-f343-4de6-9e2d-ddb91065c757">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fcccbc9-80f9-4757-97c4-bab28c38cd13" type="checkbox" ><label class="sk-toggleable__label" for="0fcccbc9-80f9-4757-97c4-bab28c38cd13">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ebd1809f-e6ab-43b8-9d6b-bfa8e6910dea" type="checkbox" ><label class="sk-toggleable__label" for="ebd1809f-e6ab-43b8-9d6b-bfa8e6910dea">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.083 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
