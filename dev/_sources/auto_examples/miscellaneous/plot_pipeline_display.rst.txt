
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 {color: black;background-color: white;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 pre{padding: 0;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-toggleable {background-color: white;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-item {z-index: 1;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-parallel-item:only-child::after {width: 0;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7f4a60ed-158d-4358-8d28-86f4eb1db341 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7f4a60ed-158d-4358-8d28-86f4eb1db341" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4997de97-ad2a-4df6-b53c-73c7d97d01c3" type="checkbox" ><label for="4997de97-ad2a-4df6-b53c-73c7d97d01c3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb71921d-7544-4e14-88c5-e446cdb787a8" type="checkbox" ><label for="eb71921d-7544-4e14-88c5-e446cdb787a8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28141214-7144-478c-9b7b-1003f930be2d" type="checkbox" ><label for="28141214-7144-478c-9b7b-1003f930be2d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 {color: black;background-color: white;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 pre{padding: 0;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-toggleable {background-color: white;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-item {z-index: 1;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-parallel-item:only-child::after {width: 0;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5c7c5b3c-1373-49cc-9586-c5364f2d35f4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbdbb023-1197-4798-9775-1ef416e282b8" type="checkbox" ><label for="fbdbb023-1197-4798-9775-1ef416e282b8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5ccfc70-ef2b-4c22-9b09-5547436357e2" type="checkbox" ><label for="c5ccfc70-ef2b-4c22-9b09-5547436357e2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42234934-6a25-4a27-bd44-57ca5c0ce318" type="checkbox" ><label for="42234934-6a25-4a27-bd44-57ca5c0ce318" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a28ca99-de43-4bda-b358-0e56878463b2" type="checkbox" ><label for="0a28ca99-de43-4bda-b358-0e56878463b2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e4026ba6-3519-4182-a84e-c70968c77e8a {color: black;background-color: white;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a pre{padding: 0;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-toggleable {background-color: white;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-estimator:hover {background-color: #d4ebff;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-item {z-index: 1;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-parallel-item:only-child::after {width: 0;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e4026ba6-3519-4182-a84e-c70968c77e8a div.sk-text-repr-fallback {display: none;}</style><div id="sk-e4026ba6-3519-4182-a84e-c70968c77e8a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adae7a0e-8e4b-4cd6-9d85-0bf875db86ac" type="checkbox" ><label for="adae7a0e-8e4b-4cd6-9d85-0bf875db86ac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50ef4d3f-b28d-47a7-b779-32162155bb1e" type="checkbox" ><label for="50ef4d3f-b28d-47a7-b779-32162155bb1e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97410d14-1489-46cd-8d87-1c4381c04de1" type="checkbox" ><label for="97410d14-1489-46cd-8d87-1c4381c04de1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 {color: black;background-color: white;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 pre{padding: 0;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-toggleable {background-color: white;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-item {z-index: 1;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-parallel-item:only-child::after {width: 0;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ac96a716-c2d1-4cc5-9be3-06ef9f742652" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="359ccb78-bf3e-49d5-8f71-bf20855b508a" type="checkbox" ><label for="359ccb78-bf3e-49d5-8f71-bf20855b508a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0b61e5c-57dd-4b1b-91b7-49e531809cf5" type="checkbox" ><label for="c0b61e5c-57dd-4b1b-91b7-49e531809cf5" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8996c9f8-cd02-4f4c-9971-a3e654def751" type="checkbox" ><label for="8996c9f8-cd02-4f4c-9971-a3e654def751" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81c941a3-08dd-424a-8a66-7b40d386b21d" type="checkbox" ><label for="81c941a3-08dd-424a-8a66-7b40d386b21d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2dfc738f-4c22-4dba-8270-49bc2da7e2a3" type="checkbox" ><label for="2dfc738f-4c22-4dba-8270-49bc2da7e2a3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33383823-dbc4-4a5b-89f9-089e021d899c" type="checkbox" ><label for="33383823-dbc4-4a5b-89f9-089e021d899c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17249f46-b0e1-4aca-b8b0-6730957b2594" type="checkbox" ><label for="17249f46-b0e1-4aca-b8b0-6730957b2594" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c056b35-25fa-4536-aa08-747c5f263351" type="checkbox" ><label for="6c056b35-25fa-4536-aa08-747c5f263351" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="513e32ba-9ccd-43f0-bd3b-dee3e6e5b124" type="checkbox" ><label for="513e32ba-9ccd-43f0-bd3b-dee3e6e5b124" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a {color: black;background-color: white;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a pre{padding: 0;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-toggleable {background-color: white;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-estimator:hover {background-color: #d4ebff;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-item {z-index: 1;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-parallel-item:only-child::after {width: 0;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a div.sk-text-repr-fallback {display: none;}</style><div id="sk-7c6cfbee-26cd-4d07-b4ef-2b3d36444f5a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28abd0e6-808e-41bb-a8e7-4c5dd65302c1" type="checkbox" ><label for="28abd0e6-808e-41bb-a8e7-4c5dd65302c1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85a06776-79e5-4a38-a7ec-2fc1b539a258" type="checkbox" ><label for="85a06776-79e5-4a38-a7ec-2fc1b539a258" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1136d0f6-43b0-4b7e-a354-90edf3641851" type="checkbox" ><label for="1136d0f6-43b0-4b7e-a354-90edf3641851" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="046e12ba-5436-436d-8c66-f6c7598a0aaf" type="checkbox" ><label for="046e12ba-5436-436d-8c66-f6c7598a0aaf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2642fc9-24ce-4108-a304-994d6c415ff2" type="checkbox" ><label for="e2642fc9-24ce-4108-a304-994d6c415ff2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc9f11bc-d136-4446-86c8-04769ac36b15" type="checkbox" ><label for="fc9f11bc-d136-4446-86c8-04769ac36b15" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55f83a63-7dc3-46da-9548-327d4133c9f2" type="checkbox" ><label for="55f83a63-7dc3-46da-9548-327d4133c9f2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b8ab200-09a7-4401-a4a3-6da5240405b1" type="checkbox" ><label for="4b8ab200-09a7-4401-a4a3-6da5240405b1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="056c1588-50b5-4027-a1fe-93ad09a442da" type="checkbox" ><label for="056c1588-50b5-4027-a1fe-93ad09a442da" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
