
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 {color: black;background-color: white;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 pre{padding: 0;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-toggleable {background-color: white;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-item {z-index: 1;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-parallel-item:only-child::after {width: 0;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f0046f39-c634-4d6d-a5c8-9d38badf0455 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f0046f39-c634-4d6d-a5c8-9d38badf0455" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3fd6e45-dcc5-4eed-8d79-0c6013cea890" type="checkbox" ><label for="b3fd6e45-dcc5-4eed-8d79-0c6013cea890" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6937f0d-0026-463e-9fc1-67712d554219" type="checkbox" ><label for="d6937f0d-0026-463e-9fc1-67712d554219" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af870b6e-8dac-4d49-8c9b-76e3273c63bc" type="checkbox" ><label for="af870b6e-8dac-4d49-8c9b-76e3273c63bc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a {color: black;background-color: white;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a pre{padding: 0;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-toggleable {background-color: white;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-item {z-index: 1;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-parallel-item:only-child::after {width: 0;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a5fa97b-de3b-4ff7-9f40-bbb7bbec264a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cffbe4b-5e89-4b36-aa19-14bc72c1b4ca" type="checkbox" ><label for="1cffbe4b-5e89-4b36-aa19-14bc72c1b4ca" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c96c7b01-1e47-4b47-ad7c-23614c18c0ea" type="checkbox" ><label for="c96c7b01-1e47-4b47-ad7c-23614c18c0ea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7a33495-96c0-4a5e-ac6f-c37f46223a85" type="checkbox" ><label for="b7a33495-96c0-4a5e-ac6f-c37f46223a85" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1765da71-8d24-411e-af14-a9cc9f03b32c" type="checkbox" ><label for="1765da71-8d24-411e-af14-a9cc9f03b32c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 {color: black;background-color: white;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 pre{padding: 0;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-toggleable {background-color: white;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-item {z-index: 1;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-parallel-item:only-child::after {width: 0;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-778712ec-330e-45fd-bfa0-7890fb1f06a8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-778712ec-330e-45fd-bfa0-7890fb1f06a8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f1ddfab-f853-43e5-baea-cac3e522aff7" type="checkbox" ><label for="2f1ddfab-f853-43e5-baea-cac3e522aff7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fac14f4e-9082-4e72-8b7a-0391c627dd1c" type="checkbox" ><label for="fac14f4e-9082-4e72-8b7a-0391c627dd1c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe450049-9dab-4d10-b8aa-91cb543d34ea" type="checkbox" ><label for="fe450049-9dab-4d10-b8aa-91cb543d34ea" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e1ee2686-fab9-4e79-845e-6da157a58002 {color: black;background-color: white;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 pre{padding: 0;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-toggleable {background-color: white;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-item {z-index: 1;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-parallel-item:only-child::after {width: 0;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e1ee2686-fab9-4e79-845e-6da157a58002 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e1ee2686-fab9-4e79-845e-6da157a58002" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2c0d309-0623-4932-af8b-92e5870bc94b" type="checkbox" ><label for="c2c0d309-0623-4932-af8b-92e5870bc94b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05111a37-e496-42af-bbec-72f61ed477ed" type="checkbox" ><label for="05111a37-e496-42af-bbec-72f61ed477ed" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e99d0b38-1c3e-4f81-8fbe-874040abf4cc" type="checkbox" ><label for="e99d0b38-1c3e-4f81-8fbe-874040abf4cc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26ba0699-7ca6-4a4c-b0a8-0904dd1d1283" type="checkbox" ><label for="26ba0699-7ca6-4a4c-b0a8-0904dd1d1283" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bc8c850-4027-42fe-8e24-d1b6f68baf98" type="checkbox" ><label for="6bc8c850-4027-42fe-8e24-d1b6f68baf98" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="056cc97b-3b35-4157-a1ce-dabf44c08eb8" type="checkbox" ><label for="056cc97b-3b35-4157-a1ce-dabf44c08eb8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f16850f5-cdf7-494e-9ba3-03583d99a3ab" type="checkbox" ><label for="f16850f5-cdf7-494e-9ba3-03583d99a3ab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4b4ef4f-d076-497e-b0c1-e5a075a9e655" type="checkbox" ><label for="a4b4ef4f-d076-497e-b0c1-e5a075a9e655" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4363967-cf89-43eb-a251-d190ef1fe9e5" type="checkbox" ><label for="a4363967-cf89-43eb-a251-d190ef1fe9e5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2054c20f-4cef-4853-a203-c445d43c6e8d {color: black;background-color: white;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d pre{padding: 0;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-toggleable {background-color: white;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-estimator:hover {background-color: #d4ebff;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-item {z-index: 1;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-parallel-item:only-child::after {width: 0;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2054c20f-4cef-4853-a203-c445d43c6e8d div.sk-text-repr-fallback {display: none;}</style><div id="sk-2054c20f-4cef-4853-a203-c445d43c6e8d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcd2be7c-fa8c-40ec-b936-afab7d0c6739" type="checkbox" ><label for="bcd2be7c-fa8c-40ec-b936-afab7d0c6739" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="201a4440-37dd-459a-8c9b-adcbef578697" type="checkbox" ><label for="201a4440-37dd-459a-8c9b-adcbef578697" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f7e5d9b-6189-41c6-a459-ff3d225480b1" type="checkbox" ><label for="2f7e5d9b-6189-41c6-a459-ff3d225480b1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa49df69-a40f-4e10-801d-dd5d93562391" type="checkbox" ><label for="aa49df69-a40f-4e10-801d-dd5d93562391" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7040e03b-f5cc-42b6-ba6c-3c5ef09b91cb" type="checkbox" ><label for="7040e03b-f5cc-42b6-ba6c-3c5ef09b91cb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35851046-effa-4a1a-8da5-788ffae9bdb0" type="checkbox" ><label for="35851046-effa-4a1a-8da5-788ffae9bdb0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66622b98-bf89-46cf-9e95-e4a403e90ff1" type="checkbox" ><label for="66622b98-bf89-46cf-9e95-e4a403e90ff1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12d5a6b0-6f08-4daa-a778-dbea40e05740" type="checkbox" ><label for="12d5a6b0-6f08-4daa-a778-dbea40e05740" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd205bef-e758-410a-9db9-5d3b85fa58b1" type="checkbox" ><label for="cd205bef-e758-410a-9db9-5d3b85fa58b1" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
