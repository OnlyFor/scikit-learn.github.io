
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 {color: black;background-color: white;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 pre{padding: 0;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-toggleable {background-color: white;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-estimator:hover {background-color: #d4ebff;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-item {z-index: 1;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-parallel-item:only-child::after {width: 0;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-461ccbc4-c513-425e-8bc6-4109e37f0954 div.sk-text-repr-fallback {display: none;}</style><div id="sk-461ccbc4-c513-425e-8bc6-4109e37f0954" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d7ef5e1-1ea9-46a5-8c39-91e6b6d51f9c" type="checkbox" ><label for="5d7ef5e1-1ea9-46a5-8c39-91e6b6d51f9c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b82a8023-f7d1-47e3-9055-c39d746847a4" type="checkbox" ><label for="b82a8023-f7d1-47e3-9055-c39d746847a4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7405ab5d-3e55-4e1c-b7a3-d01ef040f0c5" type="checkbox" ><label for="7405ab5d-3e55-4e1c-b7a3-d01ef040f0c5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 {color: black;background-color: white;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 pre{padding: 0;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-toggleable {background-color: white;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-item {z-index: 1;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-parallel-item:only-child::after {width: 0;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3dcd3e8f-9fb2-4544-a598-30cc98a66df8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0550dce-ce7f-4422-ac8d-36b41126baa4" type="checkbox" ><label for="d0550dce-ce7f-4422-ac8d-36b41126baa4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="043fc5e0-756b-4dd6-aad2-121eb28785fd" type="checkbox" ><label for="043fc5e0-756b-4dd6-aad2-121eb28785fd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7744614d-d7b5-4330-ba93-7ab0167fce22" type="checkbox" ><label for="7744614d-d7b5-4330-ba93-7ab0167fce22" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea7d4b97-3f88-4aad-9ce7-9eec74eeb4cf" type="checkbox" ><label for="ea7d4b97-3f88-4aad-9ce7-9eec74eeb4cf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 {color: black;background-color: white;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 pre{padding: 0;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-toggleable {background-color: white;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-item {z-index: 1;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-parallel-item:only-child::after {width: 0;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c1fbfe5a-0bcc-4f05-92e0-aedca64a47e4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39efc1fd-c2d7-448b-88ff-37204bb2ebc9" type="checkbox" ><label for="39efc1fd-c2d7-448b-88ff-37204bb2ebc9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="406dc51c-3813-4bb4-ac91-a21e5a99d356" type="checkbox" ><label for="406dc51c-3813-4bb4-ac91-a21e5a99d356" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58b5624a-83a7-4fbc-86f4-10b6c9767f09" type="checkbox" ><label for="58b5624a-83a7-4fbc-86f4-10b6c9767f09" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 {color: black;background-color: white;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 pre{padding: 0;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-toggleable {background-color: white;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-item {z-index: 1;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-parallel-item:only-child::after {width: 0;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c562b9d5-f0eb-465b-8f66-afad7782d032 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c562b9d5-f0eb-465b-8f66-afad7782d032" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf66b269-adf8-4819-84fc-34d363d3f491" type="checkbox" ><label for="cf66b269-adf8-4819-84fc-34d363d3f491" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9a234cf-5dbc-4782-a8e3-248f8f6d6e17" type="checkbox" ><label for="e9a234cf-5dbc-4782-a8e3-248f8f6d6e17" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="836f9597-e3a8-49d7-a643-8586402bd191" type="checkbox" ><label for="836f9597-e3a8-49d7-a643-8586402bd191" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3105d1f9-afac-4d1a-a62b-f30eff3aadd9" type="checkbox" ><label for="3105d1f9-afac-4d1a-a62b-f30eff3aadd9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cacc1ad-963e-4ab3-b971-1af804843270" type="checkbox" ><label for="1cacc1ad-963e-4ab3-b971-1af804843270" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f979e09-c356-482f-b563-b1fc97968431" type="checkbox" ><label for="8f979e09-c356-482f-b563-b1fc97968431" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="396463ab-090b-4de3-b5a5-7b142621bfde" type="checkbox" ><label for="396463ab-090b-4de3-b5a5-7b142621bfde" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0d780c3-23ed-4b36-a6dc-0552b2a28dca" type="checkbox" ><label for="b0d780c3-23ed-4b36-a6dc-0552b2a28dca" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e60952d-d69d-4038-aa04-22ac922f88fc" type="checkbox" ><label for="8e60952d-d69d-4038-aa04-22ac922f88fc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c {color: black;background-color: white;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c pre{padding: 0;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-toggleable {background-color: white;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-estimator:hover {background-color: #d4ebff;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-item {z-index: 1;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-parallel-item:only-child::after {width: 0;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c div.sk-text-repr-fallback {display: none;}</style><div id="sk-76cd0e57-45ce-4ea7-b3c3-49edff70da2c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fec2eab4-8f07-4f7c-8430-6eac35b1545b" type="checkbox" ><label for="fec2eab4-8f07-4f7c-8430-6eac35b1545b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ea2045a-a462-4e9c-9723-a96e4e8895c4" type="checkbox" ><label for="2ea2045a-a462-4e9c-9723-a96e4e8895c4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="563e126f-442d-4064-8884-91c7b4b82955" type="checkbox" ><label for="563e126f-442d-4064-8884-91c7b4b82955" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="717ed722-1d28-418e-8214-aa890f018861" type="checkbox" ><label for="717ed722-1d28-418e-8214-aa890f018861" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c74f0e36-d204-48a6-a9db-e10653d53907" type="checkbox" ><label for="c74f0e36-d204-48a6-a9db-e10653d53907" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1ae59a6-f476-4093-b35b-2141abda7c45" type="checkbox" ><label for="e1ae59a6-f476-4093-b35b-2141abda7c45" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fe65191-a50c-425e-b888-fbb856b87b83" type="checkbox" ><label for="1fe65191-a50c-425e-b888-fbb856b87b83" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c1bd859-8d1e-4229-9b57-1ff9c4bf41af" type="checkbox" ><label for="1c1bd859-8d1e-4229-9b57-1ff9c4bf41af" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf48cf74-4b5f-4d8e-b195-b1814ffc94cc" type="checkbox" ><label for="bf48cf74-4b5f-4d8e-b195-b1814ffc94cc" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
