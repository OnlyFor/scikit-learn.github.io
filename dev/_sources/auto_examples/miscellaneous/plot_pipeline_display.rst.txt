
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 {color: black;background-color: white;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 pre{padding: 0;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-toggleable {background-color: white;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-item {z-index: 1;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-parallel-item:only-child::after {width: 0;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bf6882cd-f058-4c44-8127-c34bad35ad88 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf6882cd-f058-4c44-8127-c34bad35ad88" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f77a407a-4b0a-4e20-8b98-44659cf61762" type="checkbox" ><label for="f77a407a-4b0a-4e20-8b98-44659cf61762" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aeb36f11-7b95-4994-8ae0-b1b66641dd40" type="checkbox" ><label for="aeb36f11-7b95-4994-8ae0-b1b66641dd40" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83087d4b-0603-48a7-a4d9-8c448ef35dc7" type="checkbox" ><label for="83087d4b-0603-48a7-a4d9-8c448ef35dc7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 {color: black;background-color: white;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 pre{padding: 0;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-toggleable {background-color: white;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-item {z-index: 1;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-parallel-item:only-child::after {width: 0;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fdb874fe-cdd3-432d-90fc-64a1a78bc826" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e40769ca-f2ee-47db-8375-2047a560ac50" type="checkbox" ><label for="e40769ca-f2ee-47db-8375-2047a560ac50" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab016a27-a334-483b-81c2-e914a36e410f" type="checkbox" ><label for="ab016a27-a334-483b-81c2-e914a36e410f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07ddf14a-b1ff-4ee4-bf74-fc1233b8d9b7" type="checkbox" ><label for="07ddf14a-b1ff-4ee4-bf74-fc1233b8d9b7" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c869c773-e33f-4232-a540-5cd440cb6772" type="checkbox" ><label for="c869c773-e33f-4232-a540-5cd440cb6772" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-02818931-cb85-4b3c-9435-c46506b904fe {color: black;background-color: white;}#sk-02818931-cb85-4b3c-9435-c46506b904fe pre{padding: 0;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-toggleable {background-color: white;}#sk-02818931-cb85-4b3c-9435-c46506b904fe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-02818931-cb85-4b3c-9435-c46506b904fe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-02818931-cb85-4b3c-9435-c46506b904fe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-02818931-cb85-4b3c-9435-c46506b904fe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-02818931-cb85-4b3c-9435-c46506b904fe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02818931-cb85-4b3c-9435-c46506b904fe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-estimator:hover {background-color: #d4ebff;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-item {z-index: 1;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-parallel-item:only-child::after {width: 0;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-02818931-cb85-4b3c-9435-c46506b904fe div.sk-text-repr-fallback {display: none;}</style><div id="sk-02818931-cb85-4b3c-9435-c46506b904fe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eaa26fe8-d1cf-4cdd-b8e8-163e2eba8d0b" type="checkbox" ><label for="eaa26fe8-d1cf-4cdd-b8e8-163e2eba8d0b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="909dabeb-e27f-4f45-8d38-7f8ad783aea1" type="checkbox" ><label for="909dabeb-e27f-4f45-8d38-7f8ad783aea1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c87fb556-a8ce-4f17-b9d7-bf26e9d057f4" type="checkbox" ><label for="c87fb556-a8ce-4f17-b9d7-bf26e9d057f4" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 {color: black;background-color: white;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 pre{padding: 0;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-toggleable {background-color: white;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-estimator:hover {background-color: #d4ebff;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-item {z-index: 1;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-parallel-item:only-child::after {width: 0;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-33e0e4e5-3cd3-4244-85db-d28fab087118 div.sk-text-repr-fallback {display: none;}</style><div id="sk-33e0e4e5-3cd3-4244-85db-d28fab087118" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f3d5273-bf66-437d-acec-a5d4d7257041" type="checkbox" ><label for="6f3d5273-bf66-437d-acec-a5d4d7257041" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7dbf0457-2bdf-4b88-8645-7a226bad5c5e" type="checkbox" ><label for="7dbf0457-2bdf-4b88-8645-7a226bad5c5e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d3c6392-0782-499b-bbb4-de5c2ecd4891" type="checkbox" ><label for="2d3c6392-0782-499b-bbb4-de5c2ecd4891" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef099024-91d0-461c-857e-c24429c3cc14" type="checkbox" ><label for="ef099024-91d0-461c-857e-c24429c3cc14" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c057e1fc-7958-4915-876b-aaf2a00e036b" type="checkbox" ><label for="c057e1fc-7958-4915-876b-aaf2a00e036b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b98725e-d062-40b2-95a7-db734996fada" type="checkbox" ><label for="9b98725e-d062-40b2-95a7-db734996fada" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d664ecbc-b89c-4857-bd43-bcbe676a6be1" type="checkbox" ><label for="d664ecbc-b89c-4857-bd43-bcbe676a6be1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="093e7ee3-0907-4753-8425-2c0abfae1bf7" type="checkbox" ><label for="093e7ee3-0907-4753-8425-2c0abfae1bf7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0459d98-95f6-4e42-98c9-a4cdddd395ef" type="checkbox" ><label for="e0459d98-95f6-4e42-98c9-a4cdddd395ef" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-516f3b63-bdda-4a8f-87df-d95206bca693 {color: black;background-color: white;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 pre{padding: 0;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-toggleable {background-color: white;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-estimator:hover {background-color: #d4ebff;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-item {z-index: 1;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-parallel-item:only-child::after {width: 0;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-516f3b63-bdda-4a8f-87df-d95206bca693 div.sk-text-repr-fallback {display: none;}</style><div id="sk-516f3b63-bdda-4a8f-87df-d95206bca693" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdf869ae-5c3e-45c2-96fe-54cd82f6c25a" type="checkbox" ><label for="cdf869ae-5c3e-45c2-96fe-54cd82f6c25a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83b28e3c-1e69-4810-9c65-6c17ae3267e3" type="checkbox" ><label for="83b28e3c-1e69-4810-9c65-6c17ae3267e3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59377ea6-8719-4740-9280-f0c232bd2723" type="checkbox" ><label for="59377ea6-8719-4740-9280-f0c232bd2723" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a73b6ef-03c4-4c6b-be0a-ae4b1a2cc0e1" type="checkbox" ><label for="7a73b6ef-03c4-4c6b-be0a-ae4b1a2cc0e1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10c363b1-ac07-413d-81b3-24e362bc8c48" type="checkbox" ><label for="10c363b1-ac07-413d-81b3-24e362bc8c48" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9176705-5f93-41a9-bd96-e5fd2a83be9c" type="checkbox" ><label for="c9176705-5f93-41a9-bd96-e5fd2a83be9c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77a9fca9-1a93-4df8-b76c-59108ef0fe4b" type="checkbox" ><label for="77a9fca9-1a93-4df8-b76c-59108ef0fe4b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42fe89ef-2936-4a48-b3e2-e06141880030" type="checkbox" ><label for="42fe89ef-2936-4a48-b3e2-e06141880030" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d63a3057-173e-4940-b49b-935bcb8555c3" type="checkbox" ><label for="d63a3057-173e-4940-b49b-935bcb8555c3" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.077 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
