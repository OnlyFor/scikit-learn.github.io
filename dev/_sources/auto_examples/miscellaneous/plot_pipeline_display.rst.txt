
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 {color: black;background-color: white;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 pre{padding: 0;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-toggleable {background-color: white;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-item {z-index: 1;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-parallel-item:only-child::after {width: 0;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ca8f4001-787a-4e83-80ff-0c2892ed63f2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80b7c6bf-e39f-4a4d-9e69-66bc8c0e122d" type="checkbox" ><label for="80b7c6bf-e39f-4a4d-9e69-66bc8c0e122d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e7a4bcc-252d-4512-bcd1-449967ec205c" type="checkbox" ><label for="3e7a4bcc-252d-4512-bcd1-449967ec205c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47330325-ccb1-4443-b1da-2a811b18a6f4" type="checkbox" ><label for="47330325-ccb1-4443-b1da-2a811b18a6f4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 {color: black;background-color: white;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 pre{padding: 0;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-toggleable {background-color: white;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-item {z-index: 1;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-parallel-item:only-child::after {width: 0;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e1a2ba2a-27d5-45ee-b133-e7e081f389d1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4ae8767-a6df-4699-ab6a-afa471c73496" type="checkbox" ><label for="b4ae8767-a6df-4699-ab6a-afa471c73496" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4664339-fe5f-46ef-99d3-6387efe9a169" type="checkbox" ><label for="a4664339-fe5f-46ef-99d3-6387efe9a169" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d982c51-b72a-4aa8-b3a1-f2450cb1ecdc" type="checkbox" ><label for="9d982c51-b72a-4aa8-b3a1-f2450cb1ecdc" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="259eb2f4-2811-4c85-ae4b-285e71d62f46" type="checkbox" ><label for="259eb2f4-2811-4c85-ae4b-285e71d62f46" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2d87df66-5b8f-4727-abbe-5802a8198126 {color: black;background-color: white;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 pre{padding: 0;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-toggleable {background-color: white;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-item {z-index: 1;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-parallel-item:only-child::after {width: 0;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2d87df66-5b8f-4727-abbe-5802a8198126 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2d87df66-5b8f-4727-abbe-5802a8198126" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b16d41e-33d7-43f0-a5f8-65dc918c824a" type="checkbox" ><label for="0b16d41e-33d7-43f0-a5f8-65dc918c824a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0b4a046-3cea-408e-822e-23c498d617a1" type="checkbox" ><label for="f0b4a046-3cea-408e-822e-23c498d617a1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d68834b-2e49-4c11-a136-d9537f21bef9" type="checkbox" ><label for="4d68834b-2e49-4c11-a136-d9537f21bef9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 {color: black;background-color: white;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 pre{padding: 0;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-toggleable {background-color: white;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-item {z-index: 1;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-parallel-item:only-child::after {width: 0;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3afa3ff1-ae6a-4b09-b96c-2b099c476700" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f58dc2a7-4a8f-4fb0-ac6a-5cf7881cac06" type="checkbox" ><label for="f58dc2a7-4a8f-4fb0-ac6a-5cf7881cac06" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dff8a035-90df-4292-9d33-7340cef94c12" type="checkbox" ><label for="dff8a035-90df-4292-9d33-7340cef94c12" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10ea1ba9-4db3-439f-8965-2c8009cc357c" type="checkbox" ><label for="10ea1ba9-4db3-439f-8965-2c8009cc357c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90a4c1b6-25bc-49ad-b102-8da584311bc1" type="checkbox" ><label for="90a4c1b6-25bc-49ad-b102-8da584311bc1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce3e9652-344e-4c65-976c-44d64e26512d" type="checkbox" ><label for="ce3e9652-344e-4c65-976c-44d64e26512d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05ebdac6-bf4c-404c-871f-151cb3afb48d" type="checkbox" ><label for="05ebdac6-bf4c-404c-871f-151cb3afb48d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5049970-0eae-43a1-b190-a5b31bd924dd" type="checkbox" ><label for="a5049970-0eae-43a1-b190-a5b31bd924dd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6edd54e-39bd-4ec6-ae03-a3535e38bf69" type="checkbox" ><label for="f6edd54e-39bd-4ec6-ae03-a3535e38bf69" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9fdd84cf-428c-413f-9c15-687e5ca48453" type="checkbox" ><label for="9fdd84cf-428c-413f-9c15-687e5ca48453" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 {color: black;background-color: white;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 pre{padding: 0;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-toggleable {background-color: white;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-item {z-index: 1;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-parallel-item:only-child::after {width: 0;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a90b3a2d-5a8b-498d-8687-adac088f30b3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a90b3a2d-5a8b-498d-8687-adac088f30b3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b03d92f-8490-48e0-ac0a-2635a934af64" type="checkbox" ><label for="4b03d92f-8490-48e0-ac0a-2635a934af64" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0fd5e09-c57e-49fa-abe6-b43f22c78a4f" type="checkbox" ><label for="a0fd5e09-c57e-49fa-abe6-b43f22c78a4f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6f72323-c1d2-4290-8f22-2a0821f76467" type="checkbox" ><label for="e6f72323-c1d2-4290-8f22-2a0821f76467" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="823c57a8-2cc6-4735-bfae-1776b7dc62f6" type="checkbox" ><label for="823c57a8-2cc6-4735-bfae-1776b7dc62f6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c48ba2f-bef6-4779-9e29-88b8c7666034" type="checkbox" ><label for="9c48ba2f-bef6-4779-9e29-88b8c7666034" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b728779-4bcd-45a5-86db-3ac43974b643" type="checkbox" ><label for="7b728779-4bcd-45a5-86db-3ac43974b643" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d19fb8af-e604-4921-b2d9-dc59a40393dd" type="checkbox" ><label for="d19fb8af-e604-4921-b2d9-dc59a40393dd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0a578e4-31ef-45fc-b1a9-7ea8508bde52" type="checkbox" ><label for="a0a578e4-31ef-45fc-b1a9-7ea8508bde52" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf2c100a-9074-481d-87f8-fa4666546a25" type="checkbox" ><label for="bf2c100a-9074-481d-87f8-fa4666546a25" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.101 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
