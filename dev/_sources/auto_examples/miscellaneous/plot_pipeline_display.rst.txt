
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e {color: black;background-color: white;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e pre{padding: 0;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-toggleable {background-color: white;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-estimator:hover {background-color: #d4ebff;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-item {z-index: 1;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-parallel-item:only-child::after {width: 0;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-76d92d76-3a13-4d6b-837e-c53c22242c3e div.sk-text-repr-fallback {display: none;}</style><div id="sk-76d92d76-3a13-4d6b-837e-c53c22242c3e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b5193cc-3076-400e-a335-e828e19317a5" type="checkbox" ><label for="6b5193cc-3076-400e-a335-e828e19317a5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7698efa2-ebfd-437c-9f36-4ca93d9cc4f6" type="checkbox" ><label for="7698efa2-ebfd-437c-9f36-4ca93d9cc4f6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f2738a1-1f25-487c-a08f-c9e0d9e09d45" type="checkbox" ><label for="0f2738a1-1f25-487c-a08f-c9e0d9e09d45" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 {color: black;background-color: white;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 pre{padding: 0;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-toggleable {background-color: white;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-estimator:hover {background-color: #d4ebff;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-item {z-index: 1;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-parallel-item:only-child::after {width: 0;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-53947f1f-38c8-41ff-b2ab-28b717ab9910 div.sk-text-repr-fallback {display: none;}</style><div id="sk-53947f1f-38c8-41ff-b2ab-28b717ab9910" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6489b046-91bd-44db-add6-911870b810b9" type="checkbox" ><label for="6489b046-91bd-44db-add6-911870b810b9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4217714-eb15-43ca-b41e-2bfcc132b617" type="checkbox" ><label for="d4217714-eb15-43ca-b41e-2bfcc132b617" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dca0beb7-d0d0-444f-a697-0c7091b9e6f4" type="checkbox" ><label for="dca0beb7-d0d0-444f-a697-0c7091b9e6f4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ad221ca-f321-4de7-97be-04e1a905dd0a" type="checkbox" ><label for="1ad221ca-f321-4de7-97be-04e1a905dd0a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b {color: black;background-color: white;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b pre{padding: 0;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-toggleable {background-color: white;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-estimator:hover {background-color: #d4ebff;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-item {z-index: 1;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-parallel-item:only-child::after {width: 0;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7629b41e-b3d2-41a2-a230-3886f3ee960b div.sk-text-repr-fallback {display: none;}</style><div id="sk-7629b41e-b3d2-41a2-a230-3886f3ee960b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7786e2ad-a42d-4796-a525-ad0fcce55870" type="checkbox" ><label for="7786e2ad-a42d-4796-a525-ad0fcce55870" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cd3b2a8-cafd-4ad2-9035-e6c757b6a9c2" type="checkbox" ><label for="4cd3b2a8-cafd-4ad2-9035-e6c757b6a9c2" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2adb422-cbc5-46df-bf42-b2facb5b2973" type="checkbox" ><label for="a2adb422-cbc5-46df-bf42-b2facb5b2973" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3885cf77-3011-470a-8d97-002ce427b7d0 {color: black;background-color: white;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 pre{padding: 0;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-toggleable {background-color: white;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-item {z-index: 1;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-parallel-item:only-child::after {width: 0;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3885cf77-3011-470a-8d97-002ce427b7d0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3885cf77-3011-470a-8d97-002ce427b7d0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abefffde-3a64-49c3-92a6-e0e29f6b403c" type="checkbox" ><label for="abefffde-3a64-49c3-92a6-e0e29f6b403c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0abc67a-9053-467b-9647-9133cd8c1a0e" type="checkbox" ><label for="c0abc67a-9053-467b-9647-9133cd8c1a0e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="088369e8-80ff-4a67-af18-2e0936b0c7f6" type="checkbox" ><label for="088369e8-80ff-4a67-af18-2e0936b0c7f6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea2e12e7-a145-4e1a-9173-1942a42f164a" type="checkbox" ><label for="ea2e12e7-a145-4e1a-9173-1942a42f164a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbbca563-1a7a-472e-83f9-c71d15f629db" type="checkbox" ><label for="dbbca563-1a7a-472e-83f9-c71d15f629db" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cf84edc-c5c1-4b24-9f35-c6d04b5f8eff" type="checkbox" ><label for="7cf84edc-c5c1-4b24-9f35-c6d04b5f8eff" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9abd3208-b5d4-4788-9cdc-f49884d673e3" type="checkbox" ><label for="9abd3208-b5d4-4788-9cdc-f49884d673e3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="688ceb1f-0333-443e-b512-7c9c053afa7c" type="checkbox" ><label for="688ceb1f-0333-443e-b512-7c9c053afa7c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18f3f226-e278-48b8-b46f-fce5e11a013d" type="checkbox" ><label for="18f3f226-e278-48b8-b46f-fce5e11a013d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f {color: black;background-color: white;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f pre{padding: 0;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-toggleable {background-color: white;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-estimator:hover {background-color: #d4ebff;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-item {z-index: 1;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-parallel-item:only-child::after {width: 0;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f div.sk-text-repr-fallback {display: none;}</style><div id="sk-f18037b6-3ad0-4268-9a5e-6bd748e2c08f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de304a38-50ef-465b-b55c-ff27e5e0c747" type="checkbox" ><label for="de304a38-50ef-465b-b55c-ff27e5e0c747" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec7d1ba3-4271-411b-8bd3-60480a8d7961" type="checkbox" ><label for="ec7d1ba3-4271-411b-8bd3-60480a8d7961" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd52478b-cfc8-42c0-88ae-cbe2938bcd24" type="checkbox" ><label for="bd52478b-cfc8-42c0-88ae-cbe2938bcd24" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2af9dcf-e88b-490a-9bd9-8a0364c88351" type="checkbox" ><label for="c2af9dcf-e88b-490a-9bd9-8a0364c88351" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb36fd7a-9e7f-4361-b714-e4d524cf6f55" type="checkbox" ><label for="cb36fd7a-9e7f-4361-b714-e4d524cf6f55" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5658aaf-9cee-4e9a-b03b-ddd3dd92b537" type="checkbox" ><label for="b5658aaf-9cee-4e9a-b03b-ddd3dd92b537" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5038d601-0e3c-4e58-b1b3-1d13ec5386cd" type="checkbox" ><label for="5038d601-0e3c-4e58-b1b3-1d13ec5386cd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2426ff35-5f81-44d9-bab5-bba3e239cb97" type="checkbox" ><label for="2426ff35-5f81-44d9-bab5-bba3e239cb97" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39f7213f-edf8-4322-b8fb-cc20d1027b76" type="checkbox" ><label for="39f7213f-edf8-4322-b8fb-cc20d1027b76" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c739f94-5d32-4ff8-828a-2ec289b6e6ba" type="checkbox" ><label for="1c739f94-5d32-4ff8-828a-2ec289b6e6ba" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
