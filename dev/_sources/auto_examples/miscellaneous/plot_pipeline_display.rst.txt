
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5c88c2eb-4003-4c18-8256-afe07703abab {color: black;background-color: white;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab pre{padding: 0;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-toggleable {background-color: white;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-estimator:hover {background-color: #d4ebff;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-item {z-index: 1;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-parallel-item:only-child::after {width: 0;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5c88c2eb-4003-4c18-8256-afe07703abab div.sk-text-repr-fallback {display: none;}</style><div id="sk-5c88c2eb-4003-4c18-8256-afe07703abab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1cdefb7-e3f3-48a2-88f8-6c46eab86f83" type="checkbox" ><label for="c1cdefb7-e3f3-48a2-88f8-6c46eab86f83" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d60ee24-7ea6-44cc-9d46-4f6aea324a2b" type="checkbox" ><label for="3d60ee24-7ea6-44cc-9d46-4f6aea324a2b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32ee813c-8d0a-4877-ade5-e086f90dac9d" type="checkbox" ><label for="32ee813c-8d0a-4877-ade5-e086f90dac9d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc {color: black;background-color: white;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc pre{padding: 0;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-toggleable {background-color: white;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-estimator:hover {background-color: #d4ebff;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-item {z-index: 1;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-parallel-item:only-child::after {width: 0;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f403055e-dde3-497c-ba5a-b302bb1a69bc div.sk-text-repr-fallback {display: none;}</style><div id="sk-f403055e-dde3-497c-ba5a-b302bb1a69bc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbc13be8-f185-4b36-9f01-8c4d84444cac" type="checkbox" ><label for="fbc13be8-f185-4b36-9f01-8c4d84444cac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f117d3e-0591-4923-aab6-410dab69ab7f" type="checkbox" ><label for="1f117d3e-0591-4923-aab6-410dab69ab7f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7f53165-bb2f-421a-8728-3ccce2b861fe" type="checkbox" ><label for="e7f53165-bb2f-421a-8728-3ccce2b861fe" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c866466-f353-43e9-9e49-fd6db3dcd744" type="checkbox" ><label for="3c866466-f353-43e9-9e49-fd6db3dcd744" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea {color: black;background-color: white;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea pre{padding: 0;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-toggleable {background-color: white;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-estimator:hover {background-color: #d4ebff;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-item {z-index: 1;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-parallel-item:only-child::after {width: 0;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea div.sk-text-repr-fallback {display: none;}</style><div id="sk-8d89af5d-3adf-4db1-9763-d0b8fe198eea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40f1b867-5d4f-4951-a1f7-37ddbdfcb35c" type="checkbox" ><label for="40f1b867-5d4f-4951-a1f7-37ddbdfcb35c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acfd8483-e20b-4bea-902f-2fc0b9fce911" type="checkbox" ><label for="acfd8483-e20b-4bea-902f-2fc0b9fce911" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0774f77-5cb3-432c-80b9-cbb2204879d2" type="checkbox" ><label for="d0774f77-5cb3-432c-80b9-cbb2204879d2" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 {color: black;background-color: white;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 pre{padding: 0;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-toggleable {background-color: white;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-item {z-index: 1;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-parallel-item:only-child::after {width: 0;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9c0f4b4c-5ccf-46b2-bc75-9e10211288f8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8694e461-3167-4bdd-a890-3c081fbab4e3" type="checkbox" ><label for="8694e461-3167-4bdd-a890-3c081fbab4e3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f416b68-f49a-41d6-85f8-adce3a5428c4" type="checkbox" ><label for="3f416b68-f49a-41d6-85f8-adce3a5428c4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="346f5d1d-a39b-43f2-8f82-2c19ac1b9066" type="checkbox" ><label for="346f5d1d-a39b-43f2-8f82-2c19ac1b9066" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="807d4aa0-44ed-4973-a0c3-ef3c3f952d46" type="checkbox" ><label for="807d4aa0-44ed-4973-a0c3-ef3c3f952d46" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25ecc2da-8e4f-45c0-9ee6-76ed1ef87263" type="checkbox" ><label for="25ecc2da-8e4f-45c0-9ee6-76ed1ef87263" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="162d009c-f734-4e81-9522-ca609388e6cb" type="checkbox" ><label for="162d009c-f734-4e81-9522-ca609388e6cb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b095943-6e29-4608-9996-2ae383af7701" type="checkbox" ><label for="3b095943-6e29-4608-9996-2ae383af7701" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45c36a2b-4f46-43e5-a2bb-346096893251" type="checkbox" ><label for="45c36a2b-4f46-43e5-a2bb-346096893251" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b59979be-1777-47fa-b424-8481f0a47221" type="checkbox" ><label for="b59979be-1777-47fa-b424-8481f0a47221" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea {color: black;background-color: white;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea pre{padding: 0;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-toggleable {background-color: white;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-item {z-index: 1;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-parallel-item:only-child::after {width: 0;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f61f22d2-bdde-4d95-8c27-644f60b300ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-f61f22d2-bdde-4d95-8c27-644f60b300ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b2c7f1f-9244-4cae-b27b-6ed396e15f22" type="checkbox" ><label for="3b2c7f1f-9244-4cae-b27b-6ed396e15f22" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b63f4ae3-0c09-4b2f-a539-1897465d319e" type="checkbox" ><label for="b63f4ae3-0c09-4b2f-a539-1897465d319e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38455d92-545b-4941-a099-dd3676823abd" type="checkbox" ><label for="38455d92-545b-4941-a099-dd3676823abd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1a3f6c8-c5b1-43e7-ac3c-4e9bb6faff8c" type="checkbox" ><label for="e1a3f6c8-c5b1-43e7-ac3c-4e9bb6faff8c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5794fc60-c3fb-4e43-8ce0-a4600b772ef9" type="checkbox" ><label for="5794fc60-c3fb-4e43-8ce0-a4600b772ef9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e877342e-54bf-4d39-9bc8-aaed9004c7e6" type="checkbox" ><label for="e877342e-54bf-4d39-9bc8-aaed9004c7e6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d5fed79-dec9-4041-9965-e7f061e93d1e" type="checkbox" ><label for="7d5fed79-dec9-4041-9965-e7f061e93d1e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d37425-bf81-4965-b501-10d53be5e086" type="checkbox" ><label for="a7d37425-bf81-4965-b501-10d53be5e086" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5818aaa6-1efb-4934-8ac6-12b12a1dc470" type="checkbox" ><label for="5818aaa6-1efb-4934-8ac6-12b12a1dc470" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
