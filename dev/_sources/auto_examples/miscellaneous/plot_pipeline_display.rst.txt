
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d {color: black;background-color: white;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d pre{padding: 0;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-toggleable {background-color: white;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-estimator:hover {background-color: #d4ebff;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-item {z-index: 1;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-parallel-item:only-child::after {width: 0;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d div.sk-text-repr-fallback {display: none;}</style><div id="sk-88f6b2ce-10c5-4841-a71a-2d94806c1e7d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="284b8899-05dd-4299-865c-976e33574d62" type="checkbox" ><label for="284b8899-05dd-4299-865c-976e33574d62" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f2c09f4-2afd-47fd-a0bd-8df3a30ac5dd" type="checkbox" ><label for="5f2c09f4-2afd-47fd-a0bd-8df3a30ac5dd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70b592d1-284f-49ea-abcb-42e7a8f5abab" type="checkbox" ><label for="70b592d1-284f-49ea-abcb-42e7a8f5abab" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 {color: black;background-color: white;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 pre{padding: 0;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-toggleable {background-color: white;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-item {z-index: 1;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-parallel-item:only-child::after {width: 0;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9feaa7b0-22e4-427c-b0f8-90e2609db905 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9feaa7b0-22e4-427c-b0f8-90e2609db905" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92865622-4f34-481d-8169-921c1d8f6e00" type="checkbox" ><label for="92865622-4f34-481d-8169-921c1d8f6e00" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="365479e4-8d9e-4b02-bdf7-9fe4e64ef089" type="checkbox" ><label for="365479e4-8d9e-4b02-bdf7-9fe4e64ef089" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70744483-94ad-4100-96e2-d0f193362166" type="checkbox" ><label for="70744483-94ad-4100-96e2-d0f193362166" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6386a5b2-80f8-4f8a-bf1d-8c76c1b84ab8" type="checkbox" ><label for="6386a5b2-80f8-4f8a-bf1d-8c76c1b84ab8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-22659bad-2b73-4e66-b36e-469606e30c98 {color: black;background-color: white;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 pre{padding: 0;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-toggleable {background-color: white;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-estimator:hover {background-color: #d4ebff;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-item {z-index: 1;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-parallel-item:only-child::after {width: 0;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-22659bad-2b73-4e66-b36e-469606e30c98 div.sk-text-repr-fallback {display: none;}</style><div id="sk-22659bad-2b73-4e66-b36e-469606e30c98" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8877926-d4fa-4e4e-a8f5-1605844f14e1" type="checkbox" ><label for="c8877926-d4fa-4e4e-a8f5-1605844f14e1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2036c97a-86ba-4624-b8c3-520317afaaff" type="checkbox" ><label for="2036c97a-86ba-4624-b8c3-520317afaaff" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ced2a872-2bb4-43f4-9386-a555990d132e" type="checkbox" ><label for="ced2a872-2bb4-43f4-9386-a555990d132e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 {color: black;background-color: white;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 pre{padding: 0;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-toggleable {background-color: white;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-estimator:hover {background-color: #d4ebff;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-item {z-index: 1;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-parallel-item:only-child::after {width: 0;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815 div.sk-text-repr-fallback {display: none;}</style><div id="sk-310ee6b8-4c51-4bc8-bb5d-a9303491d815" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01e9d85e-694a-4fad-92cb-50721ecf0f1e" type="checkbox" ><label for="01e9d85e-694a-4fad-92cb-50721ecf0f1e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2c0c66a-9ef1-4fa4-ab51-6e5901d34b75" type="checkbox" ><label for="f2c0c66a-9ef1-4fa4-ab51-6e5901d34b75" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ba061cb-4a58-4a23-b01c-4defb69453c6" type="checkbox" ><label for="8ba061cb-4a58-4a23-b01c-4defb69453c6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99cba467-5036-4911-83a7-efaaf269a728" type="checkbox" ><label for="99cba467-5036-4911-83a7-efaaf269a728" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93a11838-6344-4940-918b-9e5e1c98e566" type="checkbox" ><label for="93a11838-6344-4940-918b-9e5e1c98e566" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6282fbe0-e434-402a-98c8-f95fdcb0f765" type="checkbox" ><label for="6282fbe0-e434-402a-98c8-f95fdcb0f765" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df61d9c5-57de-425c-8ed6-d5b4c7d8c83c" type="checkbox" ><label for="df61d9c5-57de-425c-8ed6-d5b4c7d8c83c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45e7e925-6691-40d6-a1f1-a982819bd783" type="checkbox" ><label for="45e7e925-6691-40d6-a1f1-a982819bd783" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f20c2c57-9df3-4396-90b4-c7be0d274091" type="checkbox" ><label for="f20c2c57-9df3-4396-90b4-c7be0d274091" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc {color: black;background-color: white;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc pre{padding: 0;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-toggleable {background-color: white;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-estimator:hover {background-color: #d4ebff;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-item {z-index: 1;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-parallel-item:only-child::after {width: 0;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a7556902-40d9-48e4-acc3-e46fe70db1cc div.sk-text-repr-fallback {display: none;}</style><div id="sk-a7556902-40d9-48e4-acc3-e46fe70db1cc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a14803d-a9a8-459f-8bae-23e66956b022" type="checkbox" ><label for="5a14803d-a9a8-459f-8bae-23e66956b022" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a05fa4fe-1af3-47ac-b30b-9f8ce204ff1c" type="checkbox" ><label for="a05fa4fe-1af3-47ac-b30b-9f8ce204ff1c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5a6dd48-72b4-44d4-bd6d-3951add6ce42" type="checkbox" ><label for="f5a6dd48-72b4-44d4-bd6d-3951add6ce42" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f21c9522-d4e8-42b8-aee5-31f13a7ea68b" type="checkbox" ><label for="f21c9522-d4e8-42b8-aee5-31f13a7ea68b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55bb539c-7640-43ee-82f9-e78cbeea8a81" type="checkbox" ><label for="55bb539c-7640-43ee-82f9-e78cbeea8a81" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c5d40d8-2038-4458-ac31-ced08a227742" type="checkbox" ><label for="3c5d40d8-2038-4458-ac31-ced08a227742" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53ef8cba-91a0-40cd-b791-762a22cc9b38" type="checkbox" ><label for="53ef8cba-91a0-40cd-b791-762a22cc9b38" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="368cdd4e-525e-4d08-a5e1-57d011142e86" type="checkbox" ><label for="368cdd4e-525e-4d08-a5e1-57d011142e86" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecbec0c3-907b-465c-aaf4-2d6d17698c2e" type="checkbox" ><label for="ecbec0c3-907b-465c-aaf4-2d6d17698c2e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
