
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d55335a9-647d-46db-aeab-ca1c70b05826 {color: black;background-color: white;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 pre{padding: 0;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-toggleable {background-color: white;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-item {z-index: 1;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-parallel-item:only-child::after {width: 0;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d55335a9-647d-46db-aeab-ca1c70b05826 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d55335a9-647d-46db-aeab-ca1c70b05826" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c029ef4-1539-4074-be5b-71a0ee524e6e" type="checkbox" ><label for="0c029ef4-1539-4074-be5b-71a0ee524e6e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="825c2b94-df8e-4712-89cd-b2a4e1588c31" type="checkbox" ><label for="825c2b94-df8e-4712-89cd-b2a4e1588c31" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6214841c-c961-4bd0-93ce-9756e98c2adf" type="checkbox" ><label for="6214841c-c961-4bd0-93ce-9756e98c2adf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 {color: black;background-color: white;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 pre{padding: 0;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-toggleable {background-color: white;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-item {z-index: 1;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-parallel-item:only-child::after {width: 0;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-328db8fd-4af9-4320-8a28-a6c7626d90d2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-328db8fd-4af9-4320-8a28-a6c7626d90d2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4cf1f82-e4f8-4afc-9809-d15155715d01" type="checkbox" ><label for="e4cf1f82-e4f8-4afc-9809-d15155715d01" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc10e437-9422-4bc9-a123-307657345448" type="checkbox" ><label for="bc10e437-9422-4bc9-a123-307657345448" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92d65f7d-59a4-4df5-805a-dace787e4fe8" type="checkbox" ><label for="92d65f7d-59a4-4df5-805a-dace787e4fe8" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ba90d18-1a29-4597-b0ee-c71150c74483" type="checkbox" ><label for="0ba90d18-1a29-4597-b0ee-c71150c74483" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-412d1147-377e-494b-a8fc-dbda2c77187d {color: black;background-color: white;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d pre{padding: 0;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-toggleable {background-color: white;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-estimator:hover {background-color: #d4ebff;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-item {z-index: 1;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-parallel-item:only-child::after {width: 0;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-412d1147-377e-494b-a8fc-dbda2c77187d div.sk-text-repr-fallback {display: none;}</style><div id="sk-412d1147-377e-494b-a8fc-dbda2c77187d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be7daf4f-12b8-424a-88ad-be115431ee19" type="checkbox" ><label for="be7daf4f-12b8-424a-88ad-be115431ee19" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10ba2d5b-6e27-4fdf-8c90-58f898c9273e" type="checkbox" ><label for="10ba2d5b-6e27-4fdf-8c90-58f898c9273e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65ff0e66-24e8-4755-a39b-36f4476cee5f" type="checkbox" ><label for="65ff0e66-24e8-4755-a39b-36f4476cee5f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 {color: black;background-color: white;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 pre{padding: 0;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-toggleable {background-color: white;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-item {z-index: 1;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-parallel-item:only-child::after {width: 0;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c2d5f5f8-88c6-4dd7-83f7-74d34cbc70a0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1fbf1f7-c0d2-4783-af2c-9fa426d649ba" type="checkbox" ><label for="b1fbf1f7-c0d2-4783-af2c-9fa426d649ba" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="487fe565-c5e5-4eae-88a9-e49a5d6c6b40" type="checkbox" ><label for="487fe565-c5e5-4eae-88a9-e49a5d6c6b40" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9d8ec31-8eb1-4bea-b25c-ca05557e6082" type="checkbox" ><label for="d9d8ec31-8eb1-4bea-b25c-ca05557e6082" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45bd3198-aea7-4d86-9828-a091ae6830fa" type="checkbox" ><label for="45bd3198-aea7-4d86-9828-a091ae6830fa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="960a701d-3c4a-48b7-b210-2521ba85c020" type="checkbox" ><label for="960a701d-3c4a-48b7-b210-2521ba85c020" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0609847f-cfd0-4ba9-913c-855c9746f2ad" type="checkbox" ><label for="0609847f-cfd0-4ba9-913c-855c9746f2ad" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3af3f89a-f6ef-4702-bb18-e9ebd58e6447" type="checkbox" ><label for="3af3f89a-f6ef-4702-bb18-e9ebd58e6447" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92307862-de40-4d84-a030-21ddc4b2d960" type="checkbox" ><label for="92307862-de40-4d84-a030-21ddc4b2d960" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca62fddc-7d60-4b3e-ae36-9428e4ddc06a" type="checkbox" ><label for="ca62fddc-7d60-4b3e-ae36-9428e4ddc06a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 {color: black;background-color: white;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 pre{padding: 0;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-toggleable {background-color: white;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-item {z-index: 1;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-parallel-item:only-child::after {width: 0;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2192f7cd-f4ba-4c07-81fb-6ad2f0d76770" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81e53f89-647a-44a1-98d5-492bb41dd35a" type="checkbox" ><label for="81e53f89-647a-44a1-98d5-492bb41dd35a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bd9472e-462a-430b-8af2-f1921f381aa4" type="checkbox" ><label for="0bd9472e-462a-430b-8af2-f1921f381aa4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cc165ca-d4de-42c1-acab-668487aa3038" type="checkbox" ><label for="4cc165ca-d4de-42c1-acab-668487aa3038" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2ade381-b105-49d9-bc37-cbc5f6a4d956" type="checkbox" ><label for="c2ade381-b105-49d9-bc37-cbc5f6a4d956" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ed00c1f-0b45-4a2c-8079-da6be541928d" type="checkbox" ><label for="7ed00c1f-0b45-4a2c-8079-da6be541928d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4700e797-1426-4a5e-8349-b66d6611b1a1" type="checkbox" ><label for="4700e797-1426-4a5e-8349-b66d6611b1a1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dae63dd6-85d2-4be0-a244-6f34bcdb140b" type="checkbox" ><label for="dae63dd6-85d2-4be0-a244-6f34bcdb140b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45964875-0670-45aa-9b7a-db20779b4d6d" type="checkbox" ><label for="45964875-0670-45aa-9b7a-db20779b4d6d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50b7560d-1339-4724-bee2-420600cc359b" type="checkbox" ><label for="50b7560d-1339-4724-bee2-420600cc359b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
