
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1084ebba-6b14-46e6-9af7-336bd5114895 {color: black;background-color: white;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 pre{padding: 0;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-toggleable {background-color: white;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-item {z-index: 1;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-parallel-item:only-child::after {width: 0;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1084ebba-6b14-46e6-9af7-336bd5114895 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1084ebba-6b14-46e6-9af7-336bd5114895" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8051cf4d-2795-4c9b-adf7-9395d46a1d43" type="checkbox" ><label for="8051cf4d-2795-4c9b-adf7-9395d46a1d43" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dde0780-c814-45e8-9e9c-5dc849755b61" type="checkbox" ><label for="1dde0780-c814-45e8-9e9c-5dc849755b61" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3dbac006-6995-49f2-bc99-7a34fbf7f3b6" type="checkbox" ><label for="3dbac006-6995-49f2-bc99-7a34fbf7f3b6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 {color: black;background-color: white;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 pre{padding: 0;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-toggleable {background-color: white;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-item {z-index: 1;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-parallel-item:only-child::after {width: 0;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c55bbe3c-8dee-4515-880e-f6c2d8fc1f25" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc548b7d-ec5a-45c0-b646-53ad4aaeedc6" type="checkbox" ><label for="fc548b7d-ec5a-45c0-b646-53ad4aaeedc6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75974e52-c6ce-4afd-b27e-bc206804abe2" type="checkbox" ><label for="75974e52-c6ce-4afd-b27e-bc206804abe2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e02220d7-b0d6-4645-aaa1-182ed738a9b4" type="checkbox" ><label for="e02220d7-b0d6-4645-aaa1-182ed738a9b4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caebc54d-43ef-494a-a611-434152ff8f5f" type="checkbox" ><label for="caebc54d-43ef-494a-a611-434152ff8f5f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-645e5e73-6c43-47eb-87e7-0894408af571 {color: black;background-color: white;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 pre{padding: 0;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-toggleable {background-color: white;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-estimator:hover {background-color: #d4ebff;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-item {z-index: 1;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-parallel-item:only-child::after {width: 0;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-645e5e73-6c43-47eb-87e7-0894408af571 div.sk-text-repr-fallback {display: none;}</style><div id="sk-645e5e73-6c43-47eb-87e7-0894408af571" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c026e8b1-ddb7-4de5-8394-0ce3914fb3a8" type="checkbox" ><label for="c026e8b1-ddb7-4de5-8394-0ce3914fb3a8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd7fecdd-b054-41c3-a319-0d650bd384a0" type="checkbox" ><label for="dd7fecdd-b054-41c3-a319-0d650bd384a0" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88c93d39-6ff6-4866-ad01-b4395c4ee499" type="checkbox" ><label for="88c93d39-6ff6-4866-ad01-b4395c4ee499" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c {color: black;background-color: white;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c pre{padding: 0;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-toggleable {background-color: white;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-estimator:hover {background-color: #d4ebff;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-item {z-index: 1;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-parallel-item:only-child::after {width: 0;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c div.sk-text-repr-fallback {display: none;}</style><div id="sk-7ab90c7f-0966-4f25-b582-82d3251f9a6c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3edd200-8e0c-4d7c-a467-b46ac05d162a" type="checkbox" ><label for="d3edd200-8e0c-4d7c-a467-b46ac05d162a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e4b8bc4-1434-44c5-92a9-bc20640406d8" type="checkbox" ><label for="6e4b8bc4-1434-44c5-92a9-bc20640406d8" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1da96430-50ac-4d17-af96-b2aaed58de75" type="checkbox" ><label for="1da96430-50ac-4d17-af96-b2aaed58de75" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5153c8e-0ebf-42e2-b149-771e3e1db7e1" type="checkbox" ><label for="a5153c8e-0ebf-42e2-b149-771e3e1db7e1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f49c10f-2d39-48e1-9ce7-676fc0d85483" type="checkbox" ><label for="3f49c10f-2d39-48e1-9ce7-676fc0d85483" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f40cdaf-247b-410d-82fe-15f4424a5ab9" type="checkbox" ><label for="6f40cdaf-247b-410d-82fe-15f4424a5ab9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7a3ebe9-cf1b-4541-8097-d70d1329d5ef" type="checkbox" ><label for="b7a3ebe9-cf1b-4541-8097-d70d1329d5ef" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f890b12e-69cd-4114-b801-6fbaa33685f5" type="checkbox" ><label for="f890b12e-69cd-4114-b801-6fbaa33685f5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="861e4397-7f59-42a8-873e-02422bafced4" type="checkbox" ><label for="861e4397-7f59-42a8-873e-02422bafced4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e {color: black;background-color: white;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e pre{padding: 0;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-toggleable {background-color: white;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-estimator:hover {background-color: #d4ebff;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-item {z-index: 1;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-parallel-item:only-child::after {width: 0;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-00e3825a-81c2-4f74-a980-0b4648f5d43e div.sk-text-repr-fallback {display: none;}</style><div id="sk-00e3825a-81c2-4f74-a980-0b4648f5d43e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52486142-7bc0-4462-9682-49d4c182481d" type="checkbox" ><label for="52486142-7bc0-4462-9682-49d4c182481d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da6e761a-dcad-4ae1-8586-60b01ae585a6" type="checkbox" ><label for="da6e761a-dcad-4ae1-8586-60b01ae585a6" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="613a883b-8f85-46a9-b5aa-e7d7a3353146" type="checkbox" ><label for="613a883b-8f85-46a9-b5aa-e7d7a3353146" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ceb35271-0843-4ec1-90a9-d96a0660b9b1" type="checkbox" ><label for="ceb35271-0843-4ec1-90a9-d96a0660b9b1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8a8c52c-f2c5-4ac9-ab26-24a4604fc605" type="checkbox" ><label for="c8a8c52c-f2c5-4ac9-ab26-24a4604fc605" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="135f6ddf-f670-49b3-8a1b-571bf16b5319" type="checkbox" ><label for="135f6ddf-f670-49b3-8a1b-571bf16b5319" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c9f1c88-1f1e-4e09-82f6-f92c1499719d" type="checkbox" ><label for="1c9f1c88-1f1e-4e09-82f6-f92c1499719d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="141b7218-228c-4b8a-a4be-369f9e9ba3bd" type="checkbox" ><label for="141b7218-228c-4b8a-a4be-369f9e9ba3bd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="728c1f96-b904-4df7-a9fc-b72a679472d8" type="checkbox" ><label for="728c1f96-b904-4df7-a9fc-b72a679472d8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
