
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-51d4e842-0046-47a7-b494-29d1af02b871 {color: black;background-color: white;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 pre{padding: 0;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-toggleable {background-color: white;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-estimator:hover {background-color: #d4ebff;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-item {z-index: 1;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-parallel-item:only-child::after {width: 0;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-51d4e842-0046-47a7-b494-29d1af02b871 div.sk-text-repr-fallback {display: none;}</style><div id="sk-51d4e842-0046-47a7-b494-29d1af02b871" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0840f5da-1d83-4d5b-a683-47c0ddb2814d" type="checkbox" ><label for="0840f5da-1d83-4d5b-a683-47c0ddb2814d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f283403-8114-44e5-af58-6302fb00e5ef" type="checkbox" ><label for="3f283403-8114-44e5-af58-6302fb00e5ef" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="135aaaa9-f533-418a-9c89-4e45added0d1" type="checkbox" ><label for="135aaaa9-f533-418a-9c89-4e45added0d1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 {color: black;background-color: white;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 pre{padding: 0;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-toggleable {background-color: white;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-item {z-index: 1;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-parallel-item:only-child::after {width: 0;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a17e8c0a-3fc5-46e7-98ea-c3f1b7033ba0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10e6aab2-3576-48f4-8ef3-9afa60fe6327" type="checkbox" ><label for="10e6aab2-3576-48f4-8ef3-9afa60fe6327" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8af24fe1-fc8c-4258-be42-7cf926c2dfc9" type="checkbox" ><label for="8af24fe1-fc8c-4258-be42-7cf926c2dfc9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76c04524-bc81-4f3a-939a-e4de27063420" type="checkbox" ><label for="76c04524-bc81-4f3a-939a-e4de27063420" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63275412-18d7-4535-88f4-2fc2f1e1ace1" type="checkbox" ><label for="63275412-18d7-4535-88f4-2fc2f1e1ace1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e56a2aec-013e-463d-979d-19b05d4ad528 {color: black;background-color: white;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 pre{padding: 0;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-toggleable {background-color: white;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-item {z-index: 1;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-parallel-item:only-child::after {width: 0;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e56a2aec-013e-463d-979d-19b05d4ad528 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e56a2aec-013e-463d-979d-19b05d4ad528" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="392f0ec7-c6da-46de-a86e-80072e0f692e" type="checkbox" ><label for="392f0ec7-c6da-46de-a86e-80072e0f692e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0934ef1-29aa-4a4c-a64a-808604ca74f2" type="checkbox" ><label for="c0934ef1-29aa-4a4c-a64a-808604ca74f2" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2c86faa-1a05-43b1-8317-ab3cefbb2e3b" type="checkbox" ><label for="e2c86faa-1a05-43b1-8317-ab3cefbb2e3b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 {color: black;background-color: white;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 pre{padding: 0;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-toggleable {background-color: white;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-item {z-index: 1;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-parallel-item:only-child::after {width: 0;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5d9c8265-fa5b-4979-bc91-e70003dd1b89" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="848cef98-0c3c-45a0-bf7d-fb6d10391345" type="checkbox" ><label for="848cef98-0c3c-45a0-bf7d-fb6d10391345" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e88c93a2-23ec-42ca-85df-d3c7dd4ecb4f" type="checkbox" ><label for="e88c93a2-23ec-42ca-85df-d3c7dd4ecb4f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9140fd52-55b0-4d8a-98d4-92d89eba7cbc" type="checkbox" ><label for="9140fd52-55b0-4d8a-98d4-92d89eba7cbc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2c42902-253d-480a-90be-a1d7c8b4f3ab" type="checkbox" ><label for="b2c42902-253d-480a-90be-a1d7c8b4f3ab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1566c80b-6ba4-4040-b7ec-3561bf25f141" type="checkbox" ><label for="1566c80b-6ba4-4040-b7ec-3561bf25f141" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2595c221-f2f1-45ce-ab07-8a062ed4d554" type="checkbox" ><label for="2595c221-f2f1-45ce-ab07-8a062ed4d554" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="509e580a-5212-4230-926e-aaf385147659" type="checkbox" ><label for="509e580a-5212-4230-926e-aaf385147659" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2688cb96-a328-4d4c-9e90-e10802ff769d" type="checkbox" ><label for="2688cb96-a328-4d4c-9e90-e10802ff769d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f4cd018-c7c4-4bb2-9e21-04884fb15f2a" type="checkbox" ><label for="5f4cd018-c7c4-4bb2-9e21-04884fb15f2a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 {color: black;background-color: white;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 pre{padding: 0;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-toggleable {background-color: white;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-estimator:hover {background-color: #d4ebff;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-item {z-index: 1;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-parallel-item:only-child::after {width: 0;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-05bbe00c-018e-4b81-95a0-a8d443f00263 div.sk-text-repr-fallback {display: none;}</style><div id="sk-05bbe00c-018e-4b81-95a0-a8d443f00263" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6486cca3-b473-4f31-86c0-fd8de95fbb7f" type="checkbox" ><label for="6486cca3-b473-4f31-86c0-fd8de95fbb7f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f69ffd04-26f1-49fe-9271-3ed125c30c0f" type="checkbox" ><label for="f69ffd04-26f1-49fe-9271-3ed125c30c0f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9594f205-5f78-4e9c-9b7f-031a7860a691" type="checkbox" ><label for="9594f205-5f78-4e9c-9b7f-031a7860a691" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb025663-b44b-4add-aa03-67a61f82f6b3" type="checkbox" ><label for="eb025663-b44b-4add-aa03-67a61f82f6b3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cfa1ab1-d88d-49ea-8c7d-14a60ff4a597" type="checkbox" ><label for="9cfa1ab1-d88d-49ea-8c7d-14a60ff4a597" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8882ecbd-6214-4cf9-8385-4478e109f74a" type="checkbox" ><label for="8882ecbd-6214-4cf9-8385-4478e109f74a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b03c5fd7-84de-4166-bb41-7fce7a741f1c" type="checkbox" ><label for="b03c5fd7-84de-4166-bb41-7fce7a741f1c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e25d07ee-ab11-4fba-af3e-9267dce95e46" type="checkbox" ><label for="e25d07ee-ab11-4fba-af3e-9267dce95e46" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31dc6a82-2b6d-48e0-9174-59b005a28d89" type="checkbox" ><label for="31dc6a82-2b6d-48e0-9174-59b005a28d89" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.078 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
