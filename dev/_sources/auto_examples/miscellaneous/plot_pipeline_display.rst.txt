
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dba47d68-8862-4c19-8694-660be49419e1 {color: black;background-color: white;}#sk-dba47d68-8862-4c19-8694-660be49419e1 pre{padding: 0;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-toggleable {background-color: white;}#sk-dba47d68-8862-4c19-8694-660be49419e1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dba47d68-8862-4c19-8694-660be49419e1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dba47d68-8862-4c19-8694-660be49419e1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dba47d68-8862-4c19-8694-660be49419e1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dba47d68-8862-4c19-8694-660be49419e1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dba47d68-8862-4c19-8694-660be49419e1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-item {z-index: 1;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-parallel-item:only-child::after {width: 0;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dba47d68-8862-4c19-8694-660be49419e1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dba47d68-8862-4c19-8694-660be49419e1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd25fe34-44d2-41ae-9a01-a6a2e0c07f6d" type="checkbox" ><label for="bd25fe34-44d2-41ae-9a01-a6a2e0c07f6d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f38224fc-5a33-4e19-8118-0ec047b266d2" type="checkbox" ><label for="f38224fc-5a33-4e19-8118-0ec047b266d2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2809403-9928-4020-b922-c8d0d1855044" type="checkbox" ><label for="a2809403-9928-4020-b922-c8d0d1855044" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 {color: black;background-color: white;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 pre{padding: 0;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-toggleable {background-color: white;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-item {z-index: 1;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-parallel-item:only-child::after {width: 0;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d7fead77-5599-4e86-a7c8-c7bb2f1dbc21" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6858921-6c5e-4530-96c2-76eb6678f960" type="checkbox" ><label for="f6858921-6c5e-4530-96c2-76eb6678f960" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f99d2795-8881-47d3-89d0-472ebb06cb37" type="checkbox" ><label for="f99d2795-8881-47d3-89d0-472ebb06cb37" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c2796ea-9648-4532-8c50-84e2ee75209d" type="checkbox" ><label for="4c2796ea-9648-4532-8c50-84e2ee75209d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f656f9fc-e465-49b7-822d-6fcb11677ffb" type="checkbox" ><label for="f656f9fc-e465-49b7-822d-6fcb11677ffb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f {color: black;background-color: white;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f pre{padding: 0;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-toggleable {background-color: white;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-estimator:hover {background-color: #d4ebff;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-item {z-index: 1;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-parallel-item:only-child::after {width: 0;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f div.sk-text-repr-fallback {display: none;}</style><div id="sk-b0ab461f-1617-41ad-ac28-bad8b8102a3f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3ad547e-8649-46d9-9af1-51d667ddb04d" type="checkbox" ><label for="a3ad547e-8649-46d9-9af1-51d667ddb04d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="510abc57-171f-44da-be9c-5fc7d3e33824" type="checkbox" ><label for="510abc57-171f-44da-be9c-5fc7d3e33824" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0b15a8c-7279-4dfb-9272-150003ac2747" type="checkbox" ><label for="c0b15a8c-7279-4dfb-9272-150003ac2747" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 {color: black;background-color: white;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 pre{padding: 0;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-toggleable {background-color: white;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-item {z-index: 1;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-parallel-item:only-child::after {width: 0;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1a18b5ef-d84a-4c89-97f9-8f68af58d3a2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4030f47a-600f-497a-8164-5e54894b0a8a" type="checkbox" ><label for="4030f47a-600f-497a-8164-5e54894b0a8a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a89fc33b-bbf8-4a49-b8aa-78b4524fd4e1" type="checkbox" ><label for="a89fc33b-bbf8-4a49-b8aa-78b4524fd4e1" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c1efc42-1a6e-4f00-a656-be17e42a515e" type="checkbox" ><label for="3c1efc42-1a6e-4f00-a656-be17e42a515e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ddc2f82-e0eb-4e03-85cf-b7666cae0ad9" type="checkbox" ><label for="1ddc2f82-e0eb-4e03-85cf-b7666cae0ad9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7aadeb6-28fe-4adc-a59a-5c7f8de5ec29" type="checkbox" ><label for="b7aadeb6-28fe-4adc-a59a-5c7f8de5ec29" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5825f0aa-c4ef-466d-b498-bde2b117a509" type="checkbox" ><label for="5825f0aa-c4ef-466d-b498-bde2b117a509" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="480f709f-9bc8-49df-b65a-64548941f361" type="checkbox" ><label for="480f709f-9bc8-49df-b65a-64548941f361" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7eff36f-0068-4f91-a25f-9424950e9186" type="checkbox" ><label for="b7eff36f-0068-4f91-a25f-9424950e9186" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7254c09a-f293-4e96-b1b0-a7a696b98ea4" type="checkbox" ><label for="7254c09a-f293-4e96-b1b0-a7a696b98ea4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 {color: black;background-color: white;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 pre{padding: 0;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-toggleable {background-color: white;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-item {z-index: 1;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-parallel-item:only-child::after {width: 0;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fcc7e6a3-bf53-4e19-b09e-3ba58ff94088" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1fb6c30-c459-4af0-9fd8-4ea7b244c804" type="checkbox" ><label for="a1fb6c30-c459-4af0-9fd8-4ea7b244c804" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbfc29fe-eeea-4e08-bc94-73faebbaf5ac" type="checkbox" ><label for="fbfc29fe-eeea-4e08-bc94-73faebbaf5ac" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1bcc626-c225-4652-ac10-2502c1bbef28" type="checkbox" ><label for="c1bcc626-c225-4652-ac10-2502c1bbef28" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="437538e9-d4a1-418a-81c1-d8e6a6bfa334" type="checkbox" ><label for="437538e9-d4a1-418a-81c1-d8e6a6bfa334" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c34a0e20-9666-4c80-970e-229e77e8251b" type="checkbox" ><label for="c34a0e20-9666-4c80-970e-229e77e8251b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4d21453-ce1c-4e83-9d09-82e6a162a670" type="checkbox" ><label for="b4d21453-ce1c-4e83-9d09-82e6a162a670" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9931664a-1a29-48f7-a767-6a1e547dd152" type="checkbox" ><label for="9931664a-1a29-48f7-a767-6a1e547dd152" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6567a9c3-e58d-4534-8f13-ea853fb9b0df" type="checkbox" ><label for="6567a9c3-e58d-4534-8f13-ea853fb9b0df" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfac0bb0-a7ee-4ecb-8926-5af6f50618aa" type="checkbox" ><label for="cfac0bb0-a7ee-4ecb-8926-5af6f50618aa" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.084 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
