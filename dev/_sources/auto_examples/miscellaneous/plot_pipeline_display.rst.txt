
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 {color: black;background-color: white;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 pre{padding: 0;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-toggleable {background-color: white;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-item {z-index: 1;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-parallel-item:only-child::after {width: 0;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c77812d1-98c8-4d10-81b6-c9e6ae698989 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c77812d1-98c8-4d10-81b6-c9e6ae698989" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dacb83e9-9fd0-4bc7-bb18-94ffa73635fa" type="checkbox" ><label for="dacb83e9-9fd0-4bc7-bb18-94ffa73635fa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80f04897-fe02-4635-bde7-fca82f44f36d" type="checkbox" ><label for="80f04897-fe02-4635-bde7-fca82f44f36d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab1626cc-666e-4987-8564-178aa6c8a20c" type="checkbox" ><label for="ab1626cc-666e-4987-8564-178aa6c8a20c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0841edb9-cf53-44d9-9112-4555cbc4120b {color: black;background-color: white;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b pre{padding: 0;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-toggleable {background-color: white;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-estimator:hover {background-color: #d4ebff;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-item {z-index: 1;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-parallel-item:only-child::after {width: 0;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0841edb9-cf53-44d9-9112-4555cbc4120b div.sk-text-repr-fallback {display: none;}</style><div id="sk-0841edb9-cf53-44d9-9112-4555cbc4120b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aee445d3-5b62-4362-893a-1930a9933357" type="checkbox" ><label for="aee445d3-5b62-4362-893a-1930a9933357" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f314cc43-1ac9-40ae-a2dd-d957673157a3" type="checkbox" ><label for="f314cc43-1ac9-40ae-a2dd-d957673157a3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a9743b9-fdc1-4cfe-85ec-972b3f59c810" type="checkbox" ><label for="5a9743b9-fdc1-4cfe-85ec-972b3f59c810" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="697544bc-e235-4a0d-8e0b-f6d11fc205f2" type="checkbox" ><label for="697544bc-e235-4a0d-8e0b-f6d11fc205f2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e92799a-46de-4fd4-97cd-916541f888bb {color: black;background-color: white;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb pre{padding: 0;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-toggleable {background-color: white;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-item {z-index: 1;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-parallel-item:only-child::after {width: 0;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2e92799a-46de-4fd4-97cd-916541f888bb div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e92799a-46de-4fd4-97cd-916541f888bb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a263b1e-acc5-4abd-8735-7418f15ead1a" type="checkbox" ><label for="6a263b1e-acc5-4abd-8735-7418f15ead1a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="603b831f-6216-43dc-b592-980c57163ddc" type="checkbox" ><label for="603b831f-6216-43dc-b592-980c57163ddc" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e54b42a9-2dab-4fe8-91e6-d77ef7609c54" type="checkbox" ><label for="e54b42a9-2dab-4fe8-91e6-d77ef7609c54" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 {color: black;background-color: white;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 pre{padding: 0;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-toggleable {background-color: white;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-estimator:hover {background-color: #d4ebff;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-item {z-index: 1;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-parallel-item:only-child::after {width: 0;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141 div.sk-text-repr-fallback {display: none;}</style><div id="sk-52f94af5-51b2-47e2-8b2e-10ea67d1f141" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b00d398-7974-4d88-ae7e-2ace159e7de0" type="checkbox" ><label for="0b00d398-7974-4d88-ae7e-2ace159e7de0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21834228-4610-4a68-9330-0afbccbf09f2" type="checkbox" ><label for="21834228-4610-4a68-9330-0afbccbf09f2" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bf195bf-86b6-4b3d-91c8-4fb488a8c97f" type="checkbox" ><label for="5bf195bf-86b6-4b3d-91c8-4fb488a8c97f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca6da066-0009-47d9-9f6a-0bc1a3815fae" type="checkbox" ><label for="ca6da066-0009-47d9-9f6a-0bc1a3815fae" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6e64eb8-4063-4f96-bca7-f77560438700" type="checkbox" ><label for="d6e64eb8-4063-4f96-bca7-f77560438700" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac141ce3-91ec-421d-bb65-728430c925cf" type="checkbox" ><label for="ac141ce3-91ec-421d-bb65-728430c925cf" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad9b7cd6-7a3c-4fd6-a754-da12151439d4" type="checkbox" ><label for="ad9b7cd6-7a3c-4fd6-a754-da12151439d4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31145307-4f2c-4857-a56d-a8303e4e435a" type="checkbox" ><label for="31145307-4f2c-4857-a56d-a8303e4e435a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27627541-623f-4424-afa2-20f8f57facb3" type="checkbox" ><label for="27627541-623f-4424-afa2-20f8f57facb3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 {color: black;background-color: white;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 pre{padding: 0;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-toggleable {background-color: white;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-item {z-index: 1;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-parallel-item:only-child::after {width: 0;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5ca803a7-f865-4d06-88b6-f27c518bb814 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5ca803a7-f865-4d06-88b6-f27c518bb814" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36682fb9-79b3-43f5-85ee-34e4f9fdc841" type="checkbox" ><label for="36682fb9-79b3-43f5-85ee-34e4f9fdc841" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe16a5eb-9c33-472b-a079-4d5e1938717e" type="checkbox" ><label for="fe16a5eb-9c33-472b-a079-4d5e1938717e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="edb14a85-09a4-405a-be76-e19190edf115" type="checkbox" ><label for="edb14a85-09a4-405a-be76-e19190edf115" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d502d95-abdd-435c-a7e9-373ca047d9db" type="checkbox" ><label for="3d502d95-abdd-435c-a7e9-373ca047d9db" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc9de3f9-c007-4aac-8da0-8d22133f63fe" type="checkbox" ><label for="bc9de3f9-c007-4aac-8da0-8d22133f63fe" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abe0adca-5d50-4b2b-ac62-ca64383fcd50" type="checkbox" ><label for="abe0adca-5d50-4b2b-ac62-ca64383fcd50" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f390060c-9417-472a-a1b6-b9cf1f14ba35" type="checkbox" ><label for="f390060c-9417-472a-a1b6-b9cf1f14ba35" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4403f50-f705-4502-8e30-ce5e25655845" type="checkbox" ><label for="d4403f50-f705-4502-8e30-ce5e25655845" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="797cec37-7fc9-4942-b64b-53ff8226d3bd" type="checkbox" ><label for="797cec37-7fc9-4942-b64b-53ff8226d3bd" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
