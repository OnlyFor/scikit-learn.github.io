
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-392a8488-3e6b-442f-9925-31b555507648 {color: black;background-color: white;}#sk-392a8488-3e6b-442f-9925-31b555507648 pre{padding: 0;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-toggleable {background-color: white;}#sk-392a8488-3e6b-442f-9925-31b555507648 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-392a8488-3e6b-442f-9925-31b555507648 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-392a8488-3e6b-442f-9925-31b555507648 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-392a8488-3e6b-442f-9925-31b555507648 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-392a8488-3e6b-442f-9925-31b555507648 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-392a8488-3e6b-442f-9925-31b555507648 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-estimator:hover {background-color: #d4ebff;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-item {z-index: 1;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-parallel-item:only-child::after {width: 0;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-392a8488-3e6b-442f-9925-31b555507648 div.sk-text-repr-fallback {display: none;}</style><div id="sk-392a8488-3e6b-442f-9925-31b555507648" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78523f7d-ee8f-4bd6-bda6-a0e6a3352043" type="checkbox" ><label for="78523f7d-ee8f-4bd6-bda6-a0e6a3352043" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d582047e-e388-474e-a943-85f6ad658d00" type="checkbox" ><label for="d582047e-e388-474e-a943-85f6ad658d00" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f983f39c-d2f7-426a-8f20-b50d15360437" type="checkbox" ><label for="f983f39c-d2f7-426a-8f20-b50d15360437" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d {color: black;background-color: white;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d pre{padding: 0;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-toggleable {background-color: white;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-item {z-index: 1;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-parallel-item:only-child::after {width: 0;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-3ca61359-c1c5-4db7-b7ad-cf71c805ad3d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d710427-7b11-4b72-b121-06e2b05461b7" type="checkbox" ><label for="8d710427-7b11-4b72-b121-06e2b05461b7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c15344a0-4f48-4cb4-8a78-884a54b3776a" type="checkbox" ><label for="c15344a0-4f48-4cb4-8a78-884a54b3776a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4aaea9c8-e28a-4c82-9c60-33d50672cf94" type="checkbox" ><label for="4aaea9c8-e28a-4c82-9c60-33d50672cf94" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2916e3a1-9ced-4dd8-a8be-66ee743eb1b4" type="checkbox" ><label for="2916e3a1-9ced-4dd8-a8be-66ee743eb1b4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-415b0335-df83-4118-ad70-21f9fdbaf1be {color: black;background-color: white;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be pre{padding: 0;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-toggleable {background-color: white;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-estimator:hover {background-color: #d4ebff;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-item {z-index: 1;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-parallel-item:only-child::after {width: 0;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-415b0335-df83-4118-ad70-21f9fdbaf1be div.sk-text-repr-fallback {display: none;}</style><div id="sk-415b0335-df83-4118-ad70-21f9fdbaf1be" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97df99eb-da60-4114-a779-d6c07932a835" type="checkbox" ><label for="97df99eb-da60-4114-a779-d6c07932a835" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58b2f259-3c2a-4e6c-9bbd-1116aad2db4c" type="checkbox" ><label for="58b2f259-3c2a-4e6c-9bbd-1116aad2db4c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9c6a007-eacd-4175-9869-5f8b3a807fc8" type="checkbox" ><label for="c9c6a007-eacd-4175-9869-5f8b3a807fc8" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-08c563fc-95c7-4deb-a737-89154654567b {color: black;background-color: white;}#sk-08c563fc-95c7-4deb-a737-89154654567b pre{padding: 0;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-toggleable {background-color: white;}#sk-08c563fc-95c7-4deb-a737-89154654567b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-08c563fc-95c7-4deb-a737-89154654567b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-08c563fc-95c7-4deb-a737-89154654567b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-08c563fc-95c7-4deb-a737-89154654567b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-08c563fc-95c7-4deb-a737-89154654567b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-08c563fc-95c7-4deb-a737-89154654567b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-estimator:hover {background-color: #d4ebff;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-item {z-index: 1;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-parallel-item:only-child::after {width: 0;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-08c563fc-95c7-4deb-a737-89154654567b div.sk-text-repr-fallback {display: none;}</style><div id="sk-08c563fc-95c7-4deb-a737-89154654567b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8fb8dfc7-c268-4c69-b893-2fa0ea284d7c" type="checkbox" ><label for="8fb8dfc7-c268-4c69-b893-2fa0ea284d7c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1287283-a299-466c-9baa-ce16ab40e99e" type="checkbox" ><label for="d1287283-a299-466c-9baa-ce16ab40e99e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00dc8b24-c687-404b-b7fc-2362d94e4e7a" type="checkbox" ><label for="00dc8b24-c687-404b-b7fc-2362d94e4e7a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23dc8118-3cf1-40a4-95bb-e2129e0b8b14" type="checkbox" ><label for="23dc8118-3cf1-40a4-95bb-e2129e0b8b14" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1accbb26-cdf8-4b1b-99d3-48117c0dc13a" type="checkbox" ><label for="1accbb26-cdf8-4b1b-99d3-48117c0dc13a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9df036f-9a8e-429c-9680-9629d6c88b5e" type="checkbox" ><label for="f9df036f-9a8e-429c-9680-9629d6c88b5e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1038d486-3f6b-4ab6-8c9c-a18f04fe9e9a" type="checkbox" ><label for="1038d486-3f6b-4ab6-8c9c-a18f04fe9e9a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="947169cf-99d3-4c09-b198-ebee3a788151" type="checkbox" ><label for="947169cf-99d3-4c09-b198-ebee3a788151" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7e1a024-96e9-480d-adab-ddb305b799cc" type="checkbox" ><label for="b7e1a024-96e9-480d-adab-ddb305b799cc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b {color: black;background-color: white;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b pre{padding: 0;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-toggleable {background-color: white;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-estimator:hover {background-color: #d4ebff;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-item {z-index: 1;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-parallel-item:only-child::after {width: 0;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-015ff96c-fdbd-4662-af59-a9fcb423b74b div.sk-text-repr-fallback {display: none;}</style><div id="sk-015ff96c-fdbd-4662-af59-a9fcb423b74b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19c0126d-c7ca-4563-8df4-6d1681b20129" type="checkbox" ><label for="19c0126d-c7ca-4563-8df4-6d1681b20129" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a42a7c4b-d839-4e04-8b8e-593df7d9e0fc" type="checkbox" ><label for="a42a7c4b-d839-4e04-8b8e-593df7d9e0fc" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47b09b21-13ca-4357-8076-073cd8c40a1e" type="checkbox" ><label for="47b09b21-13ca-4357-8076-073cd8c40a1e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50e8b70d-e3f7-4082-bbe5-de7430c2eadc" type="checkbox" ><label for="50e8b70d-e3f7-4082-bbe5-de7430c2eadc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="627ce384-36cd-40fb-91c2-630cf7d7be89" type="checkbox" ><label for="627ce384-36cd-40fb-91c2-630cf7d7be89" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c25bd52a-5a58-4d4e-b669-1778ca49a53a" type="checkbox" ><label for="c25bd52a-5a58-4d4e-b669-1778ca49a53a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4a9fa43-9add-4bf8-a037-7c7cfd59151c" type="checkbox" ><label for="c4a9fa43-9add-4bf8-a037-7c7cfd59151c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95f5d4f7-a329-4761-8f18-99d8b71a91ff" type="checkbox" ><label for="95f5d4f7-a329-4761-8f18-99d8b71a91ff" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af4addf0-695d-4f3f-8f68-b8ca6c607246" type="checkbox" ><label for="af4addf0-695d-4f3f-8f68-b8ca6c607246" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
