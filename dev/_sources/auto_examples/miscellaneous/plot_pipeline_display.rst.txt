
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b {color: black;background-color: white;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b pre{padding: 0;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-toggleable {background-color: white;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-estimator:hover {background-color: #d4ebff;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-item {z-index: 1;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-parallel-item:only-child::after {width: 0;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b div.sk-text-repr-fallback {display: none;}</style><div id="sk-949dc8f3-f4e5-48bd-bb54-2c9260676a6b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0b5e98c-a8a0-45b8-aa29-ff6782e265ac" type="checkbox" ><label for="b0b5e98c-a8a0-45b8-aa29-ff6782e265ac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f334d0dd-4d09-4643-b6ae-f8f7f18b8b14" type="checkbox" ><label for="f334d0dd-4d09-4643-b6ae-f8f7f18b8b14" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6693ea0c-f1cc-4071-82f5-2090daf9d150" type="checkbox" ><label for="6693ea0c-f1cc-4071-82f5-2090daf9d150" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 {color: black;background-color: white;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 pre{padding: 0;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-toggleable {background-color: white;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-item {z-index: 1;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-parallel-item:only-child::after {width: 0;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d5ff97bc-0285-4027-ad24-34293623a6b3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d5ff97bc-0285-4027-ad24-34293623a6b3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbb2ff9b-48af-4e01-a32b-e8a843dfff26" type="checkbox" ><label for="cbb2ff9b-48af-4e01-a32b-e8a843dfff26" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87294ae5-127c-4611-8a3f-42e9730f75b1" type="checkbox" ><label for="87294ae5-127c-4611-8a3f-42e9730f75b1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d208338b-d973-43bb-b8b2-d587a18ef417" type="checkbox" ><label for="d208338b-d973-43bb-b8b2-d587a18ef417" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1261a4fb-bff0-431c-9f7c-e7f03e2dfb74" type="checkbox" ><label for="1261a4fb-bff0-431c-9f7c-e7f03e2dfb74" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 {color: black;background-color: white;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 pre{padding: 0;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-toggleable {background-color: white;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-item {z-index: 1;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-parallel-item:only-child::after {width: 0;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f1c56d31-db52-4a27-8263-5637cac4fdc0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f1c56d31-db52-4a27-8263-5637cac4fdc0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e491b3a-0958-450d-8b2a-7b97a8df0091" type="checkbox" ><label for="4e491b3a-0958-450d-8b2a-7b97a8df0091" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6235a131-a94e-455d-9b5e-89ec53de8b1f" type="checkbox" ><label for="6235a131-a94e-455d-9b5e-89ec53de8b1f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89e153f8-7810-40c8-916c-8b048005c4bd" type="checkbox" ><label for="89e153f8-7810-40c8-916c-8b048005c4bd" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc {color: black;background-color: white;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc pre{padding: 0;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-toggleable {background-color: white;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-estimator:hover {background-color: #d4ebff;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-item {z-index: 1;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-parallel-item:only-child::after {width: 0;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-98554872-bb80-42e5-bfe1-b80b412bbfcc div.sk-text-repr-fallback {display: none;}</style><div id="sk-98554872-bb80-42e5-bfe1-b80b412bbfcc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8cf7c37-011f-49a0-88d9-2ba0ed6f62b3" type="checkbox" ><label for="e8cf7c37-011f-49a0-88d9-2ba0ed6f62b3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61339bf1-3077-4062-b41c-f47b5de482fe" type="checkbox" ><label for="61339bf1-3077-4062-b41c-f47b5de482fe" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a5645b5-5116-4cfd-9202-23489092a2d1" type="checkbox" ><label for="8a5645b5-5116-4cfd-9202-23489092a2d1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eaf3fd72-a7a7-426f-96ce-d1ad7bdf8edd" type="checkbox" ><label for="eaf3fd72-a7a7-426f-96ce-d1ad7bdf8edd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7ac6ed9-8e20-4e55-b90e-5a6c295acbd7" type="checkbox" ><label for="f7ac6ed9-8e20-4e55-b90e-5a6c295acbd7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02ed9fef-2572-422d-b424-0d2e7edebea2" type="checkbox" ><label for="02ed9fef-2572-422d-b424-0d2e7edebea2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d26232da-ec1f-481e-9c8f-82a08038091c" type="checkbox" ><label for="d26232da-ec1f-481e-9c8f-82a08038091c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82d25d56-639b-465f-8da1-9fa5231696f4" type="checkbox" ><label for="82d25d56-639b-465f-8da1-9fa5231696f4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61676ce1-22a0-47f9-98ef-a8ac2c3e866d" type="checkbox" ><label for="61676ce1-22a0-47f9-98ef-a8ac2c3e866d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a {color: black;background-color: white;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a pre{padding: 0;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-toggleable {background-color: white;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-estimator:hover {background-color: #d4ebff;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-item {z-index: 1;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-parallel-item:only-child::after {width: 0;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a div.sk-text-repr-fallback {display: none;}</style><div id="sk-76edb804-d0d8-4f93-93cb-dd989dc8ca0a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2435b25a-725e-46fe-9794-6a8d46ac745d" type="checkbox" ><label for="2435b25a-725e-46fe-9794-6a8d46ac745d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1271d6db-3c54-4db2-976a-81fa54329841" type="checkbox" ><label for="1271d6db-3c54-4db2-976a-81fa54329841" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e53d98e2-4bff-436c-89a9-1b50774377e6" type="checkbox" ><label for="e53d98e2-4bff-436c-89a9-1b50774377e6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c647a34d-703a-4f6f-a21e-594699486d5d" type="checkbox" ><label for="c647a34d-703a-4f6f-a21e-594699486d5d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7dcfd78b-e7d5-4e6a-8d88-d493947e2879" type="checkbox" ><label for="7dcfd78b-e7d5-4e6a-8d88-d493947e2879" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70ba88e4-1975-4920-8510-bd325a473c84" type="checkbox" ><label for="70ba88e4-1975-4920-8510-bd325a473c84" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b87bd29-a874-49a4-a453-ce34c8dabad6" type="checkbox" ><label for="9b87bd29-a874-49a4-a453-ce34c8dabad6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="315233ae-9312-468a-af8f-b2d228b96a85" type="checkbox" ><label for="315233ae-9312-468a-af8f-b2d228b96a85" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ed411a3-47cd-46fc-bcb5-ecd39cbacda0" type="checkbox" ><label for="2ed411a3-47cd-46fc-bcb5-ecd39cbacda0" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.087 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
