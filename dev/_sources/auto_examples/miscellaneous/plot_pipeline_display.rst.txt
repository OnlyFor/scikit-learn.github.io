
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eeba439d-72c9-4b03-a954-6be5cc67983c {color: black;background-color: white;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c pre{padding: 0;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-toggleable {background-color: white;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-estimator:hover {background-color: #d4ebff;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-item {z-index: 1;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-parallel-item:only-child::after {width: 0;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eeba439d-72c9-4b03-a954-6be5cc67983c div.sk-text-repr-fallback {display: none;}</style><div id="sk-eeba439d-72c9-4b03-a954-6be5cc67983c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79213f9d-711b-451b-a932-b344850d6b82" type="checkbox" ><label for="79213f9d-711b-451b-a932-b344850d6b82" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d410f51b-be95-4849-9fc2-2723691442e5" type="checkbox" ><label for="d410f51b-be95-4849-9fc2-2723691442e5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf1caa80-c8de-48a6-a748-5f1372c6792c" type="checkbox" ><label for="bf1caa80-c8de-48a6-a748-5f1372c6792c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 {color: black;background-color: white;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 pre{padding: 0;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-toggleable {background-color: white;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-item {z-index: 1;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-parallel-item:only-child::after {width: 0;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0688a59e-d7f9-482f-890e-e19466eaa1f2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0688a59e-d7f9-482f-890e-e19466eaa1f2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c28af17c-e91b-4ec4-8aaa-95b27cb55c45" type="checkbox" ><label for="c28af17c-e91b-4ec4-8aaa-95b27cb55c45" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21549815-1bc5-4cd2-bc98-a2fc2bc5c254" type="checkbox" ><label for="21549815-1bc5-4cd2-bc98-a2fc2bc5c254" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87f3625e-f6a7-4f0b-8a85-ff8e19422964" type="checkbox" ><label for="87f3625e-f6a7-4f0b-8a85-ff8e19422964" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d98cde6-a041-4717-a224-87d749ac8c78" type="checkbox" ><label for="2d98cde6-a041-4717-a224-87d749ac8c78" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b {color: black;background-color: white;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b pre{padding: 0;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-toggleable {background-color: white;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-estimator:hover {background-color: #d4ebff;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-item {z-index: 1;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-parallel-item:only-child::after {width: 0;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b div.sk-text-repr-fallback {display: none;}</style><div id="sk-316cf7df-9cb8-4c88-9d48-b7d48c26c85b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cc30806-2ac9-4be4-871d-2d0e0b228217" type="checkbox" ><label for="5cc30806-2ac9-4be4-871d-2d0e0b228217" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b749a780-7c52-407e-9311-591a66384c68" type="checkbox" ><label for="b749a780-7c52-407e-9311-591a66384c68" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b3afb43-422b-408d-9367-210e70ddc823" type="checkbox" ><label for="3b3afb43-422b-408d-9367-210e70ddc823" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 {color: black;background-color: white;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 pre{padding: 0;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-toggleable {background-color: white;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-item {z-index: 1;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-parallel-item:only-child::after {width: 0;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ef423f7c-c9b7-46a6-a25e-65fec63b3673" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39916c1f-d828-47b3-abb0-b29a48ff7499" type="checkbox" ><label for="39916c1f-d828-47b3-abb0-b29a48ff7499" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26f1bea3-8c7f-435b-bbe5-0af94f78499c" type="checkbox" ><label for="26f1bea3-8c7f-435b-bbe5-0af94f78499c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37399a13-94b0-480c-ade0-615c63ef9df6" type="checkbox" ><label for="37399a13-94b0-480c-ade0-615c63ef9df6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19b68bf4-223a-43ea-a633-ab82d5f2d06f" type="checkbox" ><label for="19b68bf4-223a-43ea-a633-ab82d5f2d06f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c97612c4-bac1-44a7-8425-357bd5ada9a0" type="checkbox" ><label for="c97612c4-bac1-44a7-8425-357bd5ada9a0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a0c6ae6-02f7-4b7b-be9d-92139d06d095" type="checkbox" ><label for="5a0c6ae6-02f7-4b7b-be9d-92139d06d095" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b92af33-0d76-42d9-8f06-83e836affffb" type="checkbox" ><label for="8b92af33-0d76-42d9-8f06-83e836affffb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77659584-b8e0-4577-bd4a-e049470fdf56" type="checkbox" ><label for="77659584-b8e0-4577-bd4a-e049470fdf56" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e635079-655b-4164-91ad-04fc245f29eb" type="checkbox" ><label for="6e635079-655b-4164-91ad-04fc245f29eb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 {color: black;background-color: white;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 pre{padding: 0;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-toggleable {background-color: white;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-item {z-index: 1;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-840ba9f3-dfb2-4b1c-bb64-b296da1c92d3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14841dd6-a85a-48f8-ad80-9e032b822580" type="checkbox" ><label for="14841dd6-a85a-48f8-ad80-9e032b822580" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34db41f8-84a3-4d0d-9330-0ad3b11c3f67" type="checkbox" ><label for="34db41f8-84a3-4d0d-9330-0ad3b11c3f67" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bed7ab9c-936d-4a04-93ab-6187a08dd3f8" type="checkbox" ><label for="bed7ab9c-936d-4a04-93ab-6187a08dd3f8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a537917f-b9a9-4f28-98a8-cce1faafd9a9" type="checkbox" ><label for="a537917f-b9a9-4f28-98a8-cce1faafd9a9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c7ba85a-f46f-43a4-a3a9-0c9e7d8fd762" type="checkbox" ><label for="0c7ba85a-f46f-43a4-a3a9-0c9e7d8fd762" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbe48632-3f77-4a46-bd5f-a80e7d93492d" type="checkbox" ><label for="dbe48632-3f77-4a46-bd5f-a80e7d93492d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17037848-88a9-45b4-9a60-c19fb5b8a054" type="checkbox" ><label for="17037848-88a9-45b4-9a60-c19fb5b8a054" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbf7599f-5b40-4d98-8be0-5c76bfb0e71c" type="checkbox" ><label for="cbf7599f-5b40-4d98-8be0-5c76bfb0e71c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b46e7b95-b792-4668-ad01-a0fad625f0c8" type="checkbox" ><label for="b46e7b95-b792-4668-ad01-a0fad625f0c8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
