
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 {color: black;background-color: white;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 pre{padding: 0;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-toggleable {background-color: white;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-item {z-index: 1;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-parallel-item:only-child::after {width: 0;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-container {display: inline-block;position: relative;}#sk-ab2b7bab-e7af-4c25-8382-f67256c69521 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab2b7bab-e7af-4c25-8382-f67256c69521" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a09425d-566e-4f19-9e88-40068615d699" type="checkbox" ><label class="sk-toggleable__label" for="3a09425d-566e-4f19-9e88-40068615d699">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa1026fa-e151-4d08-ad98-8694ca3a4af0" type="checkbox" ><label class="sk-toggleable__label" for="fa1026fa-e151-4d08-ad98-8694ca3a4af0">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ca506d9-fe9d-40de-a923-c2e5e6ccb7c8" type="checkbox" ><label class="sk-toggleable__label" for="0ca506d9-fe9d-40de-a923-c2e5e6ccb7c8">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-75a409b0-8471-46eb-a645-8886237d75d0 {color: black;background-color: white;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 pre{padding: 0;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-toggleable {background-color: white;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-item {z-index: 1;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-parallel-item:only-child::after {width: 0;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-container {display: inline-block;position: relative;}#sk-75a409b0-8471-46eb-a645-8886237d75d0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-75a409b0-8471-46eb-a645-8886237d75d0" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="631fc02c-d93c-489a-8d90-764c1e2ce00e" type="checkbox" ><label class="sk-toggleable__label" for="631fc02c-d93c-489a-8d90-764c1e2ce00e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ab768ce-3dfe-4d2f-b8d9-dbfd972fada2" type="checkbox" ><label class="sk-toggleable__label" for="0ab768ce-3dfe-4d2f-b8d9-dbfd972fada2">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1998e4a9-af2c-4467-a212-1f5a87e10983" type="checkbox" ><label class="sk-toggleable__label" for="1998e4a9-af2c-4467-a212-1f5a87e10983">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="600c5f94-390b-4f6f-99d0-940b8f6b8f84" type="checkbox" ><label class="sk-toggleable__label" for="600c5f94-390b-4f6f-99d0-940b8f6b8f84">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-00a8099a-fada-45b1-a533-089080367f7d {color: black;background-color: white;}#sk-00a8099a-fada-45b1-a533-089080367f7d pre{padding: 0;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-toggleable {background-color: white;}#sk-00a8099a-fada-45b1-a533-089080367f7d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-00a8099a-fada-45b1-a533-089080367f7d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00a8099a-fada-45b1-a533-089080367f7d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-estimator:hover {background-color: #d4ebff;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-item {z-index: 1;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-parallel-item:only-child::after {width: 0;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-container {display: inline-block;position: relative;}#sk-00a8099a-fada-45b1-a533-089080367f7d div.sk-text-repr-fallback {display: none;}</style><div id="sk-00a8099a-fada-45b1-a533-089080367f7d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39f2effb-bfab-4970-87d3-1ce1c5bdc06b" type="checkbox" ><label class="sk-toggleable__label" for="39f2effb-bfab-4970-87d3-1ce1c5bdc06b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e47bf1d-7325-402e-93fa-5b680625da47" type="checkbox" ><label class="sk-toggleable__label" for="8e47bf1d-7325-402e-93fa-5b680625da47">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca474462-f97b-4e06-b53b-e8a1680196f6" type="checkbox" ><label class="sk-toggleable__label" for="ca474462-f97b-4e06-b53b-e8a1680196f6">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0d4c512b-e191-479b-a763-e081d015a0f3 {color: black;background-color: white;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 pre{padding: 0;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-toggleable {background-color: white;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-item {z-index: 1;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-parallel-item:only-child::after {width: 0;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-container {display: inline-block;position: relative;}#sk-0d4c512b-e191-479b-a763-e081d015a0f3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0d4c512b-e191-479b-a763-e081d015a0f3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df172c88-7341-4148-a9f3-ac963d83e67d" type="checkbox" ><label class="sk-toggleable__label" for="df172c88-7341-4148-a9f3-ac963d83e67d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="621553ec-6861-46b7-8b0a-2e129e8f6831" type="checkbox" ><label class="sk-toggleable__label" for="621553ec-6861-46b7-8b0a-2e129e8f6831">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ea3e9ba-08f6-4402-bcee-518e6c18497a" type="checkbox" ><label class="sk-toggleable__label" for="4ea3e9ba-08f6-4402-bcee-518e6c18497a">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2315ab1-f940-4afb-b59a-5f414f578426" type="checkbox" ><label class="sk-toggleable__label" for="e2315ab1-f940-4afb-b59a-5f414f578426">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="047dfe4b-2edf-4266-8523-c1de56ddf73c" type="checkbox" ><label class="sk-toggleable__label" for="047dfe4b-2edf-4266-8523-c1de56ddf73c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="945fc520-8702-4633-981b-a92362d26060" type="checkbox" ><label class="sk-toggleable__label" for="945fc520-8702-4633-981b-a92362d26060">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31850186-6bc9-406f-94f8-05ddeaf36905" type="checkbox" ><label class="sk-toggleable__label" for="31850186-6bc9-406f-94f8-05ddeaf36905">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c054f37a-2250-448f-97c4-462d026d17b3" type="checkbox" ><label class="sk-toggleable__label" for="c054f37a-2250-448f-97c4-462d026d17b3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43393a5f-8824-42e2-8c94-8ee56446c490" type="checkbox" ><label class="sk-toggleable__label" for="43393a5f-8824-42e2-8c94-8ee56446c490">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a4e07e71-a8be-461f-931f-4254719a06b4 {color: black;background-color: white;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 pre{padding: 0;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-toggleable {background-color: white;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-item {z-index: 1;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-parallel-item:only-child::after {width: 0;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-container {display: inline-block;position: relative;}#sk-a4e07e71-a8be-461f-931f-4254719a06b4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a4e07e71-a8be-461f-931f-4254719a06b4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b96a1dcb-8bf5-418e-8dfc-2326eaeb2f34" type="checkbox" ><label class="sk-toggleable__label" for="b96a1dcb-8bf5-418e-8dfc-2326eaeb2f34">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d24f50b9-0e1d-4a8c-9053-6a4ac4f2bc32" type="checkbox" ><label class="sk-toggleable__label" for="d24f50b9-0e1d-4a8c-9053-6a4ac4f2bc32">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de48d59a-8819-4b28-b613-b9fe9260325c" type="checkbox" ><label class="sk-toggleable__label" for="de48d59a-8819-4b28-b613-b9fe9260325c">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a209600-7988-4829-9b7d-77b66bae2f07" type="checkbox" ><label class="sk-toggleable__label" for="7a209600-7988-4829-9b7d-77b66bae2f07">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6266e6b-e1e2-41ea-8029-9d2f6ec94241" type="checkbox" ><label class="sk-toggleable__label" for="b6266e6b-e1e2-41ea-8029-9d2f6ec94241">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f6e9291-f5cf-4340-bd20-0e0a99aff092" type="checkbox" ><label class="sk-toggleable__label" for="9f6e9291-f5cf-4340-bd20-0e0a99aff092">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81c98b2f-03a3-48cc-ac44-658515364077" type="checkbox" ><label class="sk-toggleable__label" for="81c98b2f-03a3-48cc-ac44-658515364077">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd2ebd6a-9bc5-470e-8781-520ddf0c456f" type="checkbox" ><label class="sk-toggleable__label" for="bd2ebd6a-9bc5-470e-8781-520ddf0c456f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e908015-c08a-4e30-a430-5be8f552355d" type="checkbox" ><label class="sk-toggleable__label" for="9e908015-c08a-4e30-a430-5be8f552355d">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.123 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
