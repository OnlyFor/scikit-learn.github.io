
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b {color: black;background-color: white;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b pre{padding: 0;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-toggleable {background-color: white;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-estimator:hover {background-color: #d4ebff;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-item {z-index: 1;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-parallel-item:only-child::after {width: 0;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b div.sk-text-repr-fallback {display: none;}</style><div id="sk-faec7b1b-5866-4eb3-95fc-d43d1f0bfe1b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67b45730-acab-4d04-8fb4-c4e2837fb606" type="checkbox" ><label for="67b45730-acab-4d04-8fb4-c4e2837fb606" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84df77e6-2b8d-41be-97b3-9c1193f342ab" type="checkbox" ><label for="84df77e6-2b8d-41be-97b3-9c1193f342ab" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cec16217-99d4-4296-abac-6ec2608c5d36" type="checkbox" ><label for="cec16217-99d4-4296-abac-6ec2608c5d36" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf988985-4f68-47d5-9a58-551b6c9504cc {color: black;background-color: white;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc pre{padding: 0;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-toggleable {background-color: white;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-item {z-index: 1;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-parallel-item:only-child::after {width: 0;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bf988985-4f68-47d5-9a58-551b6c9504cc div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf988985-4f68-47d5-9a58-551b6c9504cc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4294cc47-2df8-4d66-9b98-c8ec5212312c" type="checkbox" ><label for="4294cc47-2df8-4d66-9b98-c8ec5212312c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f7cbfa3-0135-448d-832f-ae1bf4c215d6" type="checkbox" ><label for="0f7cbfa3-0135-448d-832f-ae1bf4c215d6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35c47bb6-19f1-4210-bc91-f3a0404fb24b" type="checkbox" ><label for="35c47bb6-19f1-4210-bc91-f3a0404fb24b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5321ed47-01b2-432f-85e6-a09baf80c997" type="checkbox" ><label for="5321ed47-01b2-432f-85e6-a09baf80c997" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 {color: black;background-color: white;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 pre{padding: 0;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-toggleable {background-color: white;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-item {z-index: 1;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-parallel-item:only-child::after {width: 0;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3312f8e1-f4af-44ba-bcd0-e737070b6bb7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31a7850b-e3ac-4d22-98fa-267e31aa78f5" type="checkbox" ><label for="31a7850b-e3ac-4d22-98fa-267e31aa78f5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc375033-16ba-434a-8270-d8521c782392" type="checkbox" ><label for="dc375033-16ba-434a-8270-d8521c782392" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a9ad014-61dc-40f6-b55b-17b5a42d84ca" type="checkbox" ><label for="4a9ad014-61dc-40f6-b55b-17b5a42d84ca" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 {color: black;background-color: white;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 pre{padding: 0;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-toggleable {background-color: white;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-estimator:hover {background-color: #d4ebff;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-item {z-index: 1;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-parallel-item:only-child::after {width: 0;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-481bc7e5-9b60-4129-9380-fd59f9d1b257 div.sk-text-repr-fallback {display: none;}</style><div id="sk-481bc7e5-9b60-4129-9380-fd59f9d1b257" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b20a24a0-e1ba-4168-b735-b524510454a1" type="checkbox" ><label for="b20a24a0-e1ba-4168-b735-b524510454a1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afa7bca9-87ec-4da4-b4af-22e59aebf418" type="checkbox" ><label for="afa7bca9-87ec-4da4-b4af-22e59aebf418" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="132a7eab-c61e-4566-a56c-d936a0657c47" type="checkbox" ><label for="132a7eab-c61e-4566-a56c-d936a0657c47" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b828d58c-ac3f-462d-a522-a71aebad3a6b" type="checkbox" ><label for="b828d58c-ac3f-462d-a522-a71aebad3a6b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71bdd711-3998-4fad-acde-4028f89c9de9" type="checkbox" ><label for="71bdd711-3998-4fad-acde-4028f89c9de9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="085ba3bc-5ed1-487c-b8c7-7eaea5523644" type="checkbox" ><label for="085ba3bc-5ed1-487c-b8c7-7eaea5523644" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71b8bd9e-a652-45a4-a1e3-b149b4215852" type="checkbox" ><label for="71b8bd9e-a652-45a4-a1e3-b149b4215852" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdb2d6ca-d826-4696-95f1-2e64235d07be" type="checkbox" ><label for="bdb2d6ca-d826-4696-95f1-2e64235d07be" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98abc945-1da5-45d3-b60d-d4ff7cfe86cb" type="checkbox" ><label for="98abc945-1da5-45d3-b60d-d4ff7cfe86cb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 {color: black;background-color: white;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 pre{padding: 0;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-toggleable {background-color: white;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-item {z-index: 1;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-parallel-item:only-child::after {width: 0;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b66ecf4-f3c7-47f2-8e33-70a4766ef6d1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a2b482e-6034-4106-a6b2-6bb11eb57c95" type="checkbox" ><label for="5a2b482e-6034-4106-a6b2-6bb11eb57c95" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dc7540c-0fb6-4fb1-bb77-3e4e9b5e8e0e" type="checkbox" ><label for="0dc7540c-0fb6-4fb1-bb77-3e4e9b5e8e0e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43f929d5-95ea-4c6a-a585-053832a409f1" type="checkbox" ><label for="43f929d5-95ea-4c6a-a585-053832a409f1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ed7227d-addf-435a-ab9b-ab1b5a850346" type="checkbox" ><label for="5ed7227d-addf-435a-ab9b-ab1b5a850346" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddcad13e-72e7-4b06-b77a-6e92f939312a" type="checkbox" ><label for="ddcad13e-72e7-4b06-b77a-6e92f939312a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e6daf22-d607-459f-bc44-43fb50dce5b9" type="checkbox" ><label for="5e6daf22-d607-459f-bc44-43fb50dce5b9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d287b732-3f6e-4367-9a2b-60b6e62d86c6" type="checkbox" ><label for="d287b732-3f6e-4367-9a2b-60b6e62d86c6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c11af54e-ced6-4934-b0f8-485d07e34073" type="checkbox" ><label for="c11af54e-ced6-4934-b0f8-485d07e34073" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="706d8b18-4393-4535-b222-8f5bbbd0c162" type="checkbox" ><label for="706d8b18-4393-4535-b222-8f5bbbd0c162" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
