
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 {color: black;background-color: white;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 pre{padding: 0;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-toggleable {background-color: white;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-estimator:hover {background-color: #d4ebff;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-item {z-index: 1;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-parallel-item:only-child::after {width: 0;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850 div.sk-text-repr-fallback {display: none;}</style><div id="sk-384a11cf-1ca3-45b4-a504-3ae03eb3c850" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd6bf0b4-b032-4435-8c80-9debcde54cfa" type="checkbox" ><label for="fd6bf0b4-b032-4435-8c80-9debcde54cfa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27ef3c7d-3c52-4030-912d-a9f395b96392" type="checkbox" ><label for="27ef3c7d-3c52-4030-912d-a9f395b96392" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45769a56-e91a-4a2f-b5f4-f7e1be2052d4" type="checkbox" ><label for="45769a56-e91a-4a2f-b5f4-f7e1be2052d4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 {color: black;background-color: white;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 pre{padding: 0;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-toggleable {background-color: white;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-item {z-index: 1;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-parallel-item:only-child::after {width: 0;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2a691362-fe94-45a6-90e6-dfe95d8dd6c2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10408ff0-3eed-4720-b330-cc66006265f5" type="checkbox" ><label for="10408ff0-3eed-4720-b330-cc66006265f5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2ab17b8-174a-4d92-9229-c5f8f2137a99" type="checkbox" ><label for="c2ab17b8-174a-4d92-9229-c5f8f2137a99" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e05bf569-b8d2-45b2-8353-d9856cccc11b" type="checkbox" ><label for="e05bf569-b8d2-45b2-8353-d9856cccc11b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f34c81ed-fd6a-449f-9b36-cc20237fd228" type="checkbox" ><label for="f34c81ed-fd6a-449f-9b36-cc20237fd228" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 {color: black;background-color: white;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 pre{padding: 0;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-toggleable {background-color: white;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-item {z-index: 1;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-parallel-item:only-child::after {width: 0;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a52a413a-c1c7-42d2-b040-545d9508ca18 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a52a413a-c1c7-42d2-b040-545d9508ca18" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7a4d729-9aaa-461b-8d75-eae29ef7523c" type="checkbox" ><label for="b7a4d729-9aaa-461b-8d75-eae29ef7523c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="149e80b6-09d5-4e90-9c8d-054b81ae3b57" type="checkbox" ><label for="149e80b6-09d5-4e90-9c8d-054b81ae3b57" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="921d9cbd-dab0-43fd-824d-5d418f04acfe" type="checkbox" ><label for="921d9cbd-dab0-43fd-824d-5d418f04acfe" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 {color: black;background-color: white;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 pre{padding: 0;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-toggleable {background-color: white;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-item {z-index: 1;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-parallel-item:only-child::after {width: 0;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1bdebd98-7440-4627-8ebe-145eb72899f3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1bdebd98-7440-4627-8ebe-145eb72899f3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9db1c73-6d16-41a5-9da0-651fdd39072b" type="checkbox" ><label for="d9db1c73-6d16-41a5-9da0-651fdd39072b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97ea153f-24ec-40b1-b5ee-68c4b1f0b73a" type="checkbox" ><label for="97ea153f-24ec-40b1-b5ee-68c4b1f0b73a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c3adcaf-0871-4a59-a65f-2937f1c1d3c5" type="checkbox" ><label for="3c3adcaf-0871-4a59-a65f-2937f1c1d3c5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90fd6a26-2287-412b-8c3c-e78c291fba5c" type="checkbox" ><label for="90fd6a26-2287-412b-8c3c-e78c291fba5c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d001c0c2-4759-4de3-a998-41ac5b94f3d3" type="checkbox" ><label for="d001c0c2-4759-4de3-a998-41ac5b94f3d3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67477a00-c8bf-4fb8-9920-170adbeb42d9" type="checkbox" ><label for="67477a00-c8bf-4fb8-9920-170adbeb42d9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f29f38b2-2181-4301-a578-537a67dd2dd9" type="checkbox" ><label for="f29f38b2-2181-4301-a578-537a67dd2dd9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0d19df0-09e8-4d69-b472-3bdb7738d7a2" type="checkbox" ><label for="a0d19df0-09e8-4d69-b472-3bdb7738d7a2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68cac276-1d5c-4266-9780-bb580b3dcaed" type="checkbox" ><label for="68cac276-1d5c-4266-9780-bb580b3dcaed" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b {color: black;background-color: white;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b pre{padding: 0;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-toggleable {background-color: white;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-estimator:hover {background-color: #d4ebff;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-item {z-index: 1;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-parallel-item:only-child::after {width: 0;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7c74f690-9120-41c0-a904-5efa0fc96c1b div.sk-text-repr-fallback {display: none;}</style><div id="sk-7c74f690-9120-41c0-a904-5efa0fc96c1b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="895f3cbc-9f18-4a1a-881e-ef1c0279401b" type="checkbox" ><label for="895f3cbc-9f18-4a1a-881e-ef1c0279401b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5011876-3de4-4329-aa46-3c67fbf09c72" type="checkbox" ><label for="e5011876-3de4-4329-aa46-3c67fbf09c72" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1449192f-43a2-4768-9c84-c64e19ec6bc5" type="checkbox" ><label for="1449192f-43a2-4768-9c84-c64e19ec6bc5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="617fa38a-4c5f-4948-961f-aade5046ae3f" type="checkbox" ><label for="617fa38a-4c5f-4948-961f-aade5046ae3f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9aa1c111-8fdc-424d-920c-b24c7122a0e4" type="checkbox" ><label for="9aa1c111-8fdc-424d-920c-b24c7122a0e4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24779f73-38ea-4f99-b652-d04e0e5c4c60" type="checkbox" ><label for="24779f73-38ea-4f99-b652-d04e0e5c4c60" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab05b0f3-4456-4eb8-872a-7bba3233198b" type="checkbox" ><label for="ab05b0f3-4456-4eb8-872a-7bba3233198b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14410d24-5260-4cd6-99bf-46aa0b9df198" type="checkbox" ><label for="14410d24-5260-4cd6-99bf-46aa0b9df198" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a56c827a-06b8-4c95-b39e-a6e1d5e50f1a" type="checkbox" ><label for="a56c827a-06b8-4c95-b39e-a6e1d5e50f1a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
