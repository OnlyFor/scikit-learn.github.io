
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b {color: black;background-color: white;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b pre{padding: 0;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-toggleable {background-color: white;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-estimator:hover {background-color: #d4ebff;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-item {z-index: 1;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-parallel-item:only-child::after {width: 0;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b div.sk-text-repr-fallback {display: none;}</style><div id="sk-ef899ca4-9293-40c8-b383-4cd5edd86e1b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc6f07f8-3446-400d-bb0e-0f9f6487bfa8" type="checkbox" ><label for="cc6f07f8-3446-400d-bb0e-0f9f6487bfa8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="457d8a2b-c518-47d7-89c7-4cab8536c963" type="checkbox" ><label for="457d8a2b-c518-47d7-89c7-4cab8536c963" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f0dba7b-8ed6-4b94-8328-e710316f5c96" type="checkbox" ><label for="7f0dba7b-8ed6-4b94-8328-e710316f5c96" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 {color: black;background-color: white;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 pre{padding: 0;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-toggleable {background-color: white;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-item {z-index: 1;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-parallel-item:only-child::after {width: 0;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5c1c4d17-31b8-4927-9f74-9538d24f2cc5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af61e1d7-ed65-4720-8681-ad9f0b79b2b6" type="checkbox" ><label for="af61e1d7-ed65-4720-8681-ad9f0b79b2b6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9be5398e-9869-497c-b27d-b0268333bf26" type="checkbox" ><label for="9be5398e-9869-497c-b27d-b0268333bf26" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9233b04b-1a55-4815-83f6-3c125d6af2cf" type="checkbox" ><label for="9233b04b-1a55-4815-83f6-3c125d6af2cf" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d9aa10f-dacf-48ac-908a-5b29095fd293" type="checkbox" ><label for="1d9aa10f-dacf-48ac-908a-5b29095fd293" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 {color: black;background-color: white;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 pre{padding: 0;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-toggleable {background-color: white;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-item {z-index: 1;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-parallel-item:only-child::after {width: 0;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c81b14ed-6881-40c1-b1e7-edca0edae263 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c81b14ed-6881-40c1-b1e7-edca0edae263" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="970a67cc-8350-4fe1-9f73-53f402157522" type="checkbox" ><label for="970a67cc-8350-4fe1-9f73-53f402157522" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="978cea1b-a8db-4fe8-b806-caa8e1899b0c" type="checkbox" ><label for="978cea1b-a8db-4fe8-b806-caa8e1899b0c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdba4f66-eb57-433d-b965-11e61de02a6c" type="checkbox" ><label for="cdba4f66-eb57-433d-b965-11e61de02a6c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-655a535b-23e9-4638-bd54-d21134b22bbc {color: black;background-color: white;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc pre{padding: 0;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-toggleable {background-color: white;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-estimator:hover {background-color: #d4ebff;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-item {z-index: 1;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-parallel-item:only-child::after {width: 0;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-655a535b-23e9-4638-bd54-d21134b22bbc div.sk-text-repr-fallback {display: none;}</style><div id="sk-655a535b-23e9-4638-bd54-d21134b22bbc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d57aed94-d736-4cfc-8835-4105d5dcedbe" type="checkbox" ><label for="d57aed94-d736-4cfc-8835-4105d5dcedbe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b376d404-ec0e-4da5-9510-812aa586877a" type="checkbox" ><label for="b376d404-ec0e-4da5-9510-812aa586877a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36c988ed-b5e6-4828-a727-3e6ae2fe921b" type="checkbox" ><label for="36c988ed-b5e6-4828-a727-3e6ae2fe921b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23514170-2d54-47e5-9043-dff986d76f53" type="checkbox" ><label for="23514170-2d54-47e5-9043-dff986d76f53" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3cddab7-7464-4d66-b368-333514d6b073" type="checkbox" ><label for="a3cddab7-7464-4d66-b368-333514d6b073" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e51bd95-b206-4f15-bcc6-6d524d7862e5" type="checkbox" ><label for="9e51bd95-b206-4f15-bcc6-6d524d7862e5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="353deff3-90a5-4247-b100-30819c1c5021" type="checkbox" ><label for="353deff3-90a5-4247-b100-30819c1c5021" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dcb23a4-6bce-4687-a7d4-49da2a8d14ba" type="checkbox" ><label for="0dcb23a4-6bce-4687-a7d4-49da2a8d14ba" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="338c2475-d005-4dd7-b547-e852ad3d24c0" type="checkbox" ><label for="338c2475-d005-4dd7-b547-e852ad3d24c0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2a09c27a-d501-4322-8e85-39e8143ef038 {color: black;background-color: white;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 pre{padding: 0;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-toggleable {background-color: white;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-item {z-index: 1;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-parallel-item:only-child::after {width: 0;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2a09c27a-d501-4322-8e85-39e8143ef038 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2a09c27a-d501-4322-8e85-39e8143ef038" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04538202-ec05-46f0-ba87-e65c0df73735" type="checkbox" ><label for="04538202-ec05-46f0-ba87-e65c0df73735" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="165e6f84-708d-4053-9b4d-8a6358f2af70" type="checkbox" ><label for="165e6f84-708d-4053-9b4d-8a6358f2af70" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdb88391-dba2-4263-b220-602343441d56" type="checkbox" ><label for="fdb88391-dba2-4263-b220-602343441d56" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06c68a12-887e-44c0-aa63-278a8dca4315" type="checkbox" ><label for="06c68a12-887e-44c0-aa63-278a8dca4315" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6dd856e-c585-43a0-b941-0f09fd21285b" type="checkbox" ><label for="d6dd856e-c585-43a0-b941-0f09fd21285b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb945101-5d76-44bc-acb2-fa12d6b38b9f" type="checkbox" ><label for="cb945101-5d76-44bc-acb2-fa12d6b38b9f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f16fe2e-9717-4e1f-b80f-2b389206e57b" type="checkbox" ><label for="6f16fe2e-9717-4e1f-b80f-2b389206e57b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="952ef72f-19ca-4637-906d-73b90e0a1f76" type="checkbox" ><label for="952ef72f-19ca-4637-906d-73b90e0a1f76" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee379511-5348-4cfd-86d7-905e8516e4da" type="checkbox" ><label for="ee379511-5348-4cfd-86d7-905e8516e4da" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
