
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 {color: black;background-color: white;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 pre{padding: 0;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-toggleable {background-color: white;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-item {z-index: 1;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-693bd734-9c10-4753-a4ca-b36709bf87d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-693bd734-9c10-4753-a4ca-b36709bf87d7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="179984af-36db-4147-b8e6-97585323e903" type="checkbox" ><label for="179984af-36db-4147-b8e6-97585323e903" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="515d10cb-e8ad-4a44-95f9-dea722aab5c0" type="checkbox" ><label for="515d10cb-e8ad-4a44-95f9-dea722aab5c0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="095e9cdd-e098-4c5f-a3e6-5795bbda6c5a" type="checkbox" ><label for="095e9cdd-e098-4c5f-a3e6-5795bbda6c5a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 {color: black;background-color: white;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 pre{padding: 0;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-toggleable {background-color: white;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-estimator:hover {background-color: #d4ebff;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-item {z-index: 1;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-parallel-item:only-child::after {width: 0;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-098741b6-8ffb-451f-8ba1-dbb55325f583 div.sk-text-repr-fallback {display: none;}</style><div id="sk-098741b6-8ffb-451f-8ba1-dbb55325f583" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df17048d-c7f7-4e1a-a6ba-e57be583f5f5" type="checkbox" ><label for="df17048d-c7f7-4e1a-a6ba-e57be583f5f5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50b7ba61-b6b3-498b-98f8-c282116354f6" type="checkbox" ><label for="50b7ba61-b6b3-498b-98f8-c282116354f6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ddc9c76-ed4f-4d42-9bf2-da535bc1c252" type="checkbox" ><label for="7ddc9c76-ed4f-4d42-9bf2-da535bc1c252" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db284d77-647f-4f4a-9097-ea171fad767f" type="checkbox" ><label for="db284d77-647f-4f4a-9097-ea171fad767f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-514fe528-0a86-44b0-9ed4-b844137b93ca {color: black;background-color: white;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca pre{padding: 0;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-toggleable {background-color: white;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-item {z-index: 1;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-parallel-item:only-child::after {width: 0;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-514fe528-0a86-44b0-9ed4-b844137b93ca div.sk-text-repr-fallback {display: none;}</style><div id="sk-514fe528-0a86-44b0-9ed4-b844137b93ca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e18dbb3-8bf7-4b66-92f4-2e8bd8e66233" type="checkbox" ><label for="9e18dbb3-8bf7-4b66-92f4-2e8bd8e66233" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13b60996-f995-4e00-bd5e-b43dd23480df" type="checkbox" ><label for="13b60996-f995-4e00-bd5e-b43dd23480df" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="761c04f9-162c-446c-bd47-4d32deca0567" type="checkbox" ><label for="761c04f9-162c-446c-bd47-4d32deca0567" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 {color: black;background-color: white;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 pre{padding: 0;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-toggleable {background-color: white;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-item {z-index: 1;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-parallel-item:only-child::after {width: 0;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6776e4ec-1bc9-4e69-8875-9a71740ba881 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6776e4ec-1bc9-4e69-8875-9a71740ba881" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ecc5c0c-71ef-4dbc-9ba9-ccca8bfc1eb6" type="checkbox" ><label for="0ecc5c0c-71ef-4dbc-9ba9-ccca8bfc1eb6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee15a50b-d55a-45bb-b906-6ec28efcb931" type="checkbox" ><label for="ee15a50b-d55a-45bb-b906-6ec28efcb931" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45fcec47-f88b-4128-bae3-d6d528ca61b8" type="checkbox" ><label for="45fcec47-f88b-4128-bae3-d6d528ca61b8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0616b7f2-d019-43b3-9ace-7468550d00c2" type="checkbox" ><label for="0616b7f2-d019-43b3-9ace-7468550d00c2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00c7479d-4bc3-491b-a99c-323dad4cac87" type="checkbox" ><label for="00c7479d-4bc3-491b-a99c-323dad4cac87" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="920add0d-f643-4072-ad1b-74245d3c39ba" type="checkbox" ><label for="920add0d-f643-4072-ad1b-74245d3c39ba" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38a92dd1-6939-4f24-b0c9-3c5fdb07d93c" type="checkbox" ><label for="38a92dd1-6939-4f24-b0c9-3c5fdb07d93c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43b2f3f0-d07b-4a3e-82c6-a74b176a05ac" type="checkbox" ><label for="43b2f3f0-d07b-4a3e-82c6-a74b176a05ac" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0032f08e-256f-4313-987c-acf220d8c4ea" type="checkbox" ><label for="0032f08e-256f-4313-987c-acf220d8c4ea" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 {color: black;background-color: white;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 pre{padding: 0;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-toggleable {background-color: white;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-item {z-index: 1;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-parallel-item:only-child::after {width: 0;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-884c7ac5-66f9-41e6-b996-8645b3202bb7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-884c7ac5-66f9-41e6-b996-8645b3202bb7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19e9b677-f065-4bba-9aa0-103d20566d84" type="checkbox" ><label for="19e9b677-f065-4bba-9aa0-103d20566d84" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50a8b483-aa70-4d59-a0d4-789fc8899d6b" type="checkbox" ><label for="50a8b483-aa70-4d59-a0d4-789fc8899d6b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acd2c429-acee-46ef-80bd-46cc6d2ca5ef" type="checkbox" ><label for="acd2c429-acee-46ef-80bd-46cc6d2ca5ef" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a18a0257-704c-4dee-9558-72444f0bb5e3" type="checkbox" ><label for="a18a0257-704c-4dee-9558-72444f0bb5e3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e5e29a2-0d6e-452d-affc-95a9b6cda164" type="checkbox" ><label for="5e5e29a2-0d6e-452d-affc-95a9b6cda164" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79705fdf-1692-4c35-9127-77ee1ca501b1" type="checkbox" ><label for="79705fdf-1692-4c35-9127-77ee1ca501b1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ff84935-b612-402b-97ff-1d235c0f168b" type="checkbox" ><label for="4ff84935-b612-402b-97ff-1d235c0f168b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d391dbf-0df9-42bb-af5a-bc2e7fd35398" type="checkbox" ><label for="8d391dbf-0df9-42bb-af5a-bc2e7fd35398" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b2705b4-5927-42a2-943a-0eea747a92f5" type="checkbox" ><label for="4b2705b4-5927-42a2-943a-0eea747a92f5" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
