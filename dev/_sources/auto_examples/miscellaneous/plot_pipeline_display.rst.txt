
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f {color: black;background-color: white;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f pre{padding: 0;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-toggleable {background-color: white;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-estimator:hover {background-color: #d4ebff;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-item {z-index: 1;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-parallel-item:only-child::after {width: 0;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f div.sk-text-repr-fallback {display: none;}</style><div id="sk-479ffc5c-eed0-4252-9181-9e08fa91bb1f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93b5aeee-bd02-446e-ba30-4500849c01e9" type="checkbox" ><label for="93b5aeee-bd02-446e-ba30-4500849c01e9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ee5d672-400d-42d7-86dc-98af073955ee" type="checkbox" ><label for="3ee5d672-400d-42d7-86dc-98af073955ee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34e22c9e-5ed6-44c5-beb9-8809bfe89904" type="checkbox" ><label for="34e22c9e-5ed6-44c5-beb9-8809bfe89904" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 {color: black;background-color: white;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 pre{padding: 0;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-toggleable {background-color: white;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-item {z-index: 1;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-parallel-item:only-child::after {width: 0;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d633ac8c-aa74-4282-a5f4-aefd6a32c025" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b39c30d-be91-4d88-b21e-5059ea53fba2" type="checkbox" ><label for="5b39c30d-be91-4d88-b21e-5059ea53fba2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b21611d-9010-499f-95ad-ce70b37bd7f6" type="checkbox" ><label for="6b21611d-9010-499f-95ad-ce70b37bd7f6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0745cde-df69-409a-89a0-c6a84dcb77a1" type="checkbox" ><label for="b0745cde-df69-409a-89a0-c6a84dcb77a1" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afbcafb1-3ed2-4255-8514-8e0342f53b57" type="checkbox" ><label for="afbcafb1-3ed2-4255-8514-8e0342f53b57" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7445dba1-f611-4b05-a370-d78f694408c2 {color: black;background-color: white;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 pre{padding: 0;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-toggleable {background-color: white;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-item {z-index: 1;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-parallel-item:only-child::after {width: 0;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7445dba1-f611-4b05-a370-d78f694408c2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7445dba1-f611-4b05-a370-d78f694408c2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f3262e0-6efd-4d59-a905-0afa682e68e2" type="checkbox" ><label for="4f3262e0-6efd-4d59-a905-0afa682e68e2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3fe82de-c5a3-4bfc-8cc8-7695aa69291a" type="checkbox" ><label for="b3fe82de-c5a3-4bfc-8cc8-7695aa69291a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd8fc7a9-c0d4-43ed-9ef2-c70849a225c6" type="checkbox" ><label for="cd8fc7a9-c0d4-43ed-9ef2-c70849a225c6" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-00b50e52-123a-4d47-9505-146916b3d251 {color: black;background-color: white;}#sk-00b50e52-123a-4d47-9505-146916b3d251 pre{padding: 0;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-toggleable {background-color: white;}#sk-00b50e52-123a-4d47-9505-146916b3d251 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-00b50e52-123a-4d47-9505-146916b3d251 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-00b50e52-123a-4d47-9505-146916b3d251 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-00b50e52-123a-4d47-9505-146916b3d251 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-00b50e52-123a-4d47-9505-146916b3d251 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00b50e52-123a-4d47-9505-146916b3d251 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-estimator:hover {background-color: #d4ebff;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-item {z-index: 1;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-parallel-item:only-child::after {width: 0;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-00b50e52-123a-4d47-9505-146916b3d251 div.sk-text-repr-fallback {display: none;}</style><div id="sk-00b50e52-123a-4d47-9505-146916b3d251" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb18ccd6-6677-4d62-82b9-70165cd6b884" type="checkbox" ><label for="fb18ccd6-6677-4d62-82b9-70165cd6b884" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="994af46d-3a54-4b3d-844e-ddf20904add7" type="checkbox" ><label for="994af46d-3a54-4b3d-844e-ddf20904add7" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a98bad3d-75f0-4d7b-9fa5-336f0d2f4eb4" type="checkbox" ><label for="a98bad3d-75f0-4d7b-9fa5-336f0d2f4eb4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0c9f5d8-c059-4cf2-bf34-e522d1338aef" type="checkbox" ><label for="e0c9f5d8-c059-4cf2-bf34-e522d1338aef" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e62e8cc-f9b2-4cc8-9364-dda7ecba19a0" type="checkbox" ><label for="2e62e8cc-f9b2-4cc8-9364-dda7ecba19a0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a16537f7-cf39-405e-a3c0-efd0bdccf091" type="checkbox" ><label for="a16537f7-cf39-405e-a3c0-efd0bdccf091" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d3c60f9-06fc-46a2-8577-c1da636b81bc" type="checkbox" ><label for="7d3c60f9-06fc-46a2-8577-c1da636b81bc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dd553dc-7a2b-4d38-a8de-48a44b02a324" type="checkbox" ><label for="6dd553dc-7a2b-4d38-a8de-48a44b02a324" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2afc1333-2baf-4bd1-954e-6e0090da2fc1" type="checkbox" ><label for="2afc1333-2baf-4bd1-954e-6e0090da2fc1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a {color: black;background-color: white;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a pre{padding: 0;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-toggleable {background-color: white;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-estimator:hover {background-color: #d4ebff;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-item {z-index: 1;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-parallel-item:only-child::after {width: 0;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a div.sk-text-repr-fallback {display: none;}</style><div id="sk-e7394b4f-d8df-4813-8ad8-40d50c5c1a1a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7e81b24-ae7f-4263-9aef-3c6b1f946fff" type="checkbox" ><label for="d7e81b24-ae7f-4263-9aef-3c6b1f946fff" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f2d172c-8a02-4383-8b3e-f84eb20e744c" type="checkbox" ><label for="9f2d172c-8a02-4383-8b3e-f84eb20e744c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d51f087-3862-4024-ba37-a51d4b870c02" type="checkbox" ><label for="3d51f087-3862-4024-ba37-a51d4b870c02" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f226198-1e79-43b3-bbdb-6aa583841caa" type="checkbox" ><label for="2f226198-1e79-43b3-bbdb-6aa583841caa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec70003e-60c4-4a79-ad58-3bc3628112db" type="checkbox" ><label for="ec70003e-60c4-4a79-ad58-3bc3628112db" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6e31d16-381c-41cd-9d77-13b7c6d8534b" type="checkbox" ><label for="f6e31d16-381c-41cd-9d77-13b7c6d8534b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="809b596f-1c3e-4d50-b69f-364c1e6bbbe8" type="checkbox" ><label for="809b596f-1c3e-4d50-b69f-364c1e6bbbe8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aed7c01b-4dda-4612-a26d-5d3427067e47" type="checkbox" ><label for="aed7c01b-4dda-4612-a26d-5d3427067e47" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50ca961e-c769-4ca0-be2d-07f35c6fb854" type="checkbox" ><label for="50ca961e-c769-4ca0-be2d-07f35c6fb854" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
