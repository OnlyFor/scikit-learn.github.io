
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 {color: black;background-color: white;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 pre{padding: 0;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-toggleable {background-color: white;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-estimator:hover {background-color: #d4ebff;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-item {z-index: 1;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-parallel-item:only-child::after {width: 0;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859 div.sk-text-repr-fallback {display: none;}</style><div id="sk-81f508b2-1b87-48b8-9538-0b7e3c8e5859" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b2a6f2e-a253-4164-befb-984f9ffdbfbf" type="checkbox" ><label for="4b2a6f2e-a253-4164-befb-984f9ffdbfbf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd212277-208a-4524-85a4-1724e8e0f39b" type="checkbox" ><label for="fd212277-208a-4524-85a4-1724e8e0f39b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65a841b0-8c88-418a-a49c-250f19965594" type="checkbox" ><label for="65a841b0-8c88-418a-a49c-250f19965594" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 {color: black;background-color: white;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 pre{padding: 0;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-toggleable {background-color: white;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-item {z-index: 1;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-parallel-item:only-child::after {width: 0;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a6b3da48-f481-439d-be41-0ced6c9cbf96 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a6b3da48-f481-439d-be41-0ced6c9cbf96" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b1c3611-9d8f-46ca-8c42-1d6b3ddacca9" type="checkbox" ><label for="4b1c3611-9d8f-46ca-8c42-1d6b3ddacca9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2302e1c-a4d9-4878-8688-a4c7543cb5b9" type="checkbox" ><label for="b2302e1c-a4d9-4878-8688-a4c7543cb5b9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a5c0001-add6-4dd6-b44e-8d8b83e49c9f" type="checkbox" ><label for="6a5c0001-add6-4dd6-b44e-8d8b83e49c9f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d367b97b-b854-42e3-ba8e-dee94c6d463e" type="checkbox" ><label for="d367b97b-b854-42e3-ba8e-dee94c6d463e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 {color: black;background-color: white;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 pre{padding: 0;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-toggleable {background-color: white;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-item {z-index: 1;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-parallel-item:only-child::after {width: 0;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a14ff8a-9942-43fd-820e-d4b5bb6ed7e4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee417b8f-f4e6-4ccf-b9b2-7fdef29ad3d8" type="checkbox" ><label for="ee417b8f-f4e6-4ccf-b9b2-7fdef29ad3d8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e90f7f31-772f-4056-9238-1e43765609ae" type="checkbox" ><label for="e90f7f31-772f-4056-9238-1e43765609ae" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed8cf43f-4647-4bfc-9261-310e932f5af1" type="checkbox" ><label for="ed8cf43f-4647-4bfc-9261-310e932f5af1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a {color: black;background-color: white;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a pre{padding: 0;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-toggleable {background-color: white;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-estimator:hover {background-color: #d4ebff;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-item {z-index: 1;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-parallel-item:only-child::after {width: 0;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a div.sk-text-repr-fallback {display: none;}</style><div id="sk-fc251ea4-d791-4d4a-a187-ee73e81e9b9a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5f1066f-0180-4a0f-a14a-9bd126a50bd0" type="checkbox" ><label for="b5f1066f-0180-4a0f-a14a-9bd126a50bd0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f699f63-ea8e-458b-99c9-ccdaf02fc4ec" type="checkbox" ><label for="4f699f63-ea8e-458b-99c9-ccdaf02fc4ec" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90f7e094-10f9-4eb4-a1f6-8e896c5ce20d" type="checkbox" ><label for="90f7e094-10f9-4eb4-a1f6-8e896c5ce20d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6262302c-d2fb-4714-9f6e-d3f9511ec57c" type="checkbox" ><label for="6262302c-d2fb-4714-9f6e-d3f9511ec57c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9879e15b-e795-45d8-a6ff-eac9a89d3168" type="checkbox" ><label for="9879e15b-e795-45d8-a6ff-eac9a89d3168" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="664114a9-ad60-44a3-bc5b-36c43c25a543" type="checkbox" ><label for="664114a9-ad60-44a3-bc5b-36c43c25a543" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddd68bcf-5235-4a93-b762-5476f0145885" type="checkbox" ><label for="ddd68bcf-5235-4a93-b762-5476f0145885" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08c9f711-3385-467b-ad54-ab53033c9130" type="checkbox" ><label for="08c9f711-3385-467b-ad54-ab53033c9130" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fade8fa7-3068-4098-a670-e21835ab1a7d" type="checkbox" ><label for="fade8fa7-3068-4098-a670-e21835ab1a7d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 {color: black;background-color: white;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 pre{padding: 0;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-toggleable {background-color: white;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-item {z-index: 1;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-parallel-item:only-child::after {width: 0;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8e27e7b7-82e2-458d-91ff-8726fa13ce63" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="160d4927-7ef0-41c2-a789-67fc65485b33" type="checkbox" ><label for="160d4927-7ef0-41c2-a789-67fc65485b33" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8eee59f7-89e9-4ddb-868d-b0fd88911003" type="checkbox" ><label for="8eee59f7-89e9-4ddb-868d-b0fd88911003" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21a2290a-2952-42d4-a03b-10aaac436492" type="checkbox" ><label for="21a2290a-2952-42d4-a03b-10aaac436492" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="991ba0e7-8d29-436d-8080-488e94798e7b" type="checkbox" ><label for="991ba0e7-8d29-436d-8080-488e94798e7b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8877161c-175c-4217-a08e-d2880caaf734" type="checkbox" ><label for="8877161c-175c-4217-a08e-d2880caaf734" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9068b99-28c2-4193-9777-a64cbe18338a" type="checkbox" ><label for="e9068b99-28c2-4193-9777-a64cbe18338a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d982402-85d7-4a8d-a37a-f6b38cbf0398" type="checkbox" ><label for="6d982402-85d7-4a8d-a37a-f6b38cbf0398" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e7da69d-5501-4d1a-8521-86decd01095c" type="checkbox" ><label for="1e7da69d-5501-4d1a-8521-86decd01095c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7b374df-fa2e-4572-962f-c4c89cc5a025" type="checkbox" ><label for="c7b374df-fa2e-4572-962f-c4c89cc5a025" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
