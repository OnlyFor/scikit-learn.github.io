
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 {color: black;background-color: white;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 pre{padding: 0;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-toggleable {background-color: white;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-item {z-index: 1;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-parallel-item:only-child::after {width: 0;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d2f3bbb6-a377-431f-b0aa-5fb05c619a89" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b86b9ec-5a5c-4f2b-b5d2-43cf819f5594" type="checkbox" ><label for="2b86b9ec-5a5c-4f2b-b5d2-43cf819f5594" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c147ba19-4886-4e98-bd73-ddcca76ec69b" type="checkbox" ><label for="c147ba19-4886-4e98-bd73-ddcca76ec69b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e095e4d-7446-485e-ba89-4974e329edbd" type="checkbox" ><label for="7e095e4d-7446-485e-ba89-4974e329edbd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-da1734fb-68b4-4705-a59c-adb876961f19 {color: black;background-color: white;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 pre{padding: 0;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-toggleable {background-color: white;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-estimator:hover {background-color: #d4ebff;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-item {z-index: 1;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-parallel-item:only-child::after {width: 0;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-da1734fb-68b4-4705-a59c-adb876961f19 div.sk-text-repr-fallback {display: none;}</style><div id="sk-da1734fb-68b4-4705-a59c-adb876961f19" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c07a19a-6fcb-4ab7-94d2-e3950ec066a1" type="checkbox" ><label for="4c07a19a-6fcb-4ab7-94d2-e3950ec066a1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c9ac0ac-6136-4040-a336-d3e20bec1f84" type="checkbox" ><label for="0c9ac0ac-6136-4040-a336-d3e20bec1f84" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2db83b9d-5b3d-42df-8ee0-5e7422aaafe6" type="checkbox" ><label for="2db83b9d-5b3d-42df-8ee0-5e7422aaafe6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2403520d-5093-4cb0-9a1e-787783615f07" type="checkbox" ><label for="2403520d-5093-4cb0-9a1e-787783615f07" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 {color: black;background-color: white;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 pre{padding: 0;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-toggleable {background-color: white;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-item {z-index: 1;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-parallel-item:only-child::after {width: 0;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5527c2f0-b3d9-4fa8-a58e-e9955ebaa840" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee8ead89-5666-40b5-8681-4feb577885f0" type="checkbox" ><label for="ee8ead89-5666-40b5-8681-4feb577885f0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc18f3a6-2ca6-488a-ab8e-1e4d1a410cc6" type="checkbox" ><label for="cc18f3a6-2ca6-488a-ab8e-1e4d1a410cc6" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30cfcf29-d8c5-4468-bece-9b905105bcc7" type="checkbox" ><label for="30cfcf29-d8c5-4468-bece-9b905105bcc7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 {color: black;background-color: white;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 pre{padding: 0;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-toggleable {background-color: white;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-estimator:hover {background-color: #d4ebff;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-item {z-index: 1;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-parallel-item:only-child::after {width: 0;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-59c17429-17d8-49f5-8e93-896ce07a6f47 div.sk-text-repr-fallback {display: none;}</style><div id="sk-59c17429-17d8-49f5-8e93-896ce07a6f47" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa7702b1-bd14-4997-ab2e-a0fdfb2622ac" type="checkbox" ><label for="fa7702b1-bd14-4997-ab2e-a0fdfb2622ac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93d0847e-0fd1-4916-ba60-825dcc5a371f" type="checkbox" ><label for="93d0847e-0fd1-4916-ba60-825dcc5a371f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6946bb11-7e92-44a8-a236-89ff971e768f" type="checkbox" ><label for="6946bb11-7e92-44a8-a236-89ff971e768f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bda328c-fe8f-4e4e-9f82-56de49aba487" type="checkbox" ><label for="6bda328c-fe8f-4e4e-9f82-56de49aba487" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e388f905-3fc8-41ea-ac40-9dd5f99e6a15" type="checkbox" ><label for="e388f905-3fc8-41ea-ac40-9dd5f99e6a15" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f844db9-a82c-4d9b-9fe1-eae9c9e47e19" type="checkbox" ><label for="1f844db9-a82c-4d9b-9fe1-eae9c9e47e19" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4869999-6ffc-42ed-9d7a-32d481d192d7" type="checkbox" ><label for="a4869999-6ffc-42ed-9d7a-32d481d192d7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f276df80-fb4f-44d8-ac7c-291072687a47" type="checkbox" ><label for="f276df80-fb4f-44d8-ac7c-291072687a47" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e69e3c08-8f15-47b2-9247-1e95e06da2a2" type="checkbox" ><label for="e69e3c08-8f15-47b2-9247-1e95e06da2a2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 {color: black;background-color: white;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 pre{padding: 0;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-toggleable {background-color: white;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-item {z-index: 1;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-parallel-item:only-child::after {width: 0;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3650f2fb-a38b-4b75-ac6f-f7704bb44615" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1bbdd4a-6811-441a-ac26-1e00206750f3" type="checkbox" ><label for="e1bbdd4a-6811-441a-ac26-1e00206750f3" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58b94b0a-ca41-4d4b-97a3-88b757d4d323" type="checkbox" ><label for="58b94b0a-ca41-4d4b-97a3-88b757d4d323" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="191bb370-89dc-4381-9f9d-f4ffb4115db9" type="checkbox" ><label for="191bb370-89dc-4381-9f9d-f4ffb4115db9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a84d400c-2e0c-47ce-bc07-6dfd72346db6" type="checkbox" ><label for="a84d400c-2e0c-47ce-bc07-6dfd72346db6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73e50530-8c74-41a7-b7b5-00a81e347ae6" type="checkbox" ><label for="73e50530-8c74-41a7-b7b5-00a81e347ae6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53576bd8-a300-41db-8a98-f36070eb26b6" type="checkbox" ><label for="53576bd8-a300-41db-8a98-f36070eb26b6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fbbf9a4-3a63-42e0-a175-d1f5e6c07988" type="checkbox" ><label for="4fbbf9a4-3a63-42e0-a175-d1f5e6c07988" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ff1dfbe-3049-4db1-beae-778efc059438" type="checkbox" ><label for="9ff1dfbe-3049-4db1-beae-778efc059438" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="525e88b4-b880-488b-9781-72966012f924" type="checkbox" ><label for="525e88b4-b880-488b-9781-72966012f924" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
