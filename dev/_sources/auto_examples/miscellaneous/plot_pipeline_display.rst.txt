
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f52a6164-62a4-4442-9481-afebfceeaefa {color: black;background-color: white;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa pre{padding: 0;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-toggleable {background-color: white;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-estimator:hover {background-color: #d4ebff;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-item {z-index: 1;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-parallel-item:only-child::after {width: 0;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f52a6164-62a4-4442-9481-afebfceeaefa div.sk-text-repr-fallback {display: none;}</style><div id="sk-f52a6164-62a4-4442-9481-afebfceeaefa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9526b4e-d91a-4610-b175-ea8c9adc1e70" type="checkbox" ><label for="f9526b4e-d91a-4610-b175-ea8c9adc1e70" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c00ab16-1a8e-434e-af7e-b8e1c701410b" type="checkbox" ><label for="5c00ab16-1a8e-434e-af7e-b8e1c701410b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90b9bd1c-5486-4ee6-9eab-40e8431542ac" type="checkbox" ><label for="90b9bd1c-5486-4ee6-9eab-40e8431542ac" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 {color: black;background-color: white;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 pre{padding: 0;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-toggleable {background-color: white;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-item {z-index: 1;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-parallel-item:only-child::after {width: 0;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bd002b67-69d8-496b-b81a-e120e836ecc5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bd002b67-69d8-496b-b81a-e120e836ecc5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="153a57f0-e317-4f57-b5a4-e32415f6d39e" type="checkbox" ><label for="153a57f0-e317-4f57-b5a4-e32415f6d39e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40edabce-9fdf-4925-999b-9819f10954e4" type="checkbox" ><label for="40edabce-9fdf-4925-999b-9819f10954e4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77e67f0c-b238-46d0-a07a-d6bd495d8e5f" type="checkbox" ><label for="77e67f0c-b238-46d0-a07a-d6bd495d8e5f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51390389-54c2-4ab2-af58-698f378a3ee7" type="checkbox" ><label for="51390389-54c2-4ab2-af58-698f378a3ee7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9421be4f-4093-494a-aff6-9ef099681b69 {color: black;background-color: white;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 pre{padding: 0;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-toggleable {background-color: white;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-item {z-index: 1;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-parallel-item:only-child::after {width: 0;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9421be4f-4093-494a-aff6-9ef099681b69 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9421be4f-4093-494a-aff6-9ef099681b69" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57162efe-103c-44b4-b620-5328351341f9" type="checkbox" ><label for="57162efe-103c-44b4-b620-5328351341f9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24674427-24ec-45e5-a93f-0399162ef2c6" type="checkbox" ><label for="24674427-24ec-45e5-a93f-0399162ef2c6" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52348943-321b-44dc-b9b4-a7ddb8281712" type="checkbox" ><label for="52348943-321b-44dc-b9b4-a7ddb8281712" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 {color: black;background-color: white;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 pre{padding: 0;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-toggleable {background-color: white;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-item {z-index: 1;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-parallel-item:only-child::after {width: 0;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fc90d84f-db34-4c8b-96d5-dfb98f7f6be6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bed2de6-9c2f-42cb-8803-af209a9cebe1" type="checkbox" ><label for="4bed2de6-9c2f-42cb-8803-af209a9cebe1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="917b26e0-bb9a-4326-b282-7b8c0167225f" type="checkbox" ><label for="917b26e0-bb9a-4326-b282-7b8c0167225f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a09a89d-9661-4a36-9a76-006e46a6b43f" type="checkbox" ><label for="7a09a89d-9661-4a36-9a76-006e46a6b43f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="887a2187-8fdf-4193-b5e2-6c85a6cc1422" type="checkbox" ><label for="887a2187-8fdf-4193-b5e2-6c85a6cc1422" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fec2b2ac-8a63-45d9-aedd-4131ad5d97e2" type="checkbox" ><label for="fec2b2ac-8a63-45d9-aedd-4131ad5d97e2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ff437c7-84eb-4f4f-860d-aa1a3c1dfee3" type="checkbox" ><label for="1ff437c7-84eb-4f4f-860d-aa1a3c1dfee3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01377f5a-068e-40f8-832f-a1834375e3be" type="checkbox" ><label for="01377f5a-068e-40f8-832f-a1834375e3be" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86691de6-8cd9-41aa-b5e0-6dee320162c9" type="checkbox" ><label for="86691de6-8cd9-41aa-b5e0-6dee320162c9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4232b12a-32aa-43d0-8c42-1858c54e7422" type="checkbox" ><label for="4232b12a-32aa-43d0-8c42-1858c54e7422" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 {color: black;background-color: white;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 pre{padding: 0;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-toggleable {background-color: white;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-item {z-index: 1;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-parallel-item:only-child::after {width: 0;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-de9a01eb-fe76-474f-ae7a-c5cd787ebda9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1518080-f092-4144-9754-4cca37db7146" type="checkbox" ><label for="e1518080-f092-4144-9754-4cca37db7146" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3cf90f64-b8ce-4df4-8870-496476df3497" type="checkbox" ><label for="3cf90f64-b8ce-4df4-8870-496476df3497" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c9f5c3e-84a2-425c-9dea-7b7f42045d8c" type="checkbox" ><label for="5c9f5c3e-84a2-425c-9dea-7b7f42045d8c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40b21402-9731-4bef-aec4-786e8b409eef" type="checkbox" ><label for="40b21402-9731-4bef-aec4-786e8b409eef" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39348f84-bb5f-44eb-b1df-9b9996221199" type="checkbox" ><label for="39348f84-bb5f-44eb-b1df-9b9996221199" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82dc9c4c-8c87-4973-a6aa-9b66f5ee2d73" type="checkbox" ><label for="82dc9c4c-8c87-4973-a6aa-9b66f5ee2d73" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c1b5e84-cf14-49cd-9bd4-de8436c1a00a" type="checkbox" ><label for="2c1b5e84-cf14-49cd-9bd4-de8436c1a00a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ee9ed95-3fc4-4fb2-9f60-956c68375958" type="checkbox" ><label for="0ee9ed95-3fc4-4fb2-9f60-956c68375958" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e30ab6c4-22ce-411f-a615-ce469cba0978" type="checkbox" ><label for="e30ab6c4-22ce-411f-a615-ce469cba0978" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
