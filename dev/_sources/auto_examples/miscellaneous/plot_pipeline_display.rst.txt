
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 {color: black;background-color: white;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 pre{padding: 0;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-toggleable {background-color: white;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-estimator:hover {background-color: #d4ebff;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-item {z-index: 1;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-parallel-item:only-child::after {width: 0;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72 div.sk-text-repr-fallback {display: none;}</style><div id="sk-70750f5b-d2ae-41f2-a22f-0cfe66a99e72" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf7984bb-75b7-43a0-bba3-12fbdacd8aeb" type="checkbox" ><label for="cf7984bb-75b7-43a0-bba3-12fbdacd8aeb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4ffd586-d704-4cec-ab15-9aaf03668b05" type="checkbox" ><label for="b4ffd586-d704-4cec-ab15-9aaf03668b05" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39dbac63-e569-4f6e-9738-59843dfc08d0" type="checkbox" ><label for="39dbac63-e569-4f6e-9738-59843dfc08d0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a {color: black;background-color: white;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a pre{padding: 0;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-toggleable {background-color: white;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-estimator:hover {background-color: #d4ebff;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-item {z-index: 1;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-parallel-item:only-child::after {width: 0;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a div.sk-text-repr-fallback {display: none;}</style><div id="sk-2612fbac-a39c-498b-a8da-06f98c7a3a4a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="daabc97b-d175-4b99-93c3-c92e08ab5636" type="checkbox" ><label for="daabc97b-d175-4b99-93c3-c92e08ab5636" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfe6af45-d8cc-4068-8d29-ed654b4401fb" type="checkbox" ><label for="cfe6af45-d8cc-4068-8d29-ed654b4401fb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="812c709b-046b-4bac-8382-6045f9d40ce7" type="checkbox" ><label for="812c709b-046b-4bac-8382-6045f9d40ce7" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dea65cee-de94-4590-b8a7-166c28147a77" type="checkbox" ><label for="dea65cee-de94-4590-b8a7-166c28147a77" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e {color: black;background-color: white;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e pre{padding: 0;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-toggleable {background-color: white;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-estimator:hover {background-color: #d4ebff;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-item {z-index: 1;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-parallel-item:only-child::after {width: 0;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ae321767-4894-44e3-b81c-fd8a946a3d3e div.sk-text-repr-fallback {display: none;}</style><div id="sk-ae321767-4894-44e3-b81c-fd8a946a3d3e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55700363-8810-4e51-95bd-815a1de19866" type="checkbox" ><label for="55700363-8810-4e51-95bd-815a1de19866" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19f1cc22-1ded-4a4d-88d8-a6c53de0d0b8" type="checkbox" ><label for="19f1cc22-1ded-4a4d-88d8-a6c53de0d0b8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f24b8fc-98d8-4f59-a864-f4c776da15ca" type="checkbox" ><label for="1f24b8fc-98d8-4f59-a864-f4c776da15ca" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad {color: black;background-color: white;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad pre{padding: 0;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-toggleable {background-color: white;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-estimator:hover {background-color: #d4ebff;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-item {z-index: 1;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-parallel-item:only-child::after {width: 0;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad div.sk-text-repr-fallback {display: none;}</style><div id="sk-8b05dc0a-3e66-4582-83c8-0f241a51eaad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5766621-e97e-4270-86ec-b20147d931bd" type="checkbox" ><label for="a5766621-e97e-4270-86ec-b20147d931bd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e14d06b-ce98-42dc-95e5-d0a959fb0d42" type="checkbox" ><label for="2e14d06b-ce98-42dc-95e5-d0a959fb0d42" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58f6a35c-f806-4262-8701-06b07cc20c17" type="checkbox" ><label for="58f6a35c-f806-4262-8701-06b07cc20c17" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89610b6e-e731-4967-b1dc-4951a67fad20" type="checkbox" ><label for="89610b6e-e731-4967-b1dc-4951a67fad20" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33d694f8-15b9-416b-a543-7a24c1b5d14e" type="checkbox" ><label for="33d694f8-15b9-416b-a543-7a24c1b5d14e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c81b05a-5d59-4163-b13d-f1b53dab4788" type="checkbox" ><label for="0c81b05a-5d59-4163-b13d-f1b53dab4788" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58a4f5c9-78ce-44f4-aed9-33c5738eb274" type="checkbox" ><label for="58a4f5c9-78ce-44f4-aed9-33c5738eb274" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1032c97d-69ee-46d7-a0b9-d9435b3bdf55" type="checkbox" ><label for="1032c97d-69ee-46d7-a0b9-d9435b3bdf55" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66d3e147-c5d5-4dbf-8b20-57751edc99de" type="checkbox" ><label for="66d3e147-c5d5-4dbf-8b20-57751edc99de" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 {color: black;background-color: white;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 pre{padding: 0;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-toggleable {background-color: white;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-estimator:hover {background-color: #d4ebff;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-item {z-index: 1;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-parallel-item:only-child::after {width: 0;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51 div.sk-text-repr-fallback {display: none;}</style><div id="sk-71ee6b4c-767d-4939-aabd-9a4316b2ce51" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4be1d7a-cd28-47db-b184-728906cd56cb" type="checkbox" ><label for="a4be1d7a-cd28-47db-b184-728906cd56cb" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8de2992-307e-4edc-a5ad-8e5e529ef8de" type="checkbox" ><label for="f8de2992-307e-4edc-a5ad-8e5e529ef8de" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4640f13-f64c-448d-9a48-e8204ec2c3ee" type="checkbox" ><label for="c4640f13-f64c-448d-9a48-e8204ec2c3ee" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73040785-580b-4749-9ad9-2af9d5040851" type="checkbox" ><label for="73040785-580b-4749-9ad9-2af9d5040851" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="044a3436-60cf-4eee-a70c-05917cafae37" type="checkbox" ><label for="044a3436-60cf-4eee-a70c-05917cafae37" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e45d4f6f-4af4-45d2-865e-dfd020d478c2" type="checkbox" ><label for="e45d4f6f-4af4-45d2-865e-dfd020d478c2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a618b8d-5a8b-4305-9de4-0076c074ca0a" type="checkbox" ><label for="3a618b8d-5a8b-4305-9de4-0076c074ca0a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61ab0b37-8e6b-4ddf-86e8-328b4e079578" type="checkbox" ><label for="61ab0b37-8e6b-4ddf-86e8-328b4e079578" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="119d3002-5401-4e97-963f-91643151843f" type="checkbox" ><label for="119d3002-5401-4e97-963f-91643151843f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.077 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
