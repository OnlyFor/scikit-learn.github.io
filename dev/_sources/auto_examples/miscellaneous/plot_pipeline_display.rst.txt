
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 {color: black;background-color: white;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 pre{padding: 0;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-toggleable {background-color: white;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-item {z-index: 1;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-parallel-item:only-child::after {width: 0;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-754fc6e9-d8d7-409c-86d2-b472ccf4b7a5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8acd3d9-0430-4952-985e-259f30161c85" type="checkbox" ><label for="b8acd3d9-0430-4952-985e-259f30161c85" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f11fb5d-02d5-491a-b450-1d5797d5e618" type="checkbox" ><label for="9f11fb5d-02d5-491a-b450-1d5797d5e618" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f6f8b5c-a3b1-4ce1-8846-b2a20471444b" type="checkbox" ><label for="9f6f8b5c-a3b1-4ce1-8846-b2a20471444b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 {color: black;background-color: white;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 pre{padding: 0;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-toggleable {background-color: white;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-item {z-index: 1;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-parallel-item:only-child::after {width: 0;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7ad43e96-f8a7-458b-9d3e-178208b4af52 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7ad43e96-f8a7-458b-9d3e-178208b4af52" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f173e0a-e99c-41fc-826b-cca185728d5a" type="checkbox" ><label for="5f173e0a-e99c-41fc-826b-cca185728d5a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="032c7dcf-a2b7-491a-a022-7c582f36297a" type="checkbox" ><label for="032c7dcf-a2b7-491a-a022-7c582f36297a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="726a126b-2a64-43e2-aefd-5bbf88081b01" type="checkbox" ><label for="726a126b-2a64-43e2-aefd-5bbf88081b01" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b199fc1f-bfd9-43a2-bf80-627fb29bf058" type="checkbox" ><label for="b199fc1f-bfd9-43a2-bf80-627fb29bf058" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 {color: black;background-color: white;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 pre{padding: 0;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-toggleable {background-color: white;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-item {z-index: 1;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-parallel-item:only-child::after {width: 0;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-25335c45-eb63-4ff7-894e-c469e4b21df2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-25335c45-eb63-4ff7-894e-c469e4b21df2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e404527b-0cfc-4488-937f-c9ed3cfc665a" type="checkbox" ><label for="e404527b-0cfc-4488-937f-c9ed3cfc665a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f971eb2-b0b5-4a4f-b04d-b1c664fab1f3" type="checkbox" ><label for="2f971eb2-b0b5-4a4f-b04d-b1c664fab1f3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79456c3c-68ba-41d8-9577-2dd287b31e8b" type="checkbox" ><label for="79456c3c-68ba-41d8-9577-2dd287b31e8b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5c091081-0824-4bd9-a6f4-a6859181757e {color: black;background-color: white;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e pre{padding: 0;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-toggleable {background-color: white;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-estimator:hover {background-color: #d4ebff;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-item {z-index: 1;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-parallel-item:only-child::after {width: 0;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5c091081-0824-4bd9-a6f4-a6859181757e div.sk-text-repr-fallback {display: none;}</style><div id="sk-5c091081-0824-4bd9-a6f4-a6859181757e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2480341-8be9-403a-a957-dc3f527c097a" type="checkbox" ><label for="a2480341-8be9-403a-a957-dc3f527c097a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="673feb85-4049-4549-abb4-e587c8b7ba53" type="checkbox" ><label for="673feb85-4049-4549-abb4-e587c8b7ba53" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84a7f873-9b6c-4277-9f3f-2841e6fe0bce" type="checkbox" ><label for="84a7f873-9b6c-4277-9f3f-2841e6fe0bce" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d9e45f0-fa5e-4018-8ba9-309bf7e19d76" type="checkbox" ><label for="5d9e45f0-fa5e-4018-8ba9-309bf7e19d76" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a958db3-41a7-418a-88b2-0d751f4e082c" type="checkbox" ><label for="7a958db3-41a7-418a-88b2-0d751f4e082c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d3c7b60-3c41-44b9-a38c-9a222dd7b71d" type="checkbox" ><label for="3d3c7b60-3c41-44b9-a38c-9a222dd7b71d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c353c10f-4ee0-4720-9b3c-e1c18d153262" type="checkbox" ><label for="c353c10f-4ee0-4720-9b3c-e1c18d153262" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cef80534-82e5-4bcf-9ec8-fe0fd1a510fd" type="checkbox" ><label for="cef80534-82e5-4bcf-9ec8-fe0fd1a510fd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ac5670c-34b3-429b-a296-93f37e4e1c88" type="checkbox" ><label for="9ac5670c-34b3-429b-a296-93f37e4e1c88" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 {color: black;background-color: white;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 pre{padding: 0;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-toggleable {background-color: white;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-item {z-index: 1;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-parallel-item:only-child::after {width: 0;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c32d2bc3-788f-4e58-8d80-e8e33398eb99" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81eb5a70-2de9-4d1b-b8c1-eaacc5679187" type="checkbox" ><label for="81eb5a70-2de9-4d1b-b8c1-eaacc5679187" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30cfe29d-0cb7-49b2-9e6f-eb2612c20ae0" type="checkbox" ><label for="30cfe29d-0cb7-49b2-9e6f-eb2612c20ae0" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41abc7f8-d60f-46a6-83c0-ca47220c91ef" type="checkbox" ><label for="41abc7f8-d60f-46a6-83c0-ca47220c91ef" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54be2d7d-4620-4b16-8d50-b051b60e79c4" type="checkbox" ><label for="54be2d7d-4620-4b16-8d50-b051b60e79c4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94b52ca8-7231-4680-871c-8b16c4825bde" type="checkbox" ><label for="94b52ca8-7231-4680-871c-8b16c4825bde" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8b3d0f0-8da9-4c29-a6dc-eb5ab17c7c20" type="checkbox" ><label for="a8b3d0f0-8da9-4c29-a6dc-eb5ab17c7c20" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca1355ae-7feb-41e5-9479-eab0b51c2659" type="checkbox" ><label for="ca1355ae-7feb-41e5-9479-eab0b51c2659" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bdd44ba-c36d-45a8-849c-17df86c1edb8" type="checkbox" ><label for="4bdd44ba-c36d-45a8-849c-17df86c1edb8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0359c861-fa91-4316-9047-7052dac39ce9" type="checkbox" ><label for="0359c861-fa91-4316-9047-7052dac39ce9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
