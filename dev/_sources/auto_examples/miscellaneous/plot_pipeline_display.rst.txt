
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 {color: black;background-color: white;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 pre{padding: 0;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-toggleable {background-color: white;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-item {z-index: 1;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-parallel-item:only-child::after {width: 0;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e8d50355-0cbf-4d41-a866-a9a013f07944 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e8d50355-0cbf-4d41-a866-a9a013f07944" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42b54c14-4025-46df-8635-3ad48f48618e" type="checkbox" ><label for="42b54c14-4025-46df-8635-3ad48f48618e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c405177d-2e6c-405f-b2d5-e1975bc8452a" type="checkbox" ><label for="c405177d-2e6c-405f-b2d5-e1975bc8452a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65c51742-354b-40f7-a3b5-7961c911413d" type="checkbox" ><label for="65c51742-354b-40f7-a3b5-7961c911413d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68c83fc6-1872-4604-9b76-d1bef043761b {color: black;background-color: white;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b pre{padding: 0;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-toggleable {background-color: white;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-estimator:hover {background-color: #d4ebff;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-item {z-index: 1;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-parallel-item:only-child::after {width: 0;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-68c83fc6-1872-4604-9b76-d1bef043761b div.sk-text-repr-fallback {display: none;}</style><div id="sk-68c83fc6-1872-4604-9b76-d1bef043761b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71a8ea13-ec6b-434c-ba95-73750b4c808e" type="checkbox" ><label for="71a8ea13-ec6b-434c-ba95-73750b4c808e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96186b5d-a0df-4675-87e9-0163f62f3d8a" type="checkbox" ><label for="96186b5d-a0df-4675-87e9-0163f62f3d8a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93a10c22-24bb-4602-a07a-02c3bca4fed5" type="checkbox" ><label for="93a10c22-24bb-4602-a07a-02c3bca4fed5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9455fdd7-3507-4cdd-aa1d-d74c62969074" type="checkbox" ><label for="9455fdd7-3507-4cdd-aa1d-d74c62969074" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c {color: black;background-color: white;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c pre{padding: 0;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-toggleable {background-color: white;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-estimator:hover {background-color: #d4ebff;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-item {z-index: 1;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-parallel-item:only-child::after {width: 0;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c div.sk-text-repr-fallback {display: none;}</style><div id="sk-8b7b2a3e-10f6-4996-9dcc-c47f8488a15c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abdec1a8-b5c9-40ef-8e9c-de41ffc9da96" type="checkbox" ><label for="abdec1a8-b5c9-40ef-8e9c-de41ffc9da96" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a07e525-39a7-4f3e-a847-c3a01ce116e0" type="checkbox" ><label for="0a07e525-39a7-4f3e-a847-c3a01ce116e0" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08ef7305-091b-4c6e-9477-b2a8895d18b7" type="checkbox" ><label for="08ef7305-091b-4c6e-9477-b2a8895d18b7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 {color: black;background-color: white;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 pre{padding: 0;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-toggleable {background-color: white;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-item {z-index: 1;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-parallel-item:only-child::after {width: 0;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9fd76ecc-dcfd-4129-b457-1aa732e04c80" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e98c8342-703d-4153-a44d-fa9b2022a1b1" type="checkbox" ><label for="e98c8342-703d-4153-a44d-fa9b2022a1b1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="419c3d95-46a4-4004-ad4d-e91eb5e3d69f" type="checkbox" ><label for="419c3d95-46a4-4004-ad4d-e91eb5e3d69f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5df3825c-16dc-4fb6-93a0-ee063d0886dd" type="checkbox" ><label for="5df3825c-16dc-4fb6-93a0-ee063d0886dd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d277ec42-9ae6-4952-a9fc-1313a112b70e" type="checkbox" ><label for="d277ec42-9ae6-4952-a9fc-1313a112b70e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29333811-2285-4a86-9347-6ae29fa9cfa9" type="checkbox" ><label for="29333811-2285-4a86-9347-6ae29fa9cfa9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce34f004-424d-42ea-91dc-193285260edf" type="checkbox" ><label for="ce34f004-424d-42ea-91dc-193285260edf" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddfa7f36-1c2f-4449-9692-383570b2f267" type="checkbox" ><label for="ddfa7f36-1c2f-4449-9692-383570b2f267" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11ff8d26-91eb-4fa5-a745-12c7d9b409de" type="checkbox" ><label for="11ff8d26-91eb-4fa5-a745-12c7d9b409de" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43a048d7-a447-42f5-be80-ad289548fb44" type="checkbox" ><label for="43a048d7-a447-42f5-be80-ad289548fb44" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f035780d-3ba2-4128-baf9-333837e5dc9c {color: black;background-color: white;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c pre{padding: 0;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-toggleable {background-color: white;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-estimator:hover {background-color: #d4ebff;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-item {z-index: 1;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-parallel-item:only-child::after {width: 0;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f035780d-3ba2-4128-baf9-333837e5dc9c div.sk-text-repr-fallback {display: none;}</style><div id="sk-f035780d-3ba2-4128-baf9-333837e5dc9c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e5f4c59-1343-470d-a649-d73fac9d20e1" type="checkbox" ><label for="4e5f4c59-1343-470d-a649-d73fac9d20e1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d956999-bcc2-4e67-8250-3365c639cfdd" type="checkbox" ><label for="5d956999-bcc2-4e67-8250-3365c639cfdd" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7562db21-550e-4dbb-b77a-bb26760ca05b" type="checkbox" ><label for="7562db21-550e-4dbb-b77a-bb26760ca05b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0355adbf-5fe3-457b-a97d-be3aa2ccbb20" type="checkbox" ><label for="0355adbf-5fe3-457b-a97d-be3aa2ccbb20" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7998a589-b535-4703-aab6-9a499674013c" type="checkbox" ><label for="7998a589-b535-4703-aab6-9a499674013c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a0b5df3-899b-4dbb-8976-c4fd739d32ae" type="checkbox" ><label for="6a0b5df3-899b-4dbb-8976-c4fd739d32ae" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb87e155-368c-43ba-b94f-37816fdcee1a" type="checkbox" ><label for="cb87e155-368c-43ba-b94f-37816fdcee1a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f85f0ca1-6763-4858-8624-b93a14084d45" type="checkbox" ><label for="f85f0ca1-6763-4858-8624-b93a14084d45" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c494f96-68ba-4692-804c-8b7a0c52d268" type="checkbox" ><label for="6c494f96-68ba-4692-804c-8b7a0c52d268" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.109 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
