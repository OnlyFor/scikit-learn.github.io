
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c1441e36-b412-419e-9cda-9f192442e247 {color: black;background-color: white;}#sk-c1441e36-b412-419e-9cda-9f192442e247 pre{padding: 0;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-toggleable {background-color: white;}#sk-c1441e36-b412-419e-9cda-9f192442e247 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c1441e36-b412-419e-9cda-9f192442e247 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c1441e36-b412-419e-9cda-9f192442e247 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c1441e36-b412-419e-9cda-9f192442e247 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c1441e36-b412-419e-9cda-9f192442e247 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1441e36-b412-419e-9cda-9f192442e247 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-item {z-index: 1;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-parallel-item:only-child::after {width: 0;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c1441e36-b412-419e-9cda-9f192442e247 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c1441e36-b412-419e-9cda-9f192442e247" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d8b0105-37f6-4d1f-ac18-27a1bea2747d" type="checkbox" ><label for="9d8b0105-37f6-4d1f-ac18-27a1bea2747d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53f01905-c5ee-479c-9fa3-8b667a696082" type="checkbox" ><label for="53f01905-c5ee-479c-9fa3-8b667a696082" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d1529a4-25d3-4ab1-9a59-09ee92e49b55" type="checkbox" ><label for="3d1529a4-25d3-4ab1-9a59-09ee92e49b55" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd {color: black;background-color: white;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd pre{padding: 0;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-toggleable {background-color: white;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-estimator:hover {background-color: #d4ebff;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-item {z-index: 1;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-parallel-item:only-child::after {width: 0;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1af16998-c474-4e8d-b691-73a7a66e7dcd div.sk-text-repr-fallback {display: none;}</style><div id="sk-1af16998-c474-4e8d-b691-73a7a66e7dcd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="956516aa-3c5c-4f15-8625-fbf6ad028116" type="checkbox" ><label for="956516aa-3c5c-4f15-8625-fbf6ad028116" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bab4c66e-900b-4197-a9e8-46eff07f5636" type="checkbox" ><label for="bab4c66e-900b-4197-a9e8-46eff07f5636" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c85403a1-94cc-4b31-921c-a4cca8b41dc6" type="checkbox" ><label for="c85403a1-94cc-4b31-921c-a4cca8b41dc6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c0e9a61-8997-4782-a807-ed167b4cc656" type="checkbox" ><label for="6c0e9a61-8997-4782-a807-ed167b4cc656" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa {color: black;background-color: white;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa pre{padding: 0;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-toggleable {background-color: white;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-estimator:hover {background-color: #d4ebff;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-item {z-index: 1;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-parallel-item:only-child::after {width: 0;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-11280a61-8445-4b66-b7e0-db84d4cc89fa div.sk-text-repr-fallback {display: none;}</style><div id="sk-11280a61-8445-4b66-b7e0-db84d4cc89fa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e219b3dc-04de-4bb4-b87e-868cdd76a605" type="checkbox" ><label for="e219b3dc-04de-4bb4-b87e-868cdd76a605" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="080fe3be-7ebd-4b92-834f-31b77576feaf" type="checkbox" ><label for="080fe3be-7ebd-4b92-834f-31b77576feaf" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a43198dd-e35f-41a6-9589-6a219c61ef82" type="checkbox" ><label for="a43198dd-e35f-41a6-9589-6a219c61ef82" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0ab03f90-ecc2-458c-830a-113994b0113c {color: black;background-color: white;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c pre{padding: 0;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-toggleable {background-color: white;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-estimator:hover {background-color: #d4ebff;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-item {z-index: 1;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-parallel-item:only-child::after {width: 0;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0ab03f90-ecc2-458c-830a-113994b0113c div.sk-text-repr-fallback {display: none;}</style><div id="sk-0ab03f90-ecc2-458c-830a-113994b0113c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d99e33ef-de61-4441-a229-5c9523d5f762" type="checkbox" ><label for="d99e33ef-de61-4441-a229-5c9523d5f762" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="478acf19-c1f9-4832-872e-0e306228f984" type="checkbox" ><label for="478acf19-c1f9-4832-872e-0e306228f984" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b913a6e-e728-4167-9d3f-fc609658e688" type="checkbox" ><label for="7b913a6e-e728-4167-9d3f-fc609658e688" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ec88a89-de53-4d01-92d5-3e27d5b254d4" type="checkbox" ><label for="5ec88a89-de53-4d01-92d5-3e27d5b254d4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c13cc767-b130-438c-a826-b02875836b3f" type="checkbox" ><label for="c13cc767-b130-438c-a826-b02875836b3f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a54bcc88-ff1e-4267-bfcc-60ccd4bac9ce" type="checkbox" ><label for="a54bcc88-ff1e-4267-bfcc-60ccd4bac9ce" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61fa6de6-93de-42b3-8a55-fae366b13e1c" type="checkbox" ><label for="61fa6de6-93de-42b3-8a55-fae366b13e1c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa666341-5409-4d14-8c0a-b8f982553eb0" type="checkbox" ><label for="aa666341-5409-4d14-8c0a-b8f982553eb0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="105354c5-98fb-42df-8414-b5e643d59dce" type="checkbox" ><label for="105354c5-98fb-42df-8414-b5e643d59dce" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 {color: black;background-color: white;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 pre{padding: 0;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-toggleable {background-color: white;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-item {z-index: 1;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-parallel-item:only-child::after {width: 0;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dcedae73-ff02-4057-a3b1-f0e556bc8893 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dcedae73-ff02-4057-a3b1-f0e556bc8893" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0ddb147-ddf8-4079-8e2d-37c7493d5050" type="checkbox" ><label for="a0ddb147-ddf8-4079-8e2d-37c7493d5050" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="108f0287-d61c-4e88-88b9-159dd3ece205" type="checkbox" ><label for="108f0287-d61c-4e88-88b9-159dd3ece205" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf25c838-c91b-4607-9174-993e1b43a380" type="checkbox" ><label for="bf25c838-c91b-4607-9174-993e1b43a380" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8043a4c4-9ce1-4662-8a2f-7b99d540edf7" type="checkbox" ><label for="8043a4c4-9ce1-4662-8a2f-7b99d540edf7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dab6fa21-2785-43ad-a08d-37df32ea133b" type="checkbox" ><label for="dab6fa21-2785-43ad-a08d-37df32ea133b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccfec016-e3e1-463f-97a0-db3206ec8e3f" type="checkbox" ><label for="ccfec016-e3e1-463f-97a0-db3206ec8e3f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33f02bec-8d40-4427-ae54-19ffc82a273c" type="checkbox" ><label for="33f02bec-8d40-4427-ae54-19ffc82a273c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e95bc77a-a762-470b-9e19-180f44f88d3c" type="checkbox" ><label for="e95bc77a-a762-470b-9e19-180f44f88d3c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd824c46-dd8d-47bc-896e-6a929bd184a9" type="checkbox" ><label for="cd824c46-dd8d-47bc-896e-6a929bd184a9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
