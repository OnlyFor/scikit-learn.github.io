
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 {color: black;background-color: white;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 pre{padding: 0;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-toggleable {background-color: white;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-item {z-index: 1;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-parallel-item:only-child::after {width: 0;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-244024d2-591a-413e-a84e-ae0f1dbb2ba3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15e704c1-68fa-4ba1-8a53-ba286adb7aa0" type="checkbox" ><label for="15e704c1-68fa-4ba1-8a53-ba286adb7aa0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70fd970b-edaf-4f88-95b9-c706f527d415" type="checkbox" ><label for="70fd970b-edaf-4f88-95b9-c706f527d415" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64e05166-6f05-44fe-a40d-dc95b8ea2804" type="checkbox" ><label for="64e05166-6f05-44fe-a40d-dc95b8ea2804" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 {color: black;background-color: white;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 pre{padding: 0;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-toggleable {background-color: white;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-estimator:hover {background-color: #d4ebff;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-item {z-index: 1;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-parallel-item:only-child::after {width: 0;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-daebf264-48ef-48f4-8fac-eec5f93e3732 div.sk-text-repr-fallback {display: none;}</style><div id="sk-daebf264-48ef-48f4-8fac-eec5f93e3732" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4a2ad3a-ff96-4343-9add-597b30b47fdb" type="checkbox" ><label for="b4a2ad3a-ff96-4343-9add-597b30b47fdb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5007ebe6-281c-4daf-b7be-db10df01406e" type="checkbox" ><label for="5007ebe6-281c-4daf-b7be-db10df01406e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="161734df-4139-4643-b537-2a29f690e00a" type="checkbox" ><label for="161734df-4139-4643-b537-2a29f690e00a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed98b4e4-21fb-41eb-8f1e-8b34d3998216" type="checkbox" ><label for="ed98b4e4-21fb-41eb-8f1e-8b34d3998216" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3992dc53-b849-4e28-be60-b21251e26abe {color: black;background-color: white;}#sk-3992dc53-b849-4e28-be60-b21251e26abe pre{padding: 0;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-toggleable {background-color: white;}#sk-3992dc53-b849-4e28-be60-b21251e26abe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3992dc53-b849-4e28-be60-b21251e26abe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3992dc53-b849-4e28-be60-b21251e26abe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3992dc53-b849-4e28-be60-b21251e26abe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3992dc53-b849-4e28-be60-b21251e26abe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3992dc53-b849-4e28-be60-b21251e26abe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-estimator:hover {background-color: #d4ebff;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-item {z-index: 1;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-parallel-item:only-child::after {width: 0;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3992dc53-b849-4e28-be60-b21251e26abe div.sk-text-repr-fallback {display: none;}</style><div id="sk-3992dc53-b849-4e28-be60-b21251e26abe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47fffbe5-e827-4b46-8b07-93c28544a037" type="checkbox" ><label for="47fffbe5-e827-4b46-8b07-93c28544a037" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21862637-dad8-45fe-a4d0-75f915160e2f" type="checkbox" ><label for="21862637-dad8-45fe-a4d0-75f915160e2f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1516dd0-da11-45dd-a007-2d3fe9cc6a53" type="checkbox" ><label for="c1516dd0-da11-45dd-a007-2d3fe9cc6a53" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a37917f8-ea11-41a5-9093-928a6011a265 {color: black;background-color: white;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 pre{padding: 0;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-toggleable {background-color: white;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-item {z-index: 1;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-parallel-item:only-child::after {width: 0;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a37917f8-ea11-41a5-9093-928a6011a265 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a37917f8-ea11-41a5-9093-928a6011a265" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="532cef41-0beb-46bd-9bd4-6d4ad90ca35f" type="checkbox" ><label for="532cef41-0beb-46bd-9bd4-6d4ad90ca35f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85d5a26d-09d9-434c-af45-2dc6b3f9e7e2" type="checkbox" ><label for="85d5a26d-09d9-434c-af45-2dc6b3f9e7e2" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ac23f87-14f3-4299-9f90-22e5012a3823" type="checkbox" ><label for="9ac23f87-14f3-4299-9f90-22e5012a3823" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c2eb7c4-6e60-4654-856c-8ada8769fb31" type="checkbox" ><label for="5c2eb7c4-6e60-4654-856c-8ada8769fb31" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a17a3ac-5f6c-4ad0-98f6-61dfb8869f50" type="checkbox" ><label for="7a17a3ac-5f6c-4ad0-98f6-61dfb8869f50" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d05608b-37ef-4b05-b0f3-607d92b33412" type="checkbox" ><label for="4d05608b-37ef-4b05-b0f3-607d92b33412" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e28e93a-3a1f-49ca-a3e9-0b617a1904cd" type="checkbox" ><label for="4e28e93a-3a1f-49ca-a3e9-0b617a1904cd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abff2336-eb6f-41b6-8e23-1f3ff075c92e" type="checkbox" ><label for="abff2336-eb6f-41b6-8e23-1f3ff075c92e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4540c3e-eb20-47ec-b734-e2829bac1795" type="checkbox" ><label for="e4540c3e-eb20-47ec-b734-e2829bac1795" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 {color: black;background-color: white;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 pre{padding: 0;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-toggleable {background-color: white;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-item {z-index: 1;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-parallel-item:only-child::after {width: 0;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bcb0c612-a900-4705-9e72-73fcf1072a81 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bcb0c612-a900-4705-9e72-73fcf1072a81" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ba399ef-b8b7-4a91-8a81-35f82566a4ed" type="checkbox" ><label for="9ba399ef-b8b7-4a91-8a81-35f82566a4ed" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40f988a9-8433-40a8-8bae-c4da3aeab624" type="checkbox" ><label for="40f988a9-8433-40a8-8bae-c4da3aeab624" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c19fd2dd-4a84-4993-a151-eb8c0fed6fc4" type="checkbox" ><label for="c19fd2dd-4a84-4993-a151-eb8c0fed6fc4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec0cb69a-deb5-444e-9e2e-2a0d53d5ded7" type="checkbox" ><label for="ec0cb69a-deb5-444e-9e2e-2a0d53d5ded7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b43f48a-fb64-4173-9a5d-2c283664ccf2" type="checkbox" ><label for="5b43f48a-fb64-4173-9a5d-2c283664ccf2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2023937c-5c7c-414c-8b52-0a7ffa93a633" type="checkbox" ><label for="2023937c-5c7c-414c-8b52-0a7ffa93a633" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4ba4604-1f0b-467c-8507-8ef7136160a6" type="checkbox" ><label for="b4ba4604-1f0b-467c-8507-8ef7136160a6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e81050de-1a39-4fed-879a-087b8b8734f4" type="checkbox" ><label for="e81050de-1a39-4fed-879a-087b8b8734f4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdd4b772-0456-45de-9423-743284968ea3" type="checkbox" ><label for="bdd4b772-0456-45de-9423-743284968ea3" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.106 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
