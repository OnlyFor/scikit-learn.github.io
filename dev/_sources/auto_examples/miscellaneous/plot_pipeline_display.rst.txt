
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 {color: black;background-color: white;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 pre{padding: 0;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-toggleable {background-color: white;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-item {z-index: 1;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-parallel-item:only-child::after {width: 0;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-container {display: inline-block;position: relative;}#sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8ed88c1f-4420-46e2-ad0b-9cfa6b4439a9" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="379df7fc-71dc-43bc-949f-962652034751" type="checkbox" ><label class="sk-toggleable__label" for="379df7fc-71dc-43bc-949f-962652034751">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bff7c7c8-5074-4dae-a071-75b0abaa0fa4" type="checkbox" ><label class="sk-toggleable__label" for="bff7c7c8-5074-4dae-a071-75b0abaa0fa4">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dc96ea8-95be-434b-a49d-6601cdf13032" type="checkbox" ><label class="sk-toggleable__label" for="4dc96ea8-95be-434b-a49d-6601cdf13032">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0423301f-4243-4648-8c72-be497774e678 {color: black;background-color: white;}#sk-0423301f-4243-4648-8c72-be497774e678 pre{padding: 0;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-toggleable {background-color: white;}#sk-0423301f-4243-4648-8c72-be497774e678 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0423301f-4243-4648-8c72-be497774e678 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0423301f-4243-4648-8c72-be497774e678 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-item {z-index: 1;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-parallel-item:only-child::after {width: 0;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-container {display: inline-block;position: relative;}#sk-0423301f-4243-4648-8c72-be497774e678 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0423301f-4243-4648-8c72-be497774e678" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e153260-8060-4060-bc0c-ef637ecff2f9" type="checkbox" ><label class="sk-toggleable__label" for="1e153260-8060-4060-bc0c-ef637ecff2f9">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07cc0aa3-5f1f-4f95-ba60-a61170265e18" type="checkbox" ><label class="sk-toggleable__label" for="07cc0aa3-5f1f-4f95-ba60-a61170265e18">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e11474c-6780-473a-8b27-e8558aa72605" type="checkbox" ><label class="sk-toggleable__label" for="4e11474c-6780-473a-8b27-e8558aa72605">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="790f1954-72e1-442f-bfb0-b5edc299df07" type="checkbox" ><label class="sk-toggleable__label" for="790f1954-72e1-442f-bfb0-b5edc299df07">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-11b6f320-cecc-43e5-a52c-fd089674989b {color: black;background-color: white;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b pre{padding: 0;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-toggleable {background-color: white;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-estimator:hover {background-color: #d4ebff;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-item {z-index: 1;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-parallel-item:only-child::after {width: 0;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-container {display: inline-block;position: relative;}#sk-11b6f320-cecc-43e5-a52c-fd089674989b div.sk-text-repr-fallback {display: none;}</style><div id="sk-11b6f320-cecc-43e5-a52c-fd089674989b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b86c0043-3d2c-4fc5-a150-15b47dd425c8" type="checkbox" ><label class="sk-toggleable__label" for="b86c0043-3d2c-4fc5-a150-15b47dd425c8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe06a9a2-a35f-425f-9f79-8695a670c5c0" type="checkbox" ><label class="sk-toggleable__label" for="fe06a9a2-a35f-425f-9f79-8695a670c5c0">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46c424ec-c347-43da-a7c8-288628b23cc3" type="checkbox" ><label class="sk-toggleable__label" for="46c424ec-c347-43da-a7c8-288628b23cc3">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 {color: black;background-color: white;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 pre{padding: 0;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-toggleable {background-color: white;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-item {z-index: 1;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-parallel-item:only-child::after {width: 0;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-container {display: inline-block;position: relative;}#sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cb6514b3-e56f-4803-a1e9-bf15a20c7470" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32352b56-e6b2-4fcc-8b3f-674d1dddb6e3" type="checkbox" ><label class="sk-toggleable__label" for="32352b56-e6b2-4fcc-8b3f-674d1dddb6e3">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b373fb0-303f-44b3-b439-2cb669b4a463" type="checkbox" ><label class="sk-toggleable__label" for="9b373fb0-303f-44b3-b439-2cb669b4a463">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af86ec4f-4933-404e-910b-3ab366236082" type="checkbox" ><label class="sk-toggleable__label" for="af86ec4f-4933-404e-910b-3ab366236082">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94fde5be-8d81-4d64-bcc5-414bf4aac50a" type="checkbox" ><label class="sk-toggleable__label" for="94fde5be-8d81-4d64-bcc5-414bf4aac50a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60d10cfa-63e0-4b79-a4ce-a22e334db564" type="checkbox" ><label class="sk-toggleable__label" for="60d10cfa-63e0-4b79-a4ce-a22e334db564">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21576ea0-f549-4193-ad15-9615e4d733b1" type="checkbox" ><label class="sk-toggleable__label" for="21576ea0-f549-4193-ad15-9615e4d733b1">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93150721-177c-4bcc-b7dd-536a9ffedac5" type="checkbox" ><label class="sk-toggleable__label" for="93150721-177c-4bcc-b7dd-536a9ffedac5">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b04be43-b51f-4126-a6bc-dc7a66a5bcfc" type="checkbox" ><label class="sk-toggleable__label" for="2b04be43-b51f-4126-a6bc-dc7a66a5bcfc">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7aed90d5-e507-4c44-a958-95c1008c0e5e" type="checkbox" ><label class="sk-toggleable__label" for="7aed90d5-e507-4c44-a958-95c1008c0e5e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68291e06-cf45-48b9-a381-651ce559b3fc {color: black;background-color: white;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc pre{padding: 0;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-toggleable {background-color: white;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-estimator:hover {background-color: #d4ebff;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-item {z-index: 1;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-parallel-item:only-child::after {width: 0;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-container {display: inline-block;position: relative;}#sk-68291e06-cf45-48b9-a381-651ce559b3fc div.sk-text-repr-fallback {display: none;}</style><div id="sk-68291e06-cf45-48b9-a381-651ce559b3fc" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5650471-7760-4de8-92c8-faf638472894" type="checkbox" ><label class="sk-toggleable__label" for="f5650471-7760-4de8-92c8-faf638472894">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c77ff627-5f65-4c78-94d4-449a18ef3a73" type="checkbox" ><label class="sk-toggleable__label" for="c77ff627-5f65-4c78-94d4-449a18ef3a73">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e560cf80-904c-486b-9e74-aefecc921e73" type="checkbox" ><label class="sk-toggleable__label" for="e560cf80-904c-486b-9e74-aefecc921e73">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f3cd3a4-98aa-49f3-a547-bbf011e0f24e" type="checkbox" ><label class="sk-toggleable__label" for="5f3cd3a4-98aa-49f3-a547-bbf011e0f24e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a539e1b-e420-4c77-aa60-c538ce20c35c" type="checkbox" ><label class="sk-toggleable__label" for="5a539e1b-e420-4c77-aa60-c538ce20c35c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ae6db70-562e-4976-98c4-4b83a64561c0" type="checkbox" ><label class="sk-toggleable__label" for="7ae6db70-562e-4976-98c4-4b83a64561c0">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29f8941e-1b85-401f-9bbf-3abedd7ab8b6" type="checkbox" ><label class="sk-toggleable__label" for="29f8941e-1b85-401f-9bbf-3abedd7ab8b6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ba13654-0d35-4e49-bbac-bafc1dfe0ad2" type="checkbox" ><label class="sk-toggleable__label" for="4ba13654-0d35-4e49-bbac-bafc1dfe0ad2">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7813f215-ee38-49d1-b360-c94b9017594f" type="checkbox" ><label class="sk-toggleable__label" for="7813f215-ee38-49d1-b360-c94b9017594f">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.123 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
