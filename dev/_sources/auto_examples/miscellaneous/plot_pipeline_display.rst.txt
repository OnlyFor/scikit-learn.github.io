
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 {color: black;background-color: white;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 pre{padding: 0;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-toggleable {background-color: white;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-item {z-index: 1;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-parallel-item:only-child::after {width: 0;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cca903a0-18d6-429e-9fec-cdda0d2f9407 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cca903a0-18d6-429e-9fec-cdda0d2f9407" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e120f9bb-05f2-4089-b291-5d08eedc0271" type="checkbox" ><label class="sk-toggleable__label" for="e120f9bb-05f2-4089-b291-5d08eedc0271">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="329ba31c-1038-402c-9c9d-824447539064" type="checkbox" ><label class="sk-toggleable__label" for="329ba31c-1038-402c-9c9d-824447539064">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2f7f1e8-e17e-4d01-a0c0-fc7f89a2a94f" type="checkbox" ><label class="sk-toggleable__label" for="f2f7f1e8-e17e-4d01-a0c0-fc7f89a2a94f">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 {color: black;background-color: white;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 pre{padding: 0;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-toggleable {background-color: white;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-estimator:hover {background-color: #d4ebff;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-item {z-index: 1;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-parallel-item:only-child::after {width: 0;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-66abdd78-9a5d-419f-87e5-4c123dc0c087 div.sk-text-repr-fallback {display: none;}</style><div id="sk-66abdd78-9a5d-419f-87e5-4c123dc0c087" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45bc244c-d8f3-48da-8d81-a9a5fb604a63" type="checkbox" ><label class="sk-toggleable__label" for="45bc244c-d8f3-48da-8d81-a9a5fb604a63">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a01febc8-e874-416a-8e3e-cab86f3f140e" type="checkbox" ><label class="sk-toggleable__label" for="a01febc8-e874-416a-8e3e-cab86f3f140e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c578301-8033-4444-baf4-9ae5b47be7df" type="checkbox" ><label class="sk-toggleable__label" for="3c578301-8033-4444-baf4-9ae5b47be7df">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08a1312d-3f06-4039-9e31-44e71668fc20" type="checkbox" ><label class="sk-toggleable__label" for="08a1312d-3f06-4039-9e31-44e71668fc20">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb {color: black;background-color: white;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb pre{padding: 0;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-toggleable {background-color: white;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-estimator:hover {background-color: #d4ebff;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-item {z-index: 1;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-parallel-item:only-child::after {width: 0;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb div.sk-text-repr-fallback {display: none;}</style><div id="sk-9fff456f-cc91-4f6b-8631-ebf7adc0cabb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ebe299e-0616-4015-aebc-280d5eeeeb24" type="checkbox" ><label class="sk-toggleable__label" for="6ebe299e-0616-4015-aebc-280d5eeeeb24">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b90dff6-7fb3-4df2-8d4d-ef9fd45cec5b" type="checkbox" ><label class="sk-toggleable__label" for="1b90dff6-7fb3-4df2-8d4d-ef9fd45cec5b">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a5383e5-306d-49c6-8bdf-4c126fe95e99" type="checkbox" ><label class="sk-toggleable__label" for="9a5383e5-306d-49c6-8bdf-4c126fe95e99">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 {color: black;background-color: white;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 pre{padding: 0;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-toggleable {background-color: white;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-item {z-index: 1;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-parallel-item:only-child::after {width: 0;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0bfec0f-a7d0-440d-8968-03e3d7b1bf30" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd8966fe-af01-47fc-9881-764160664966" type="checkbox" ><label class="sk-toggleable__label" for="dd8966fe-af01-47fc-9881-764160664966">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ae4c546-59f4-41d7-b801-3884750e1e44" type="checkbox" ><label class="sk-toggleable__label" for="0ae4c546-59f4-41d7-b801-3884750e1e44">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cc9ada3-ed79-4b89-a7f9-5e641863b540" type="checkbox" ><label class="sk-toggleable__label" for="2cc9ada3-ed79-4b89-a7f9-5e641863b540">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4f8a043-f6af-4ca0-a799-78c24d624022" type="checkbox" ><label class="sk-toggleable__label" for="c4f8a043-f6af-4ca0-a799-78c24d624022">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="008ba142-fb46-4243-b44a-d6e4d04d5b10" type="checkbox" ><label class="sk-toggleable__label" for="008ba142-fb46-4243-b44a-d6e4d04d5b10">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15d41577-0456-48bf-b6c9-a5f83277a34e" type="checkbox" ><label class="sk-toggleable__label" for="15d41577-0456-48bf-b6c9-a5f83277a34e">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62926f36-ff6e-42ba-a39f-b65f60c079dc" type="checkbox" ><label class="sk-toggleable__label" for="62926f36-ff6e-42ba-a39f-b65f60c079dc">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2236116f-fcaf-45ef-a060-d5c73b928a78" type="checkbox" ><label class="sk-toggleable__label" for="2236116f-fcaf-45ef-a060-d5c73b928a78">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76705e0d-91f7-434f-ab44-8285514d363e" type="checkbox" ><label class="sk-toggleable__label" for="76705e0d-91f7-434f-ab44-8285514d363e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-da189120-3be2-4804-a9e1-710bf463366a {color: black;background-color: white;}#sk-da189120-3be2-4804-a9e1-710bf463366a pre{padding: 0;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-toggleable {background-color: white;}#sk-da189120-3be2-4804-a9e1-710bf463366a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-da189120-3be2-4804-a9e1-710bf463366a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-da189120-3be2-4804-a9e1-710bf463366a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-estimator:hover {background-color: #d4ebff;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-item {z-index: 1;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-parallel-item:only-child::after {width: 0;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-da189120-3be2-4804-a9e1-710bf463366a div.sk-text-repr-fallback {display: none;}</style><div id="sk-da189120-3be2-4804-a9e1-710bf463366a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cf98565-5825-4df0-b258-8730f83d58b3" type="checkbox" ><label class="sk-toggleable__label" for="5cf98565-5825-4df0-b258-8730f83d58b3">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7dcbd31c-e305-4f76-8153-1e736b23c539" type="checkbox" ><label class="sk-toggleable__label" for="7dcbd31c-e305-4f76-8153-1e736b23c539">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc424158-71a4-4226-bde7-ff17658866a4" type="checkbox" ><label class="sk-toggleable__label" for="cc424158-71a4-4226-bde7-ff17658866a4">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9684b6a1-976f-4e00-8f21-180b3092a416" type="checkbox" ><label class="sk-toggleable__label" for="9684b6a1-976f-4e00-8f21-180b3092a416">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86d48505-6aae-4338-ae72-fe4e0d203ef9" type="checkbox" ><label class="sk-toggleable__label" for="86d48505-6aae-4338-ae72-fe4e0d203ef9">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2acd7ed-a888-418e-9943-a93ac38130e7" type="checkbox" ><label class="sk-toggleable__label" for="c2acd7ed-a888-418e-9943-a93ac38130e7">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2445236-55b1-4ff9-8977-64e56f1db37f" type="checkbox" ><label class="sk-toggleable__label" for="c2445236-55b1-4ff9-8977-64e56f1db37f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="589e1568-a009-4a61-8e30-16cc93a95200" type="checkbox" ><label class="sk-toggleable__label" for="589e1568-a009-4a61-8e30-16cc93a95200">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d56385dd-ba7b-4b4d-b561-bef27dfa80a6" type="checkbox" ><label class="sk-toggleable__label" for="d56385dd-ba7b-4b4d-b561-bef27dfa80a6">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.106 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
