
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e056c542-ab95-4904-b345-36a38d3a8bda {color: black;background-color: white;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda pre{padding: 0;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-toggleable {background-color: white;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-estimator:hover {background-color: #d4ebff;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-item {z-index: 1;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-parallel-item:only-child::after {width: 0;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e056c542-ab95-4904-b345-36a38d3a8bda div.sk-text-repr-fallback {display: none;}</style><div id="sk-e056c542-ab95-4904-b345-36a38d3a8bda" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bb8e761-4b52-4f4e-b4b6-f0a7fdd7c200" type="checkbox" ><label for="8bb8e761-4b52-4f4e-b4b6-f0a7fdd7c200" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f28946d2-5987-4bcf-b529-dde326d153bd" type="checkbox" ><label for="f28946d2-5987-4bcf-b529-dde326d153bd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bda78f1e-a65a-406e-a523-2ca866a3de86" type="checkbox" ><label for="bda78f1e-a65a-406e-a523-2ca866a3de86" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-64266091-9026-4ef5-b961-b3cc257ab97b {color: black;background-color: white;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b pre{padding: 0;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-toggleable {background-color: white;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-estimator:hover {background-color: #d4ebff;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-item {z-index: 1;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-parallel-item:only-child::after {width: 0;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-64266091-9026-4ef5-b961-b3cc257ab97b div.sk-text-repr-fallback {display: none;}</style><div id="sk-64266091-9026-4ef5-b961-b3cc257ab97b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e2ced39-2ee4-4250-8be4-060b853d9f35" type="checkbox" ><label for="9e2ced39-2ee4-4250-8be4-060b853d9f35" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d584c75-9fda-43c0-8341-f166ba8ae9e2" type="checkbox" ><label for="3d584c75-9fda-43c0-8341-f166ba8ae9e2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f7d81c1-718b-4039-bf88-2fac50ff9b1d" type="checkbox" ><label for="2f7d81c1-718b-4039-bf88-2fac50ff9b1d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="322ae799-90e6-4e04-8b7c-57cce4a68072" type="checkbox" ><label for="322ae799-90e6-4e04-8b7c-57cce4a68072" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b {color: black;background-color: white;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b pre{padding: 0;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-toggleable {background-color: white;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-estimator:hover {background-color: #d4ebff;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-item {z-index: 1;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-parallel-item:only-child::after {width: 0;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-288db962-850c-41d6-9c6c-c2f6ce3d727b div.sk-text-repr-fallback {display: none;}</style><div id="sk-288db962-850c-41d6-9c6c-c2f6ce3d727b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6ca9991-ff3d-4691-8102-31c00088fc22" type="checkbox" ><label for="c6ca9991-ff3d-4691-8102-31c00088fc22" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eabeebc-10e2-4bf6-8987-b7acf6cdbb40" type="checkbox" ><label for="0eabeebc-10e2-4bf6-8987-b7acf6cdbb40" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="166ccda9-82c6-477e-a89a-e9c9e3257f28" type="checkbox" ><label for="166ccda9-82c6-477e-a89a-e9c9e3257f28" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a075adf9-e58e-4748-a3b2-40278896a9fe {color: black;background-color: white;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe pre{padding: 0;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-toggleable {background-color: white;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-estimator:hover {background-color: #d4ebff;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-item {z-index: 1;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-parallel-item:only-child::after {width: 0;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a075adf9-e58e-4748-a3b2-40278896a9fe div.sk-text-repr-fallback {display: none;}</style><div id="sk-a075adf9-e58e-4748-a3b2-40278896a9fe" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bd05a65-603d-41eb-b961-ecf0b1706a15" type="checkbox" ><label for="2bd05a65-603d-41eb-b961-ecf0b1706a15" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="536afc65-5675-46ab-9499-97c12c8f997d" type="checkbox" ><label for="536afc65-5675-46ab-9499-97c12c8f997d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4905555-d534-4cd9-981b-07e9d86f3df4" type="checkbox" ><label for="d4905555-d534-4cd9-981b-07e9d86f3df4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38f83183-51cb-4c11-a154-c026f372a6d0" type="checkbox" ><label for="38f83183-51cb-4c11-a154-c026f372a6d0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcb92f0c-a8ce-4565-a5e9-861cd2263a9e" type="checkbox" ><label for="fcb92f0c-a8ce-4565-a5e9-861cd2263a9e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="620059af-e83c-471c-a200-989fccef2a4d" type="checkbox" ><label for="620059af-e83c-471c-a200-989fccef2a4d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="221c28ce-4b83-44b6-9195-8fbefa4bf3d1" type="checkbox" ><label for="221c28ce-4b83-44b6-9195-8fbefa4bf3d1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdbdc848-3594-4f2f-85b1-82492dc7ac71" type="checkbox" ><label for="bdbdc848-3594-4f2f-85b1-82492dc7ac71" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10613790-22eb-432d-8acd-c6cc5297f88c" type="checkbox" ><label for="10613790-22eb-432d-8acd-c6cc5297f88c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 {color: black;background-color: white;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 pre{padding: 0;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-toggleable {background-color: white;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-item {z-index: 1;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-parallel-item:only-child::after {width: 0;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0bc52a4a-d343-4151-8e05-31d1ba3c9256" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6b33400-da54-459a-adca-84aa2a415ad8" type="checkbox" ><label for="d6b33400-da54-459a-adca-84aa2a415ad8" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de5debc0-a56e-4f3c-93b1-e31c3ce0647a" type="checkbox" ><label for="de5debc0-a56e-4f3c-93b1-e31c3ce0647a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78a8aad9-e639-48cc-8b5d-272980efdc50" type="checkbox" ><label for="78a8aad9-e639-48cc-8b5d-272980efdc50" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41c578f6-d731-4606-9520-f0e91dd143f7" type="checkbox" ><label for="41c578f6-d731-4606-9520-f0e91dd143f7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8281ffb-d329-469a-8be2-8efa991cf8fe" type="checkbox" ><label for="e8281ffb-d329-469a-8be2-8efa991cf8fe" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c3b12f8-3f23-4442-8352-16d4789d532d" type="checkbox" ><label for="5c3b12f8-3f23-4442-8352-16d4789d532d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca2a613f-7843-4102-aa0f-3dce572efe22" type="checkbox" ><label for="ca2a613f-7843-4102-aa0f-3dce572efe22" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77a5e8a9-e810-45ad-af51-4c469ee447bb" type="checkbox" ><label for="77a5e8a9-e810-45ad-af51-4c469ee447bb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6da2dfd-bc02-4521-9565-4f26095383af" type="checkbox" ><label for="c6da2dfd-bc02-4521-9565-4f26095383af" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
