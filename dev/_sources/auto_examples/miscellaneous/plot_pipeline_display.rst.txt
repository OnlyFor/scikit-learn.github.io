
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f60688a8-c10f-4f92-b748-cc624324dff2 {color: black;background-color: white;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 pre{padding: 0;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-toggleable {background-color: white;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-item {z-index: 1;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-parallel-item:only-child::after {width: 0;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f60688a8-c10f-4f92-b748-cc624324dff2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f60688a8-c10f-4f92-b748-cc624324dff2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3247bd4b-4352-4d69-88bf-a70713fffdd6" type="checkbox" ><label for="3247bd4b-4352-4d69-88bf-a70713fffdd6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1fbd964-af79-4123-a95d-bf9135a1729a" type="checkbox" ><label for="b1fbd964-af79-4123-a95d-bf9135a1729a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01134529-fdaa-4b88-9eac-87bbc41062d9" type="checkbox" ><label for="01134529-fdaa-4b88-9eac-87bbc41062d9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-775aecd5-4983-4c06-9907-ed51bedfee4f {color: black;background-color: white;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f pre{padding: 0;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-toggleable {background-color: white;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-estimator:hover {background-color: #d4ebff;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-item {z-index: 1;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-parallel-item:only-child::after {width: 0;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-775aecd5-4983-4c06-9907-ed51bedfee4f div.sk-text-repr-fallback {display: none;}</style><div id="sk-775aecd5-4983-4c06-9907-ed51bedfee4f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e63a0dee-4736-4d43-a05e-0b62bfc9bda7" type="checkbox" ><label for="e63a0dee-4736-4d43-a05e-0b62bfc9bda7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a93d208d-0328-4133-8776-86c10b5f3422" type="checkbox" ><label for="a93d208d-0328-4133-8776-86c10b5f3422" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e661f50-cce6-4132-83ed-6677cb8a4d6d" type="checkbox" ><label for="2e661f50-cce6-4132-83ed-6677cb8a4d6d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfc8c06d-4f96-4608-990f-10936bd2e6fc" type="checkbox" ><label for="dfc8c06d-4f96-4608-990f-10936bd2e6fc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a {color: black;background-color: white;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a pre{padding: 0;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-toggleable {background-color: white;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-estimator:hover {background-color: #d4ebff;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-item {z-index: 1;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-parallel-item:only-child::after {width: 0;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a div.sk-text-repr-fallback {display: none;}</style><div id="sk-9a479f55-c62b-4ffe-98ba-4e1d95caa26a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da1e1480-63d3-4d9b-a421-03fe3abc4a19" type="checkbox" ><label for="da1e1480-63d3-4d9b-a421-03fe3abc4a19" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9398f2c-be06-4240-b2de-19cc85a114d2" type="checkbox" ><label for="e9398f2c-be06-4240-b2de-19cc85a114d2" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="640c0088-a952-41fa-a50b-fcedf15a87da" type="checkbox" ><label for="640c0088-a952-41fa-a50b-fcedf15a87da" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 {color: black;background-color: white;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 pre{padding: 0;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-toggleable {background-color: white;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-item {z-index: 1;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-parallel-item:only-child::after {width: 0;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a53985ce-ba5c-462f-ab84-4e9f3ea827b5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cac3d9cc-4329-46bf-b205-d93b627acb4c" type="checkbox" ><label for="cac3d9cc-4329-46bf-b205-d93b627acb4c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ced5a046-ae22-445d-8fb3-d0eac519d207" type="checkbox" ><label for="ced5a046-ae22-445d-8fb3-d0eac519d207" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a774612-50d3-470c-aafb-2cec54d10d42" type="checkbox" ><label for="2a774612-50d3-470c-aafb-2cec54d10d42" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1ea8840-87e6-40c2-9a74-d43fe1a5c92c" type="checkbox" ><label for="f1ea8840-87e6-40c2-9a74-d43fe1a5c92c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc2ac7ec-fd24-4836-9eaa-ec130d9bb3a6" type="checkbox" ><label for="fc2ac7ec-fd24-4836-9eaa-ec130d9bb3a6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3e02d0d-e29e-4378-9626-ba027c9d45a0" type="checkbox" ><label for="d3e02d0d-e29e-4378-9626-ba027c9d45a0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="846f9fdc-d652-463c-b30d-894793be0b52" type="checkbox" ><label for="846f9fdc-d652-463c-b30d-894793be0b52" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a45edcc5-1313-483d-aaba-c79287e55663" type="checkbox" ><label for="a45edcc5-1313-483d-aaba-c79287e55663" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fba3945d-74ca-4c62-8a33-949a29cc8e90" type="checkbox" ><label for="fba3945d-74ca-4c62-8a33-949a29cc8e90" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 {color: black;background-color: white;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 pre{padding: 0;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-toggleable {background-color: white;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-estimator:hover {background-color: #d4ebff;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-item {z-index: 1;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-parallel-item:only-child::after {width: 0;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16 div.sk-text-repr-fallback {display: none;}</style><div id="sk-91dc8ae1-d4f9-4c5e-b460-32c6b1914b16" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b40e148d-756f-4f0e-9eac-631fd97128cf" type="checkbox" ><label for="b40e148d-756f-4f0e-9eac-631fd97128cf" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfbbdbba-267d-4b03-bd35-fe2394d7be54" type="checkbox" ><label for="dfbbdbba-267d-4b03-bd35-fe2394d7be54" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="324f1806-f1fc-42d6-9de3-30e4a3a0256b" type="checkbox" ><label for="324f1806-f1fc-42d6-9de3-30e4a3a0256b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02b95859-758e-4718-adfb-be3a975c6dab" type="checkbox" ><label for="02b95859-758e-4718-adfb-be3a975c6dab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7896639-096f-4d3e-8a62-37116c613317" type="checkbox" ><label for="c7896639-096f-4d3e-8a62-37116c613317" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="add11ff3-41c3-48f7-98a7-76de272f0ab7" type="checkbox" ><label for="add11ff3-41c3-48f7-98a7-76de272f0ab7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f4d439c-f992-4f62-a133-34be0941766d" type="checkbox" ><label for="8f4d439c-f992-4f62-a133-34be0941766d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acb560a1-affd-40d6-a58c-a0bd364a525d" type="checkbox" ><label for="acb560a1-affd-40d6-a58c-a0bd364a525d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c614cebc-548b-4d52-9f2b-9b1a6e9fd1cd" type="checkbox" ><label for="c614cebc-548b-4d52-9f2b-9b1a6e9fd1cd" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
