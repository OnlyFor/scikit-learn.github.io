
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d {color: black;background-color: white;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d pre{padding: 0;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-toggleable {background-color: white;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-estimator:hover {background-color: #d4ebff;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-item {z-index: 1;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-parallel-item:only-child::after {width: 0;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d div.sk-text-repr-fallback {display: none;}</style><div id="sk-b70acf5c-a9a6-4241-9f2d-6baff388df1d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db8f9296-a275-4131-81ef-6fee9a12bfeb" type="checkbox" ><label for="db8f9296-a275-4131-81ef-6fee9a12bfeb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bdbd50a-7d04-491b-a3bd-a84fae00e042" type="checkbox" ><label for="0bdbd50a-7d04-491b-a3bd-a84fae00e042" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b758752-b9b0-4f0f-b8bc-a7b0735074c5" type="checkbox" ><label for="8b758752-b9b0-4f0f-b8bc-a7b0735074c5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b {color: black;background-color: white;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b pre{padding: 0;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-toggleable {background-color: white;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-estimator:hover {background-color: #d4ebff;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-item {z-index: 1;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-parallel-item:only-child::after {width: 0;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b div.sk-text-repr-fallback {display: none;}</style><div id="sk-9bf7bec5-0c64-40ac-bdc9-092ea977a17b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a707147f-3afd-4228-bc52-49f9e0b7376c" type="checkbox" ><label for="a707147f-3afd-4228-bc52-49f9e0b7376c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="017474ca-fe80-450e-af6c-bb5080d52d90" type="checkbox" ><label for="017474ca-fe80-450e-af6c-bb5080d52d90" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="812e97c6-aa20-4369-bdd8-e4afeee697fe" type="checkbox" ><label for="812e97c6-aa20-4369-bdd8-e4afeee697fe" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcdb4ddb-90c9-4ddd-8126-4dd9c58e869e" type="checkbox" ><label for="bcdb4ddb-90c9-4ddd-8126-4dd9c58e869e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 {color: black;background-color: white;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 pre{padding: 0;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-toggleable {background-color: white;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-item {z-index: 1;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-parallel-item:only-child::after {width: 0;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3aacff3b-99d2-43f5-8e94-4001d053b0c5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c1a7296-d533-46e1-ac7b-c613c552dc07" type="checkbox" ><label for="8c1a7296-d533-46e1-ac7b-c613c552dc07" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59d5a2dd-1de0-4c7a-ba54-9754d43a52b9" type="checkbox" ><label for="59d5a2dd-1de0-4c7a-ba54-9754d43a52b9" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="724fa38a-8616-40bc-a772-228be4b7cf26" type="checkbox" ><label for="724fa38a-8616-40bc-a772-228be4b7cf26" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8f37a889-8199-4597-b741-996ef636830c {color: black;background-color: white;}#sk-8f37a889-8199-4597-b741-996ef636830c pre{padding: 0;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-toggleable {background-color: white;}#sk-8f37a889-8199-4597-b741-996ef636830c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8f37a889-8199-4597-b741-996ef636830c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8f37a889-8199-4597-b741-996ef636830c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8f37a889-8199-4597-b741-996ef636830c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8f37a889-8199-4597-b741-996ef636830c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f37a889-8199-4597-b741-996ef636830c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-estimator:hover {background-color: #d4ebff;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-item {z-index: 1;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-parallel-item:only-child::after {width: 0;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8f37a889-8199-4597-b741-996ef636830c div.sk-text-repr-fallback {display: none;}</style><div id="sk-8f37a889-8199-4597-b741-996ef636830c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94938a5a-9f4d-40a3-83cc-1739798dc6d0" type="checkbox" ><label for="94938a5a-9f4d-40a3-83cc-1739798dc6d0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="920b6740-77c5-4eb4-8572-f37b0e36c46f" type="checkbox" ><label for="920b6740-77c5-4eb4-8572-f37b0e36c46f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1049883-c6d8-49e8-97b1-faa3f9f6a399" type="checkbox" ><label for="d1049883-c6d8-49e8-97b1-faa3f9f6a399" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="022b0f3f-74e6-4482-a158-c67e6dd0f583" type="checkbox" ><label for="022b0f3f-74e6-4482-a158-c67e6dd0f583" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a32a97b-156c-4e0b-b7ec-4d7222081e64" type="checkbox" ><label for="8a32a97b-156c-4e0b-b7ec-4d7222081e64" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9838e65-e838-4424-92b8-f2ae82c09017" type="checkbox" ><label for="c9838e65-e838-4424-92b8-f2ae82c09017" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5848ddf-21d7-4db5-ba0b-30cfcde239ab" type="checkbox" ><label for="d5848ddf-21d7-4db5-ba0b-30cfcde239ab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bc89c2f-cc48-498a-925d-a748c922eaf6" type="checkbox" ><label for="7bc89c2f-cc48-498a-925d-a748c922eaf6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ea409f9-3318-4b78-a8bf-8f3deb53be69" type="checkbox" ><label for="7ea409f9-3318-4b78-a8bf-8f3deb53be69" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9e859688-2115-41f3-ae8d-21a61c107935 {color: black;background-color: white;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 pre{padding: 0;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-toggleable {background-color: white;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-item {z-index: 1;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-parallel-item:only-child::after {width: 0;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9e859688-2115-41f3-ae8d-21a61c107935 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9e859688-2115-41f3-ae8d-21a61c107935" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2999fb4-35aa-4ed1-9944-c2ac66b580aa" type="checkbox" ><label for="a2999fb4-35aa-4ed1-9944-c2ac66b580aa" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e055d234-e4e9-4fe0-8d12-148673e32d2e" type="checkbox" ><label for="e055d234-e4e9-4fe0-8d12-148673e32d2e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cf7c62f-d48f-4172-8a48-698e76126578" type="checkbox" ><label for="9cf7c62f-d48f-4172-8a48-698e76126578" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="009d517b-014e-43ed-bad4-7afd6d958b37" type="checkbox" ><label for="009d517b-014e-43ed-bad4-7afd6d958b37" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="296f7808-e43f-44d6-b208-78932b113981" type="checkbox" ><label for="296f7808-e43f-44d6-b208-78932b113981" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b459185c-47b1-4a7a-9fe5-aacbb93386e7" type="checkbox" ><label for="b459185c-47b1-4a7a-9fe5-aacbb93386e7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d49b39b-4721-4e6d-b409-9034b52f52fc" type="checkbox" ><label for="1d49b39b-4721-4e6d-b409-9034b52f52fc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59aed2dd-f3b1-4ab3-b436-5ff346667ced" type="checkbox" ><label for="59aed2dd-f3b1-4ab3-b436-5ff346667ced" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11bdf0e6-01a3-4ea9-8591-bb02dbb613c2" type="checkbox" ><label for="11bdf0e6-01a3-4ea9-8591-bb02dbb613c2" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
