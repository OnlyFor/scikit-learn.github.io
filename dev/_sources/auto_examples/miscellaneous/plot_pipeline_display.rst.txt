
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline in a Jupyter Notebook is
`'diagram'` where `set_config(display='diagram')`. To deactivate HTML representation,
use `set_config(display='text')`.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To visualize the diagram, the default is `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ded1e613-ce65-4562-a731-81c931650b9d {color: black;background-color: white;}#sk-ded1e613-ce65-4562-a731-81c931650b9d pre{padding: 0;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-toggleable {background-color: white;}#sk-ded1e613-ce65-4562-a731-81c931650b9d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ded1e613-ce65-4562-a731-81c931650b9d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ded1e613-ce65-4562-a731-81c931650b9d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ded1e613-ce65-4562-a731-81c931650b9d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ded1e613-ce65-4562-a731-81c931650b9d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded1e613-ce65-4562-a731-81c931650b9d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-estimator:hover {background-color: #d4ebff;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-item {z-index: 1;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-parallel-item:only-child::after {width: 0;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ded1e613-ce65-4562-a731-81c931650b9d div.sk-text-repr-fallback {display: none;}</style><div id="sk-ded1e613-ce65-4562-a731-81c931650b9d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40f793e4-c203-4c91-88fb-0bd99cb611b9" type="checkbox" ><label for="40f793e4-c203-4c91-88fb-0bd99cb611b9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0415cee9-375d-4cb1-9bdc-1ee2723379c6" type="checkbox" ><label for="0415cee9-375d-4cb1-9bdc-1ee2723379c6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4179543a-0ac4-4018-b898-197cb5b2d239" type="checkbox" ><label for="4179543a-0ac4-4018-b898-197cb5b2d239" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-40

To view the text pipeline, change to `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 44-45

Put back the default display

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    set_config(display="diagram")








.. GENERATED FROM PYTHON SOURCE LINES 48-55

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifier step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 55-68

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 {color: black;background-color: white;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 pre{padding: 0;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-toggleable {background-color: white;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-estimator:hover {background-color: #d4ebff;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-item {z-index: 1;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-parallel-item:only-child::after {width: 0;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902 div.sk-text-repr-fallback {display: none;}</style><div id="sk-97c9884b-d536-4ce5-8d0c-9c08fd23c902" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bdadda3-d09b-421a-aa10-597d4d81c8fd" type="checkbox" ><label for="2bdadda3-d09b-421a-aa10-597d4d81c8fd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d196b53-0eca-4187-8f34-99f9b9935ef7" type="checkbox" ><label for="8d196b53-0eca-4187-8f34-99f9b9935ef7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89622780-f015-49ff-9c94-bc6603fa3955" type="checkbox" ><label for="89622780-f015-49ff-9c94-bc6603fa3955" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7aa62dc8-156b-40a9-bfbf-4fa849ed7f01" type="checkbox" ><label for="7aa62dc8-156b-40a9-bfbf-4fa849ed7f01" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-75

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 75-84

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-597e55bc-b62f-475a-893c-c20c3a71a736 {color: black;background-color: white;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 pre{padding: 0;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-toggleable {background-color: white;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-estimator:hover {background-color: #d4ebff;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-item {z-index: 1;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-parallel-item:only-child::after {width: 0;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-597e55bc-b62f-475a-893c-c20c3a71a736 div.sk-text-repr-fallback {display: none;}</style><div id="sk-597e55bc-b62f-475a-893c-c20c3a71a736" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd67268b-42d6-47bd-bd5e-dd0a41181871" type="checkbox" ><label for="bd67268b-42d6-47bd-bd5e-dd0a41181871" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94d58948-e971-4223-8dde-3a679747186b" type="checkbox" ><label for="94d58948-e971-4223-8dde-3a679747186b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aba6613f-f6b1-4215-9e58-58ad6bd18614" type="checkbox" ><label for="aba6613f-f6b1-4215-9e58-58ad6bd18614" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-91

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 91-127

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 {color: black;background-color: white;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 pre{padding: 0;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-toggleable {background-color: white;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-item {z-index: 1;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-parallel-item:only-child::after {width: 0;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3c23fa4a-576c-4117-ad4e-241cf3a57584 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3c23fa4a-576c-4117-ad4e-241cf3a57584" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18a3e6e3-95a3-452b-a7fe-5e28f05a2f9d" type="checkbox" ><label for="18a3e6e3-95a3-452b-a7fe-5e28f05a2f9d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="faaf10d7-2bf1-45d1-9439-7d783911b161" type="checkbox" ><label for="faaf10d7-2bf1-45d1-9439-7d783911b161" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="906da168-e3c2-43f1-bb46-5ff39531770f" type="checkbox" ><label for="906da168-e3c2-43f1-bb46-5ff39531770f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="beb18bb2-407c-4687-b150-c6375400b4d4" type="checkbox" ><label for="beb18bb2-407c-4687-b150-c6375400b4d4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21891be6-c209-4300-a2c9-2d3588799a66" type="checkbox" ><label for="21891be6-c209-4300-a2c9-2d3588799a66" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4342a4ff-cea3-44b3-9edc-b407c0e7147d" type="checkbox" ><label for="4342a4ff-cea3-44b3-9edc-b407c0e7147d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ede9891-689a-428f-b6a0-5c3705a7ae9a" type="checkbox" ><label for="2ede9891-689a-428f-b6a0-5c3705a7ae9a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba9297aa-c433-41d9-9c92-dc2af07c77f7" type="checkbox" ><label for="ba9297aa-c433-41d9-9c92-dc2af07c77f7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24d0d550-a4c8-40f4-b2c3-77cb9c6fd75e" type="checkbox" ><label for="24d0d550-a4c8-40f4-b2c3-77cb9c6fd75e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 128-134

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 134-181

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ff29479f-996e-4c73-9e58-8650e169959e {color: black;background-color: white;}#sk-ff29479f-996e-4c73-9e58-8650e169959e pre{padding: 0;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-toggleable {background-color: white;}#sk-ff29479f-996e-4c73-9e58-8650e169959e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ff29479f-996e-4c73-9e58-8650e169959e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ff29479f-996e-4c73-9e58-8650e169959e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ff29479f-996e-4c73-9e58-8650e169959e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ff29479f-996e-4c73-9e58-8650e169959e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff29479f-996e-4c73-9e58-8650e169959e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-estimator:hover {background-color: #d4ebff;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-item {z-index: 1;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-parallel-item:only-child::after {width: 0;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ff29479f-996e-4c73-9e58-8650e169959e div.sk-text-repr-fallback {display: none;}</style><div id="sk-ff29479f-996e-4c73-9e58-8650e169959e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5a0ee59-7b47-4aa4-bb03-b1a3c51991ac" type="checkbox" ><label for="a5a0ee59-7b47-4aa4-bb03-b1a3c51991ac" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4bbe2eb-140e-41dd-8431-810a7f5320ee" type="checkbox" ><label for="a4bbe2eb-140e-41dd-8431-810a7f5320ee" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a32d4f5e-afdf-498c-b1cc-03d784dd9644" type="checkbox" ><label for="a32d4f5e-afdf-498c-b1cc-03d784dd9644" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a89e6b0-9d53-401d-b2ae-984d52e7f759" type="checkbox" ><label for="4a89e6b0-9d53-401d-b2ae-984d52e7f759" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2e44b57-cfb7-4c0f-b01a-a651bf63fd83" type="checkbox" ><label for="c2e44b57-cfb7-4c0f-b01a-a651bf63fd83" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="942e9ba0-b41a-43bd-bac1-99d96f3dc379" type="checkbox" ><label for="942e9ba0-b41a-43bd-bac1-99d96f3dc379" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="184ce48a-ed11-4f55-bce1-1140070e53db" type="checkbox" ><label for="184ce48a-ed11-4f55-bce1-1140070e53db" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d051139a-47f8-451d-9b64-7212e9dee1f9" type="checkbox" ><label for="d051139a-47f8-451d-9b64-7212e9dee1f9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c91eef38-e09c-43b1-895f-3440776982a6" type="checkbox" ><label for="c91eef38-e09c-43b1-895f-3440776982a6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12f4d054-1e1f-4b31-8f44-5a10a107553e" type="checkbox" ><label for="12f4d054-1e1f-4b31-8f44-5a10a107553e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.162 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
