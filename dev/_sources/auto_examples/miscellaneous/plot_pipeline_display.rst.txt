
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb {color: black;background-color: white;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb pre{padding: 0;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-toggleable {background-color: white;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-estimator:hover {background-color: #d4ebff;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-item {z-index: 1;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-parallel-item:only-child::after {width: 0;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb div.sk-text-repr-fallback {display: none;}</style><div id="sk-878c581c-852b-43b4-a9ce-ed58e3ce0adb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbc63ec3-a5ae-4901-a85c-a6e719474c1a" type="checkbox" ><label for="fbc63ec3-a5ae-4901-a85c-a6e719474c1a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03b16457-e89a-44c4-b4f0-7a231e4ffdc4" type="checkbox" ><label for="03b16457-e89a-44c4-b4f0-7a231e4ffdc4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ef27bf2-8633-4802-8468-235a31f8d0a2" type="checkbox" ><label for="2ef27bf2-8633-4802-8468-235a31f8d0a2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 {color: black;background-color: white;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 pre{padding: 0;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-toggleable {background-color: white;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-estimator:hover {background-color: #d4ebff;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-item {z-index: 1;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-parallel-item:only-child::after {width: 0;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-08e49d32-4b79-4e20-b70d-7552b5407f42 div.sk-text-repr-fallback {display: none;}</style><div id="sk-08e49d32-4b79-4e20-b70d-7552b5407f42" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ba346ec-c38b-4e39-b577-7ff2b6d321cc" type="checkbox" ><label for="8ba346ec-c38b-4e39-b577-7ff2b6d321cc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66b0f173-1618-4861-bde8-bfe6a9016465" type="checkbox" ><label for="66b0f173-1618-4861-bde8-bfe6a9016465" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae07bf66-0b3d-4d10-aef3-fa2fa702593e" type="checkbox" ><label for="ae07bf66-0b3d-4d10-aef3-fa2fa702593e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="171854c1-ec4d-4d59-97c6-e6458d764714" type="checkbox" ><label for="171854c1-ec4d-4d59-97c6-e6458d764714" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-77901056-aee6-423e-938b-9e82c81e76f2 {color: black;background-color: white;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 pre{padding: 0;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-toggleable {background-color: white;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-item {z-index: 1;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-parallel-item:only-child::after {width: 0;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-77901056-aee6-423e-938b-9e82c81e76f2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-77901056-aee6-423e-938b-9e82c81e76f2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c10c9b24-96a5-4fe1-8c9b-ab1bcaeac15d" type="checkbox" ><label for="c10c9b24-96a5-4fe1-8c9b-ab1bcaeac15d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8480adf7-0e1a-4c5e-ae0e-6ccacb87ccaa" type="checkbox" ><label for="8480adf7-0e1a-4c5e-ae0e-6ccacb87ccaa" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fb54b50-8454-4d19-91f2-5620863d603b" type="checkbox" ><label for="2fb54b50-8454-4d19-91f2-5620863d603b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 {color: black;background-color: white;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 pre{padding: 0;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-toggleable {background-color: white;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-item {z-index: 1;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-parallel-item:only-child::after {width: 0;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1e90fff0-4d8e-441e-b55c-d4525de2f2f2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcc387b3-a268-4af0-9760-1acaef43cd58" type="checkbox" ><label for="fcc387b3-a268-4af0-9760-1acaef43cd58" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5cd400d-dacd-4904-984e-a180f3750af4" type="checkbox" ><label for="f5cd400d-dacd-4904-984e-a180f3750af4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33de00a8-0e8e-40e8-96cd-792ad7d406dc" type="checkbox" ><label for="33de00a8-0e8e-40e8-96cd-792ad7d406dc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6310ec9-92ff-4484-a876-8fb411022abd" type="checkbox" ><label for="a6310ec9-92ff-4484-a876-8fb411022abd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d217c31c-b882-49ba-a083-0c228e06e50d" type="checkbox" ><label for="d217c31c-b882-49ba-a083-0c228e06e50d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a046abf-8244-4f4e-a63f-9fae37dd0aab" type="checkbox" ><label for="5a046abf-8244-4f4e-a63f-9fae37dd0aab" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2097d37-45e0-427a-85a1-7a1e171f1585" type="checkbox" ><label for="d2097d37-45e0-427a-85a1-7a1e171f1585" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c54359c7-df93-411d-bd4a-134cfdce822d" type="checkbox" ><label for="c54359c7-df93-411d-bd4a-134cfdce822d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d582a2ce-74de-4179-bfde-aac92bd3f8f2" type="checkbox" ><label for="d582a2ce-74de-4179-bfde-aac92bd3f8f2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf {color: black;background-color: white;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf pre{padding: 0;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-toggleable {background-color: white;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-estimator:hover {background-color: #d4ebff;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-item {z-index: 1;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-parallel-item:only-child::after {width: 0;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf div.sk-text-repr-fallback {display: none;}</style><div id="sk-ea23b5f1-8ab7-461d-aa25-409ce772c2cf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2698f1c9-1baa-4e53-87d5-0cb62efc5a4a" type="checkbox" ><label for="2698f1c9-1baa-4e53-87d5-0cb62efc5a4a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e60486d4-9b7d-4d7b-a156-2e265527ac57" type="checkbox" ><label for="e60486d4-9b7d-4d7b-a156-2e265527ac57" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59c1ed6c-9288-47ac-b1f5-beb4f682883b" type="checkbox" ><label for="59c1ed6c-9288-47ac-b1f5-beb4f682883b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe76eb25-9177-4862-85d7-54054f496345" type="checkbox" ><label for="fe76eb25-9177-4862-85d7-54054f496345" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02ec899e-9cb1-4012-9066-6664fd0ec02b" type="checkbox" ><label for="02ec899e-9cb1-4012-9066-6664fd0ec02b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffcb5677-3a42-4fc3-875f-6abecdc7757a" type="checkbox" ><label for="ffcb5677-3a42-4fc3-875f-6abecdc7757a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7dbf209f-1c01-4c02-9be4-494666ee2579" type="checkbox" ><label for="7dbf209f-1c01-4c02-9be4-494666ee2579" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49903a33-c4fc-451b-899c-33b09874ad2f" type="checkbox" ><label for="49903a33-c4fc-451b-899c-33b09874ad2f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d27c1f4d-ec98-44c6-80d3-5be50b55bb59" type="checkbox" ><label for="d27c1f4d-ec98-44c6-80d3-5be50b55bb59" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
