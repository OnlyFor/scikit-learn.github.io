
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b {color: black;background-color: white;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b pre{padding: 0;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-toggleable {background-color: white;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-estimator:hover {background-color: #d4ebff;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-item {z-index: 1;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-parallel-item:only-child::after {width: 0;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-container {display: inline-block;position: relative;}#sk-329df9d6-1e5f-4e70-a464-5700e7c7871b div.sk-text-repr-fallback {display: none;}</style><div id="sk-329df9d6-1e5f-4e70-a464-5700e7c7871b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d521718f-35f2-419f-a382-9d3eb7bbd5e2" type="checkbox" ><label class="sk-toggleable__label" for="d521718f-35f2-419f-a382-9d3eb7bbd5e2">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b482fdda-1234-4a29-8fae-30e125ad05f7" type="checkbox" ><label class="sk-toggleable__label" for="b482fdda-1234-4a29-8fae-30e125ad05f7">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7984a904-ce76-400b-8ec0-540b77b962ec" type="checkbox" ><label class="sk-toggleable__label" for="7984a904-ce76-400b-8ec0-540b77b962ec">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c {color: black;background-color: white;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c pre{padding: 0;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-toggleable {background-color: white;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-estimator:hover {background-color: #d4ebff;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-item {z-index: 1;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-parallel-item:only-child::after {width: 0;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-container {display: inline-block;position: relative;}#sk-e0b9fb42-a131-414d-a14a-f78ee68d964c div.sk-text-repr-fallback {display: none;}</style><div id="sk-e0b9fb42-a131-414d-a14a-f78ee68d964c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3599d413-7528-48c3-bb91-2aaecac4233c" type="checkbox" ><label class="sk-toggleable__label" for="3599d413-7528-48c3-bb91-2aaecac4233c">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9654322-c235-4948-a1ca-e1e498d9635e" type="checkbox" ><label class="sk-toggleable__label" for="f9654322-c235-4948-a1ca-e1e498d9635e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="242a30b1-f276-45bc-bda1-dbaaad86e37f" type="checkbox" ><label class="sk-toggleable__label" for="242a30b1-f276-45bc-bda1-dbaaad86e37f">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53e42c84-4a90-488f-9839-046d78369a16" type="checkbox" ><label class="sk-toggleable__label" for="53e42c84-4a90-488f-9839-046d78369a16">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e {color: black;background-color: white;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e pre{padding: 0;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-toggleable {background-color: white;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-estimator:hover {background-color: #d4ebff;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-item {z-index: 1;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-parallel-item:only-child::after {width: 0;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-container {display: inline-block;position: relative;}#sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e div.sk-text-repr-fallback {display: none;}</style><div id="sk-437754f4-df68-4a99-9b3f-73b1eeb76b3e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f22d321-a943-4e9a-8d0c-3780b1147e75" type="checkbox" ><label class="sk-toggleable__label" for="1f22d321-a943-4e9a-8d0c-3780b1147e75">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45c8d11d-cfda-40b8-abeb-b5e3f4a804a4" type="checkbox" ><label class="sk-toggleable__label" for="45c8d11d-cfda-40b8-abeb-b5e3f4a804a4">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89191e7a-d892-49b2-8a52-710b130977e7" type="checkbox" ><label class="sk-toggleable__label" for="89191e7a-d892-49b2-8a52-710b130977e7">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1c999326-fd86-4979-a2fa-6511fdbc265b {color: black;background-color: white;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b pre{padding: 0;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-toggleable {background-color: white;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-estimator:hover {background-color: #d4ebff;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-item {z-index: 1;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-parallel-item:only-child::after {width: 0;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-container {display: inline-block;position: relative;}#sk-1c999326-fd86-4979-a2fa-6511fdbc265b div.sk-text-repr-fallback {display: none;}</style><div id="sk-1c999326-fd86-4979-a2fa-6511fdbc265b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b7331c5-7dfd-49ca-9a63-cb46e6b0d154" type="checkbox" ><label class="sk-toggleable__label" for="9b7331c5-7dfd-49ca-9a63-cb46e6b0d154">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be68ab2d-1cd3-4756-b938-7f34e24e49ee" type="checkbox" ><label class="sk-toggleable__label" for="be68ab2d-1cd3-4756-b938-7f34e24e49ee">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db042139-6a02-4903-84e6-783b7f21612f" type="checkbox" ><label class="sk-toggleable__label" for="db042139-6a02-4903-84e6-783b7f21612f">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d956592-9f52-4246-a98c-251887feda4f" type="checkbox" ><label class="sk-toggleable__label" for="5d956592-9f52-4246-a98c-251887feda4f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffc2297b-0732-484d-9536-a51906ef20d0" type="checkbox" ><label class="sk-toggleable__label" for="ffc2297b-0732-484d-9536-a51906ef20d0">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab649b05-9d57-4e2f-ba8d-ed5e9aa511e6" type="checkbox" ><label class="sk-toggleable__label" for="ab649b05-9d57-4e2f-ba8d-ed5e9aa511e6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b32a2b73-a321-4d71-9b67-9e50e259e31e" type="checkbox" ><label class="sk-toggleable__label" for="b32a2b73-a321-4d71-9b67-9e50e259e31e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62a1765b-50d6-4ce5-ba4e-8641bd11107b" type="checkbox" ><label class="sk-toggleable__label" for="62a1765b-50d6-4ce5-ba4e-8641bd11107b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63f7df95-2303-45e0-9b49-c45491e43fdd" type="checkbox" ><label class="sk-toggleable__label" for="63f7df95-2303-45e0-9b49-c45491e43fdd">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 {color: black;background-color: white;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 pre{padding: 0;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-toggleable {background-color: white;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-estimator:hover {background-color: #d4ebff;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-item {z-index: 1;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-parallel-item:only-child::after {width: 0;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-container {display: inline-block;position: relative;}#sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88 div.sk-text-repr-fallback {display: none;}</style><div id="sk-25e32a57-317f-4ea0-a0cc-f525c50c9b88" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc05a089-a48a-4dfb-bfc8-14ce1b992819" type="checkbox" ><label class="sk-toggleable__label" for="bc05a089-a48a-4dfb-bfc8-14ce1b992819">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07a564e9-a341-4a47-9a19-428c1cdb94c2" type="checkbox" ><label class="sk-toggleable__label" for="07a564e9-a341-4a47-9a19-428c1cdb94c2">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78944a53-350d-4539-b2c0-12b9eba7de6f" type="checkbox" ><label class="sk-toggleable__label" for="78944a53-350d-4539-b2c0-12b9eba7de6f">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6a03eb3-ab65-42d4-9089-b8f572ea2795" type="checkbox" ><label class="sk-toggleable__label" for="d6a03eb3-ab65-42d4-9089-b8f572ea2795">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e584125e-0426-45f6-9015-b2464dffc1fc" type="checkbox" ><label class="sk-toggleable__label" for="e584125e-0426-45f6-9015-b2464dffc1fc">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abe21766-041c-42fe-b7df-7edf1a87b665" type="checkbox" ><label class="sk-toggleable__label" for="abe21766-041c-42fe-b7df-7edf1a87b665">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="478d4619-23ad-4544-ab70-c16bb8d0379e" type="checkbox" ><label class="sk-toggleable__label" for="478d4619-23ad-4544-ab70-c16bb8d0379e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fa776a2-781f-45ae-ab10-f5db4a6ffb05" type="checkbox" ><label class="sk-toggleable__label" for="7fa776a2-781f-45ae-ab10-f5db4a6ffb05">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37d6fe23-14a1-4f26-869d-140783a29390" type="checkbox" ><label class="sk-toggleable__label" for="37d6fe23-14a1-4f26-869d-140783a29390">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
