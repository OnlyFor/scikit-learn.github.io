
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-329ed041-c935-4853-bc30-c1075fc385ab {color: black;background-color: white;}#sk-329ed041-c935-4853-bc30-c1075fc385ab pre{padding: 0;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-toggleable {background-color: white;}#sk-329ed041-c935-4853-bc30-c1075fc385ab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-329ed041-c935-4853-bc30-c1075fc385ab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-329ed041-c935-4853-bc30-c1075fc385ab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-329ed041-c935-4853-bc30-c1075fc385ab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-329ed041-c935-4853-bc30-c1075fc385ab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-329ed041-c935-4853-bc30-c1075fc385ab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-estimator:hover {background-color: #d4ebff;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-item {z-index: 1;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-parallel-item:only-child::after {width: 0;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-329ed041-c935-4853-bc30-c1075fc385ab div.sk-text-repr-fallback {display: none;}</style><div id="sk-329ed041-c935-4853-bc30-c1075fc385ab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="419807ee-c83c-4fb9-8ca4-a48cba971220" type="checkbox" ><label for="419807ee-c83c-4fb9-8ca4-a48cba971220" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df8667ec-f378-443e-b5ac-c2b158ba3031" type="checkbox" ><label for="df8667ec-f378-443e-b5ac-c2b158ba3031" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95c65e97-5343-42c3-aee4-aa61f5ad2038" type="checkbox" ><label for="95c65e97-5343-42c3-aee4-aa61f5ad2038" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e {color: black;background-color: white;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e pre{padding: 0;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-toggleable {background-color: white;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-estimator:hover {background-color: #d4ebff;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-item {z-index: 1;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-parallel-item:only-child::after {width: 0;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e div.sk-text-repr-fallback {display: none;}</style><div id="sk-403ce6a4-49f6-4ddd-9707-a39d7521c87e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2971628-a7f2-4a62-b39b-8019ace5ba56" type="checkbox" ><label for="d2971628-a7f2-4a62-b39b-8019ace5ba56" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fceba11-6679-4d5b-a38d-8458ee737917" type="checkbox" ><label for="2fceba11-6679-4d5b-a38d-8458ee737917" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db91aad4-b3c9-43d8-993d-1912d44823ef" type="checkbox" ><label for="db91aad4-b3c9-43d8-993d-1912d44823ef" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b20c7ec9-50bb-45d7-a4f8-45e47f6c1574" type="checkbox" ><label for="b20c7ec9-50bb-45d7-a4f8-45e47f6c1574" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 {color: black;background-color: white;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 pre{padding: 0;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-toggleable {background-color: white;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-item {z-index: 1;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-parallel-item:only-child::after {width: 0;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b4dd8daf-fa5c-4724-b4dc-11415e770a01" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5be4d0b-2365-4bd1-8841-d21ee5be838e" type="checkbox" ><label for="d5be4d0b-2365-4bd1-8841-d21ee5be838e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="650c2f97-e9fc-44a9-b21c-db3f4d34fa2a" type="checkbox" ><label for="650c2f97-e9fc-44a9-b21c-db3f4d34fa2a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f401b57-e886-4c8d-b620-790f87b609c5" type="checkbox" ><label for="2f401b57-e886-4c8d-b620-790f87b609c5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 {color: black;background-color: white;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 pre{padding: 0;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-toggleable {background-color: white;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-item {z-index: 1;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-parallel-item:only-child::after {width: 0;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-89d70a25-548a-4e0e-a9a0-a389e17498d1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-89d70a25-548a-4e0e-a9a0-a389e17498d1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b812ed5-aa60-4281-a655-1c344bf7d825" type="checkbox" ><label for="7b812ed5-aa60-4281-a655-1c344bf7d825" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0549ff89-8a90-4c16-9c32-5db0cfaa2832" type="checkbox" ><label for="0549ff89-8a90-4c16-9c32-5db0cfaa2832" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b68f2864-e0e3-4cec-b3de-97054eb4ef80" type="checkbox" ><label for="b68f2864-e0e3-4cec-b3de-97054eb4ef80" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa45dce3-c9e4-4042-a473-62ba133dcce6" type="checkbox" ><label for="fa45dce3-c9e4-4042-a473-62ba133dcce6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc8a316c-1d90-4146-bc8c-b09beb4e68d0" type="checkbox" ><label for="dc8a316c-1d90-4146-bc8c-b09beb4e68d0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="589449eb-e7e1-4cd5-a506-d3ba762135ca" type="checkbox" ><label for="589449eb-e7e1-4cd5-a506-d3ba762135ca" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1317eb7c-dc3a-40bb-9eb2-62bce6340b82" type="checkbox" ><label for="1317eb7c-dc3a-40bb-9eb2-62bce6340b82" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64c13372-269a-47f9-bf00-8c81015a6bb4" type="checkbox" ><label for="64c13372-269a-47f9-bf00-8c81015a6bb4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffc178bd-e658-4363-9e04-52592c970e15" type="checkbox" ><label for="ffc178bd-e658-4363-9e04-52592c970e15" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 {color: black;background-color: white;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 pre{padding: 0;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-toggleable {background-color: white;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-item {z-index: 1;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-parallel-item:only-child::after {width: 0;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-28877c18-fdb0-4124-86ba-6fa619e36dc8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-28877c18-fdb0-4124-86ba-6fa619e36dc8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9f654cb-644c-474a-a295-86bbb5d626f2" type="checkbox" ><label for="a9f654cb-644c-474a-a295-86bbb5d626f2" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c19cb30-b74a-487d-9b92-2a6962d4b340" type="checkbox" ><label for="1c19cb30-b74a-487d-9b92-2a6962d4b340" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39fe44e3-639e-4572-aa32-2153426c6b4a" type="checkbox" ><label for="39fe44e3-639e-4572-aa32-2153426c6b4a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1386310d-0ba5-483d-b496-398f2ea6e1c5" type="checkbox" ><label for="1386310d-0ba5-483d-b496-398f2ea6e1c5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77a10699-c7d6-48c8-b01b-e3fa7c0d8dcd" type="checkbox" ><label for="77a10699-c7d6-48c8-b01b-e3fa7c0d8dcd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fc69ad7-c78a-4fbb-8f7b-ec96ef540296" type="checkbox" ><label for="2fc69ad7-c78a-4fbb-8f7b-ec96ef540296" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b56afa8-6919-47d2-ae48-0f456043195a" type="checkbox" ><label for="1b56afa8-6919-47d2-ae48-0f456043195a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0089a6bc-ff02-4418-b413-dfc738209ac2" type="checkbox" ><label for="0089a6bc-ff02-4418-b413-dfc738209ac2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53d1bf23-24a3-4cf2-9353-e0205c5ff09c" type="checkbox" ><label for="53d1bf23-24a3-4cf2-9353-e0205c5ff09c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
