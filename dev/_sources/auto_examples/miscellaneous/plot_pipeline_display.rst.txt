
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2a90be33-a5e3-476b-9166-12652524eb33 {color: black;background-color: white;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 pre{padding: 0;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-toggleable {background-color: white;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-item {z-index: 1;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-parallel-item:only-child::after {width: 0;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2a90be33-a5e3-476b-9166-12652524eb33 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2a90be33-a5e3-476b-9166-12652524eb33" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caef2e63-c0c5-4ce9-be47-37ea732ec275" type="checkbox" ><label for="caef2e63-c0c5-4ce9-be47-37ea732ec275" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="281aa7e0-039f-4cbf-9771-f807a027c7eb" type="checkbox" ><label for="281aa7e0-039f-4cbf-9771-f807a027c7eb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2149cb77-b8e0-494c-b33d-81d1746885e5" type="checkbox" ><label for="2149cb77-b8e0-494c-b33d-81d1746885e5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 {color: black;background-color: white;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 pre{padding: 0;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-toggleable {background-color: white;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-item {z-index: 1;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-parallel-item:only-child::after {width: 0;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c8d4d6ad-92ec-4131-b595-49ef5478eca5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ccce006-7e86-4616-8ae2-3a027fdde7e6" type="checkbox" ><label for="7ccce006-7e86-4616-8ae2-3a027fdde7e6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dec541ba-786d-46e1-8d7b-9be0d7e4be66" type="checkbox" ><label for="dec541ba-786d-46e1-8d7b-9be0d7e4be66" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a50020b4-832a-4cca-b14b-c465a94373f9" type="checkbox" ><label for="a50020b4-832a-4cca-b14b-c465a94373f9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c6015de-8a88-4c2f-94cc-0b707f2fd562" type="checkbox" ><label for="0c6015de-8a88-4c2f-94cc-0b707f2fd562" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c {color: black;background-color: white;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c pre{padding: 0;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-toggleable {background-color: white;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-estimator:hover {background-color: #d4ebff;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-item {z-index: 1;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-parallel-item:only-child::after {width: 0;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c div.sk-text-repr-fallback {display: none;}</style><div id="sk-649bd72f-8d9a-4242-9092-3db5b8b7f50c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16da18a1-0701-432b-9a73-8135daecd2e4" type="checkbox" ><label for="16da18a1-0701-432b-9a73-8135daecd2e4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d1d515d-9894-4573-b97d-9eadcbf47b46" type="checkbox" ><label for="3d1d515d-9894-4573-b97d-9eadcbf47b46" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2dab2eef-0eef-4189-8452-b88604394197" type="checkbox" ><label for="2dab2eef-0eef-4189-8452-b88604394197" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2396a0e2-872f-43d5-8842-395ca484e620 {color: black;background-color: white;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 pre{padding: 0;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-toggleable {background-color: white;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-item {z-index: 1;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-parallel-item:only-child::after {width: 0;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2396a0e2-872f-43d5-8842-395ca484e620 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2396a0e2-872f-43d5-8842-395ca484e620" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="069e69c3-b69d-4149-9559-face01f0c3bf" type="checkbox" ><label for="069e69c3-b69d-4149-9559-face01f0c3bf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33532494-140c-469f-b6b5-43f7cdde87a5" type="checkbox" ><label for="33532494-140c-469f-b6b5-43f7cdde87a5" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c86a473-4273-43f0-93c6-479602a48e47" type="checkbox" ><label for="0c86a473-4273-43f0-93c6-479602a48e47" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa952cec-be9d-4c71-84b7-0ebe4ca1b854" type="checkbox" ><label for="aa952cec-be9d-4c71-84b7-0ebe4ca1b854" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed086c6d-1f03-4fad-a29d-96b0f03c29a8" type="checkbox" ><label for="ed086c6d-1f03-4fad-a29d-96b0f03c29a8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bd08d3f-1640-4db4-aa2c-500fde1b0831" type="checkbox" ><label for="8bd08d3f-1640-4db4-aa2c-500fde1b0831" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="456eeee2-c4f6-4c03-a935-f45af1c88687" type="checkbox" ><label for="456eeee2-c4f6-4c03-a935-f45af1c88687" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5b05b03-92a2-4133-bc31-3d4003162a70" type="checkbox" ><label for="f5b05b03-92a2-4133-bc31-3d4003162a70" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ea0fc8c-f17e-4320-a69a-48bf8c23bd8c" type="checkbox" ><label for="1ea0fc8c-f17e-4320-a69a-48bf8c23bd8c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a {color: black;background-color: white;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a pre{padding: 0;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-toggleable {background-color: white;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-estimator:hover {background-color: #d4ebff;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-item {z-index: 1;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-parallel-item:only-child::after {width: 0;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0da592ff-5b5f-4657-82dd-f48b6329da9a div.sk-text-repr-fallback {display: none;}</style><div id="sk-0da592ff-5b5f-4657-82dd-f48b6329da9a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41063c27-4389-4a5f-bdc7-b8286144ff0a" type="checkbox" ><label for="41063c27-4389-4a5f-bdc7-b8286144ff0a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4a7c673-6768-42d3-af26-4367492e5f36" type="checkbox" ><label for="a4a7c673-6768-42d3-af26-4367492e5f36" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a87c4af6-8453-4249-a4b2-c746249031a6" type="checkbox" ><label for="a87c4af6-8453-4249-a4b2-c746249031a6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69edb8d8-c212-4ba2-9dbd-3e3bfec57468" type="checkbox" ><label for="69edb8d8-c212-4ba2-9dbd-3e3bfec57468" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9493e1a-c864-4244-90d5-6b0147ecaffb" type="checkbox" ><label for="b9493e1a-c864-4244-90d5-6b0147ecaffb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6467a55-6a29-4e6e-8631-71c12844a77a" type="checkbox" ><label for="a6467a55-6a29-4e6e-8631-71c12844a77a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8301dc07-7c07-473d-9c1e-389912830770" type="checkbox" ><label for="8301dc07-7c07-473d-9c1e-389912830770" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="042b41df-8dd5-4b9d-afe7-bc22f8ad17c6" type="checkbox" ><label for="042b41df-8dd5-4b9d-afe7-bc22f8ad17c6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce18ee0c-1d8c-4bc7-9540-07ec591b1b61" type="checkbox" ><label for="ce18ee0c-1d8c-4bc7-9540-07ec591b1b61" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
