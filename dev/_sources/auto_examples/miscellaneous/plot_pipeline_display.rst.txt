
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 {color: black;background-color: white;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 pre{padding: 0;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-toggleable {background-color: white;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-item {z-index: 1;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-parallel-item:only-child::after {width: 0;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-container {display: inline-block;position: relative;}#sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b5ed531-bbf8-44df-9b83-4a66ddd9b874" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="436e4db5-ebc0-4d66-bb66-0de31066218d" type="checkbox" ><label class="sk-toggleable__label" for="436e4db5-ebc0-4d66-bb66-0de31066218d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66c83bf1-beea-46c5-8610-51f67101f11a" type="checkbox" ><label class="sk-toggleable__label" for="66c83bf1-beea-46c5-8610-51f67101f11a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04507c85-51d1-4877-a480-5b65e7ab1fdb" type="checkbox" ><label class="sk-toggleable__label" for="04507c85-51d1-4877-a480-5b65e7ab1fdb">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc {color: black;background-color: white;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc pre{padding: 0;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-toggleable {background-color: white;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-estimator:hover {background-color: #d4ebff;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-item {z-index: 1;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-parallel-item:only-child::after {width: 0;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-container {display: inline-block;position: relative;}#sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc div.sk-text-repr-fallback {display: none;}</style><div id="sk-289b5ff2-b6e9-43f1-87d9-35d94044f1bc" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19447f05-b600-4f87-b3dd-34dca49d5a20" type="checkbox" ><label class="sk-toggleable__label" for="19447f05-b600-4f87-b3dd-34dca49d5a20">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="944fb751-9c30-45c2-a4cb-e60269a66fef" type="checkbox" ><label class="sk-toggleable__label" for="944fb751-9c30-45c2-a4cb-e60269a66fef">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0ef74b1-8a64-43f6-936b-e898eef2c0df" type="checkbox" ><label class="sk-toggleable__label" for="d0ef74b1-8a64-43f6-936b-e898eef2c0df">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f80e4a1-d696-4b0d-a720-bbb15d0dff1e" type="checkbox" ><label class="sk-toggleable__label" for="9f80e4a1-d696-4b0d-a720-bbb15d0dff1e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 {color: black;background-color: white;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 pre{padding: 0;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-toggleable {background-color: white;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-item {z-index: 1;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-parallel-item:only-child::after {width: 0;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-container {display: inline-block;position: relative;}#sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5ae4a3af-8b22-4055-93ae-3189cd6b8fc4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e38808e1-df2a-4b30-a0dc-a27e0a14d42b" type="checkbox" ><label class="sk-toggleable__label" for="e38808e1-df2a-4b30-a0dc-a27e0a14d42b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4718b80e-a071-40f2-9187-fdb410b49af1" type="checkbox" ><label class="sk-toggleable__label" for="4718b80e-a071-40f2-9187-fdb410b49af1">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fcabf17-7c46-45c5-9e4e-95f1a264081a" type="checkbox" ><label class="sk-toggleable__label" for="5fcabf17-7c46-45c5-9e4e-95f1a264081a">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 {color: black;background-color: white;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 pre{padding: 0;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-toggleable {background-color: white;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-item {z-index: 1;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-parallel-item:only-child::after {width: 0;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-container {display: inline-block;position: relative;}#sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8cc9bf72-9fd1-435c-96ec-85a42b300fd3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab92a2f5-760a-4afb-9d19-b60a1ac6a5a5" type="checkbox" ><label class="sk-toggleable__label" for="ab92a2f5-760a-4afb-9d19-b60a1ac6a5a5">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8d6d4a9-bd72-4fe3-b12d-a3e6e2b32a7c" type="checkbox" ><label class="sk-toggleable__label" for="d8d6d4a9-bd72-4fe3-b12d-a3e6e2b32a7c">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8470eb53-d258-4132-9d08-06b92d94c9dc" type="checkbox" ><label class="sk-toggleable__label" for="8470eb53-d258-4132-9d08-06b92d94c9dc">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7809afeb-d22d-4c74-8dcd-36e81a9c1831" type="checkbox" ><label class="sk-toggleable__label" for="7809afeb-d22d-4c74-8dcd-36e81a9c1831">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27d1fe3e-982a-46a7-b680-439c0ba3e5ba" type="checkbox" ><label class="sk-toggleable__label" for="27d1fe3e-982a-46a7-b680-439c0ba3e5ba">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ebfd37c-4e02-4680-98e9-b4a90da6ea0e" type="checkbox" ><label class="sk-toggleable__label" for="2ebfd37c-4e02-4680-98e9-b4a90da6ea0e">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64d1660a-6bff-4ec5-b665-f65df626b978" type="checkbox" ><label class="sk-toggleable__label" for="64d1660a-6bff-4ec5-b665-f65df626b978">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cb7fff2-9fd7-4c3d-9011-656dfb58d3a1" type="checkbox" ><label class="sk-toggleable__label" for="4cb7fff2-9fd7-4c3d-9011-656dfb58d3a1">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7507cf72-b7d1-4ef0-a598-0b6b77f047b3" type="checkbox" ><label class="sk-toggleable__label" for="7507cf72-b7d1-4ef0-a598-0b6b77f047b3">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 {color: black;background-color: white;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 pre{padding: 0;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-toggleable {background-color: white;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-item {z-index: 1;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-parallel-item:only-child::after {width: 0;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-container {display: inline-block;position: relative;}#sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-60647227-2298-4bc7-a00a-9acb0b8bb0f0" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afb78434-6925-49cc-92e6-222a9628418e" type="checkbox" ><label class="sk-toggleable__label" for="afb78434-6925-49cc-92e6-222a9628418e">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec379945-c023-42ea-a4d9-afc36a4db0de" type="checkbox" ><label class="sk-toggleable__label" for="ec379945-c023-42ea-a4d9-afc36a4db0de">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb849c06-8c84-41a8-995d-c53dc6f7eaa3" type="checkbox" ><label class="sk-toggleable__label" for="eb849c06-8c84-41a8-995d-c53dc6f7eaa3">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5ea21cf-6a08-4987-9ebf-0ac20c540657" type="checkbox" ><label class="sk-toggleable__label" for="d5ea21cf-6a08-4987-9ebf-0ac20c540657">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ba68691-ecc6-44f9-a759-0bab6ba7c244" type="checkbox" ><label class="sk-toggleable__label" for="7ba68691-ecc6-44f9-a759-0bab6ba7c244">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac9b042a-5b3b-465f-add3-301a8b13de2d" type="checkbox" ><label class="sk-toggleable__label" for="ac9b042a-5b3b-465f-add3-301a8b13de2d">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15e67024-8e57-4def-920c-3cff5794576d" type="checkbox" ><label class="sk-toggleable__label" for="15e67024-8e57-4def-920c-3cff5794576d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d80e6252-b9f1-4daf-b666-fb75c52c4429" type="checkbox" ><label class="sk-toggleable__label" for="d80e6252-b9f1-4daf-b666-fb75c52c4429">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a7f9e83-754a-4510-ab4f-decc8cacaa8f" type="checkbox" ><label class="sk-toggleable__label" for="4a7f9e83-754a-4510-ab4f-decc8cacaa8f">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.122 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
