
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 {color: black;background-color: white;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 pre{padding: 0;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-toggleable {background-color: white;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-item {z-index: 1;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-parallel-item:only-child::after {width: 0;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6d0f464f-8349-4c8c-8d04-20f87aa6bb88" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c8e228f-b364-4629-88c3-8f54bceb78a7" type="checkbox" ><label for="0c8e228f-b364-4629-88c3-8f54bceb78a7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e27eb36-b21d-4499-8826-e4e253f184c8" type="checkbox" ><label for="4e27eb36-b21d-4499-8826-e4e253f184c8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7873b7ce-68ba-4ca6-8423-a7c38f0d8e21" type="checkbox" ><label for="7873b7ce-68ba-4ca6-8423-a7c38f0d8e21" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 {color: black;background-color: white;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 pre{padding: 0;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-toggleable {background-color: white;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-estimator:hover {background-color: #d4ebff;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-item {z-index: 1;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-parallel-item:only-child::after {width: 0;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-02e8759b-057e-46f8-bcd1-5549b9a69a43 div.sk-text-repr-fallback {display: none;}</style><div id="sk-02e8759b-057e-46f8-bcd1-5549b9a69a43" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9257ffbc-3742-4624-8115-5f82126b5bc7" type="checkbox" ><label for="9257ffbc-3742-4624-8115-5f82126b5bc7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f967ffe5-2f01-4269-b620-f2fa19bf180f" type="checkbox" ><label for="f967ffe5-2f01-4269-b620-f2fa19bf180f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c94841c-4ee4-4566-964e-3377eddddef8" type="checkbox" ><label for="3c94841c-4ee4-4566-964e-3377eddddef8" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="465ac312-7161-4b86-a828-f41bd0a09bee" type="checkbox" ><label for="465ac312-7161-4b86-a828-f41bd0a09bee" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d {color: black;background-color: white;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d pre{padding: 0;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-toggleable {background-color: white;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-item {z-index: 1;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-parallel-item:only-child::after {width: 0;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8a281256-0734-4c2f-9a04-ddbc593bee3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-8a281256-0734-4c2f-9a04-ddbc593bee3d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8e1de85-81ad-44dc-93d0-17b43dc1a595" type="checkbox" ><label for="d8e1de85-81ad-44dc-93d0-17b43dc1a595" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bd58e90-912e-4ee8-a7eb-4e24f3132e15" type="checkbox" ><label for="8bd58e90-912e-4ee8-a7eb-4e24f3132e15" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5e3f888-7d11-4f6a-983c-5fe6433b69cd" type="checkbox" ><label for="c5e3f888-7d11-4f6a-983c-5fe6433b69cd" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c {color: black;background-color: white;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c pre{padding: 0;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-toggleable {background-color: white;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-estimator:hover {background-color: #d4ebff;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-item {z-index: 1;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-parallel-item:only-child::after {width: 0;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c div.sk-text-repr-fallback {display: none;}</style><div id="sk-4e4bf1d5-34a9-45ff-9930-9b491d87965c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="910b8800-025a-4fd9-a7d1-a3814ce6ef21" type="checkbox" ><label for="910b8800-025a-4fd9-a7d1-a3814ce6ef21" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d08a0a79-190b-44a0-ad37-9047d2707424" type="checkbox" ><label for="d08a0a79-190b-44a0-ad37-9047d2707424" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a8c4e88-8fff-43ae-af01-f8ca31f18e36" type="checkbox" ><label for="2a8c4e88-8fff-43ae-af01-f8ca31f18e36" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b32f7b31-fb69-403f-a8f5-1adec55a66b5" type="checkbox" ><label for="b32f7b31-fb69-403f-a8f5-1adec55a66b5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb1a2046-46ae-40fe-a102-e1b593454b3a" type="checkbox" ><label for="fb1a2046-46ae-40fe-a102-e1b593454b3a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63d06380-0f02-4363-9020-c3adb053e9b1" type="checkbox" ><label for="63d06380-0f02-4363-9020-c3adb053e9b1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49b2ef29-f5be-4962-9a66-e65c3cc2bc1e" type="checkbox" ><label for="49b2ef29-f5be-4962-9a66-e65c3cc2bc1e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b444bf30-04da-473f-bc76-b060caad7845" type="checkbox" ><label for="b444bf30-04da-473f-bc76-b060caad7845" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b6848bb-a06d-4501-8711-f282d32923c0" type="checkbox" ><label for="1b6848bb-a06d-4501-8711-f282d32923c0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bede755d-14cb-4ab0-be22-0f167d987633 {color: black;background-color: white;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 pre{padding: 0;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-toggleable {background-color: white;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-item {z-index: 1;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-parallel-item:only-child::after {width: 0;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bede755d-14cb-4ab0-be22-0f167d987633 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bede755d-14cb-4ab0-be22-0f167d987633" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0749f0e0-1f8e-4eeb-b6b5-25893f023028" type="checkbox" ><label for="0749f0e0-1f8e-4eeb-b6b5-25893f023028" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72238a47-586c-45c4-a324-86dc2837c6d5" type="checkbox" ><label for="72238a47-586c-45c4-a324-86dc2837c6d5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5b15ea2-a9f4-470a-8f35-2f899797707f" type="checkbox" ><label for="f5b15ea2-a9f4-470a-8f35-2f899797707f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33c924f6-cbbe-4d88-b27f-71d2189c6ece" type="checkbox" ><label for="33c924f6-cbbe-4d88-b27f-71d2189c6ece" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b12c69a-e768-4b85-9a38-91752d9fa1bc" type="checkbox" ><label for="0b12c69a-e768-4b85-9a38-91752d9fa1bc" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04f15e08-d855-4345-9aec-320fc0c13da5" type="checkbox" ><label for="04f15e08-d855-4345-9aec-320fc0c13da5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8543e8a4-9edd-491d-b2d9-1fb400e7e5f5" type="checkbox" ><label for="8543e8a4-9edd-491d-b2d9-1fb400e7e5f5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="076f4453-0907-46ff-8185-45f189b8c580" type="checkbox" ><label for="076f4453-0907-46ff-8185-45f189b8c580" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2debc753-9073-42cf-8b92-85353086b54d" type="checkbox" ><label for="2debc753-9073-42cf-8b92-85353086b54d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
