
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-26f5ad07-3045-43f0-864d-306a2db455ec {color: black;background-color: white;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec pre{padding: 0;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-toggleable {background-color: white;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-estimator:hover {background-color: #d4ebff;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-item {z-index: 1;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-parallel-item:only-child::after {width: 0;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-container {display: inline-block;position: relative;}#sk-26f5ad07-3045-43f0-864d-306a2db455ec div.sk-text-repr-fallback {display: none;}</style><div id="sk-26f5ad07-3045-43f0-864d-306a2db455ec" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c8bd9dd-a61e-4c93-a273-0348161345aa" type="checkbox" ><label class="sk-toggleable__label" for="5c8bd9dd-a61e-4c93-a273-0348161345aa">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ee62998-776c-48c4-a869-677cffc9b9da" type="checkbox" ><label class="sk-toggleable__label" for="7ee62998-776c-48c4-a869-677cffc9b9da">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82307e92-46c4-409a-8192-c2d2eff7d528" type="checkbox" ><label class="sk-toggleable__label" for="82307e92-46c4-409a-8192-c2d2eff7d528">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4678bc95-b60d-4fbb-80ed-46937e22443c {color: black;background-color: white;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c pre{padding: 0;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-toggleable {background-color: white;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-estimator:hover {background-color: #d4ebff;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-item {z-index: 1;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-parallel-item:only-child::after {width: 0;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-container {display: inline-block;position: relative;}#sk-4678bc95-b60d-4fbb-80ed-46937e22443c div.sk-text-repr-fallback {display: none;}</style><div id="sk-4678bc95-b60d-4fbb-80ed-46937e22443c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e3d5d0b-05ad-4966-9347-e4957a34ccb8" type="checkbox" ><label class="sk-toggleable__label" for="1e3d5d0b-05ad-4966-9347-e4957a34ccb8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fb296aa-2c56-43ee-93a0-7a133ea1f6f2" type="checkbox" ><label class="sk-toggleable__label" for="2fb296aa-2c56-43ee-93a0-7a133ea1f6f2">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="120d0b42-dcfe-478f-83ef-1bf056ed8253" type="checkbox" ><label class="sk-toggleable__label" for="120d0b42-dcfe-478f-83ef-1bf056ed8253">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eeed24c5-9ce0-4dc6-80da-1d8303b86088" type="checkbox" ><label class="sk-toggleable__label" for="eeed24c5-9ce0-4dc6-80da-1d8303b86088">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a9442122-c9c5-429b-baa3-8043577e3995 {color: black;background-color: white;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 pre{padding: 0;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-toggleable {background-color: white;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-item {z-index: 1;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-parallel-item:only-child::after {width: 0;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-container {display: inline-block;position: relative;}#sk-a9442122-c9c5-429b-baa3-8043577e3995 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a9442122-c9c5-429b-baa3-8043577e3995" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70802ca7-4210-4963-bad9-e3d7b61bcef0" type="checkbox" ><label class="sk-toggleable__label" for="70802ca7-4210-4963-bad9-e3d7b61bcef0">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d66ebcb0-1156-47cd-a3b2-72542377c73d" type="checkbox" ><label class="sk-toggleable__label" for="d66ebcb0-1156-47cd-a3b2-72542377c73d">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff9cea64-8edd-4407-b8cc-bad69e3cec42" type="checkbox" ><label class="sk-toggleable__label" for="ff9cea64-8edd-4407-b8cc-bad69e3cec42">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b {color: black;background-color: white;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b pre{padding: 0;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-toggleable {background-color: white;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-item {z-index: 1;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-parallel-item:only-child::after {width: 0;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-container {display: inline-block;position: relative;}#sk-9b6140ba-9252-4388-b65f-9e238ea66c2b div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b6140ba-9252-4388-b65f-9e238ea66c2b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1afd5fe7-0bd5-4e6e-b9de-bed75e5b7585" type="checkbox" ><label class="sk-toggleable__label" for="1afd5fe7-0bd5-4e6e-b9de-bed75e5b7585">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73fc7745-481c-4900-a494-38bd2e3191d9" type="checkbox" ><label class="sk-toggleable__label" for="73fc7745-481c-4900-a494-38bd2e3191d9">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51eaad7c-f318-4c8b-8a37-c449188e198d" type="checkbox" ><label class="sk-toggleable__label" for="51eaad7c-f318-4c8b-8a37-c449188e198d">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca8be803-639d-44c8-9b7c-ec22eb1eee97" type="checkbox" ><label class="sk-toggleable__label" for="ca8be803-639d-44c8-9b7c-ec22eb1eee97">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcb8b6d0-75a3-450e-a3b5-6e3969dbb4da" type="checkbox" ><label class="sk-toggleable__label" for="dcb8b6d0-75a3-450e-a3b5-6e3969dbb4da">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d2e6127-9640-4d8d-9d7f-b2cd07e94939" type="checkbox" ><label class="sk-toggleable__label" for="0d2e6127-9640-4d8d-9d7f-b2cd07e94939">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ed0be43-d749-4dde-ae05-e10f26c2dc3b" type="checkbox" ><label class="sk-toggleable__label" for="4ed0be43-d749-4dde-ae05-e10f26c2dc3b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="702cd3a8-9114-4c94-8643-b29a5f112bbc" type="checkbox" ><label class="sk-toggleable__label" for="702cd3a8-9114-4c94-8643-b29a5f112bbc">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98fe19fc-5db1-40b3-9a57-99c5c7c6fd0b" type="checkbox" ><label class="sk-toggleable__label" for="98fe19fc-5db1-40b3-9a57-99c5c7c6fd0b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d {color: black;background-color: white;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d pre{padding: 0;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-toggleable {background-color: white;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-estimator:hover {background-color: #d4ebff;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-item {z-index: 1;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-parallel-item:only-child::after {width: 0;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-container {display: inline-block;position: relative;}#sk-d38609f9-3c38-47df-9db6-bd4b191dd27d div.sk-text-repr-fallback {display: none;}</style><div id="sk-d38609f9-3c38-47df-9db6-bd4b191dd27d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0432f613-6231-4ad7-bfb2-6a4a4f9a3c1e" type="checkbox" ><label class="sk-toggleable__label" for="0432f613-6231-4ad7-bfb2-6a4a4f9a3c1e">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0a83ed8-f12f-412c-a5ff-c845d1381f4d" type="checkbox" ><label class="sk-toggleable__label" for="b0a83ed8-f12f-412c-a5ff-c845d1381f4d">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dabb4b10-1b5c-4a5d-9b7d-3c98149568a4" type="checkbox" ><label class="sk-toggleable__label" for="dabb4b10-1b5c-4a5d-9b7d-3c98149568a4">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d839515f-f6fa-4547-aafa-b198a68be721" type="checkbox" ><label class="sk-toggleable__label" for="d839515f-f6fa-4547-aafa-b198a68be721">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="320f403f-cb37-45e7-ad3b-39f630187c6b" type="checkbox" ><label class="sk-toggleable__label" for="320f403f-cb37-45e7-ad3b-39f630187c6b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5004a7f0-7af9-4226-a1a8-55dcad932c4d" type="checkbox" ><label class="sk-toggleable__label" for="5004a7f0-7af9-4226-a1a8-55dcad932c4d">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="184f7ba1-cc45-469a-9eae-f6934ea9a586" type="checkbox" ><label class="sk-toggleable__label" for="184f7ba1-cc45-469a-9eae-f6934ea9a586">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73fea703-5b6b-4cc4-bc06-d4880a4b07d6" type="checkbox" ><label class="sk-toggleable__label" for="73fea703-5b6b-4cc4-bc06-d4880a4b07d6">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfbf12e7-ffd4-4396-9584-52acb0201bc7" type="checkbox" ><label class="sk-toggleable__label" for="dfbf12e7-ffd4-4396-9584-52acb0201bc7">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.095 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
