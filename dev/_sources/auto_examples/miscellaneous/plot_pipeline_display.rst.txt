
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a {color: black;background-color: white;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a pre{padding: 0;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-toggleable {background-color: white;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-estimator:hover {background-color: #d4ebff;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-item {z-index: 1;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-parallel-item:only-child::after {width: 0;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a div.sk-text-repr-fallback {display: none;}</style><div id="sk-bbe1e61f-bc4a-46ce-bc6b-411ddb8c0a6a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98eaea00-c687-4428-bc8d-a32f806bb9b3" type="checkbox" ><label for="98eaea00-c687-4428-bc8d-a32f806bb9b3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a664e76-a453-4594-8034-da44fb971029" type="checkbox" ><label for="7a664e76-a453-4594-8034-da44fb971029" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b01253fc-1b26-4783-b651-bd28e0b0a3ed" type="checkbox" ><label for="b01253fc-1b26-4783-b651-bd28e0b0a3ed" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 {color: black;background-color: white;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 pre{padding: 0;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-toggleable {background-color: white;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-item {z-index: 1;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-parallel-item:only-child::after {width: 0;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1cd8ec21-5147-4745-bbe6-a170e67bf570 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1cd8ec21-5147-4745-bbe6-a170e67bf570" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fb493d2-c9e3-44da-9b96-d19367b744ce" type="checkbox" ><label for="4fb493d2-c9e3-44da-9b96-d19367b744ce" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42c932fd-7f00-45fa-9d4a-afa07de807a9" type="checkbox" ><label for="42c932fd-7f00-45fa-9d4a-afa07de807a9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09deaac1-98d9-482c-b4d6-d96b0ef0c796" type="checkbox" ><label for="09deaac1-98d9-482c-b4d6-d96b0ef0c796" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="795ede4c-f1e3-4c3c-aebc-61cc5e8ddc3c" type="checkbox" ><label for="795ede4c-f1e3-4c3c-aebc-61cc5e8ddc3c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 {color: black;background-color: white;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 pre{padding: 0;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-toggleable {background-color: white;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-item {z-index: 1;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-parallel-item:only-child::after {width: 0;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d6764fe-fa4c-49d0-905d-64bd4fd973b4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38578fe0-a039-42e1-a80f-09b89dba0e28" type="checkbox" ><label for="38578fe0-a039-42e1-a80f-09b89dba0e28" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddfb98a5-6242-4815-a849-b54cb4e8c455" type="checkbox" ><label for="ddfb98a5-6242-4815-a849-b54cb4e8c455" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f31f3345-80ee-4c71-b04a-6ff7685c29e7" type="checkbox" ><label for="f31f3345-80ee-4c71-b04a-6ff7685c29e7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a {color: black;background-color: white;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a pre{padding: 0;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-toggleable {background-color: white;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-estimator:hover {background-color: #d4ebff;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-item {z-index: 1;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-parallel-item:only-child::after {width: 0;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a div.sk-text-repr-fallback {display: none;}</style><div id="sk-47f9b5ff-ef7f-4f2e-9645-fa2b9196f90a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03f80338-cb96-457d-865b-92d528ff5dee" type="checkbox" ><label for="03f80338-cb96-457d-865b-92d528ff5dee" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ccd0c95-1e5c-4598-a8fe-9fdc20c1cc4c" type="checkbox" ><label for="0ccd0c95-1e5c-4598-a8fe-9fdc20c1cc4c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="069da856-b3d0-4cac-88c7-1feb17597252" type="checkbox" ><label for="069da856-b3d0-4cac-88c7-1feb17597252" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5aca95c9-6e19-4540-be4f-c136b9bb086a" type="checkbox" ><label for="5aca95c9-6e19-4540-be4f-c136b9bb086a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="deff1175-5d7a-47c5-8dc1-5cbea242618c" type="checkbox" ><label for="deff1175-5d7a-47c5-8dc1-5cbea242618c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f567b36-afbd-4d04-9079-60735f7bfecd" type="checkbox" ><label for="6f567b36-afbd-4d04-9079-60735f7bfecd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ef3a291-97fb-4279-8d6e-0bdc71d8a230" type="checkbox" ><label for="0ef3a291-97fb-4279-8d6e-0bdc71d8a230" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7032a94c-afe6-4010-a552-89af2e4d07c7" type="checkbox" ><label for="7032a94c-afe6-4010-a552-89af2e4d07c7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1808db5d-eb4d-41e9-8667-0807376eedb0" type="checkbox" ><label for="1808db5d-eb4d-41e9-8667-0807376eedb0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2b433006-e976-4566-af2e-19ab7f4bc940 {color: black;background-color: white;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 pre{padding: 0;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-toggleable {background-color: white;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-item {z-index: 1;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-parallel-item:only-child::after {width: 0;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2b433006-e976-4566-af2e-19ab7f4bc940 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2b433006-e976-4566-af2e-19ab7f4bc940" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d81c942a-e4c7-4545-bdd9-81819291e9f4" type="checkbox" ><label for="d81c942a-e4c7-4545-bdd9-81819291e9f4" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b9aec51-2786-4e29-8886-70758dd8084c" type="checkbox" ><label for="0b9aec51-2786-4e29-8886-70758dd8084c" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80667506-9f69-4e67-b0a1-7b5b7585e54c" type="checkbox" ><label for="80667506-9f69-4e67-b0a1-7b5b7585e54c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="199f30a9-604e-4d92-8dad-c0148a620e6a" type="checkbox" ><label for="199f30a9-604e-4d92-8dad-c0148a620e6a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3896389-a1a3-46f7-ac78-963582ba0d8c" type="checkbox" ><label for="a3896389-a1a3-46f7-ac78-963582ba0d8c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5a06a32-a4ab-494d-87d5-612cdd183f13" type="checkbox" ><label for="e5a06a32-a4ab-494d-87d5-612cdd183f13" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4226add-fa4f-4e29-bae3-be7b431bedf3" type="checkbox" ><label for="c4226add-fa4f-4e29-bae3-be7b431bedf3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57b6e2e7-6c0b-417a-847e-bebfa5c27633" type="checkbox" ><label for="57b6e2e7-6c0b-417a-847e-bebfa5c27633" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6af71efd-70b1-43a9-a21c-7a6783b5b4f0" type="checkbox" ><label for="6af71efd-70b1-43a9-a21c-7a6783b5b4f0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73de696c-f838-46ee-9a87-f78c55568af5" type="checkbox" ><label for="73de696c-f838-46ee-9a87-f78c55568af5" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.090 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
