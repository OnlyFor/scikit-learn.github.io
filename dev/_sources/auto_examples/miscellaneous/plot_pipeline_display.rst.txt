
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 {color: black;background-color: white;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 pre{padding: 0;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-toggleable {background-color: white;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-item {z-index: 1;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-parallel-item:only-child::after {width: 0;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6873c7a0-d0c4-48bd-9f2a-a1f2facdba36" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27786102-dc7f-4757-9e8b-eec2b8c16ddf" type="checkbox" ><label for="27786102-dc7f-4757-9e8b-eec2b8c16ddf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f49c6e60-e78d-45e9-b091-c55b4268a974" type="checkbox" ><label for="f49c6e60-e78d-45e9-b091-c55b4268a974" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf1e31d3-dd53-4753-942b-d3a511d49cd5" type="checkbox" ><label for="cf1e31d3-dd53-4753-942b-d3a511d49cd5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 {color: black;background-color: white;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 pre{padding: 0;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-toggleable {background-color: white;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-item {z-index: 1;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-parallel-item:only-child::after {width: 0;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dbe0d6bf-9855-4cbf-92ca-cbf329173011" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3b03433-b066-40bf-80fb-14bbd864810e" type="checkbox" ><label for="d3b03433-b066-40bf-80fb-14bbd864810e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad118af0-a2f2-4abb-915c-cebc818837bd" type="checkbox" ><label for="ad118af0-a2f2-4abb-915c-cebc818837bd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67755c7c-234f-475d-9abe-50fb7ab27ea5" type="checkbox" ><label for="67755c7c-234f-475d-9abe-50fb7ab27ea5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f808a087-9f65-41d2-914a-e1034538bdf1" type="checkbox" ><label for="f808a087-9f65-41d2-914a-e1034538bdf1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea {color: black;background-color: white;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea pre{padding: 0;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-toggleable {background-color: white;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-item {z-index: 1;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-parallel-item:only-child::after {width: 0;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0f215031-19e8-44ae-b5b9-114be3cee2ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-0f215031-19e8-44ae-b5b9-114be3cee2ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f214175a-08e0-4f10-bebd-3876ba6185cd" type="checkbox" ><label for="f214175a-08e0-4f10-bebd-3876ba6185cd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ee05385-6300-4751-8989-31bc3ef29f74" type="checkbox" ><label for="3ee05385-6300-4751-8989-31bc3ef29f74" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f75c9e4-cefe-4b3c-a334-baa03be8d657" type="checkbox" ><label for="0f75c9e4-cefe-4b3c-a334-baa03be8d657" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b {color: black;background-color: white;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b pre{padding: 0;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-toggleable {background-color: white;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-estimator:hover {background-color: #d4ebff;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-item {z-index: 1;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-parallel-item:only-child::after {width: 0;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b div.sk-text-repr-fallback {display: none;}</style><div id="sk-5f16e42b-ae04-4267-a7ff-9bf186ce202b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d959208-e4ba-42e5-b962-cf677eceb0c4" type="checkbox" ><label for="7d959208-e4ba-42e5-b962-cf677eceb0c4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6a019f6-73e7-4d52-bc38-f1f838d83a1e" type="checkbox" ><label for="d6a019f6-73e7-4d52-bc38-f1f838d83a1e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="679fa5ff-1d91-496f-b9d0-0d3312f3ade5" type="checkbox" ><label for="679fa5ff-1d91-496f-b9d0-0d3312f3ade5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9a19b43-0bf0-44c9-a06c-495916fe8508" type="checkbox" ><label for="d9a19b43-0bf0-44c9-a06c-495916fe8508" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d22e634e-7d1c-45a6-9d7d-494d25bb23b9" type="checkbox" ><label for="d22e634e-7d1c-45a6-9d7d-494d25bb23b9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46250268-92bd-47d1-8f74-4a3d90be642c" type="checkbox" ><label for="46250268-92bd-47d1-8f74-4a3d90be642c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1feda178-9410-4b59-a316-2c8e38e2e455" type="checkbox" ><label for="1feda178-9410-4b59-a316-2c8e38e2e455" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd909e97-cfdf-47d2-aaf7-b7817a38f971" type="checkbox" ><label for="cd909e97-cfdf-47d2-aaf7-b7817a38f971" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07b70bc5-59ee-4bd5-89f3-ad4ab0b15db1" type="checkbox" ><label for="07b70bc5-59ee-4bd5-89f3-ad4ab0b15db1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b {color: black;background-color: white;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b pre{padding: 0;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-toggleable {background-color: white;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-estimator:hover {background-color: #d4ebff;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-item {z-index: 1;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-parallel-item:only-child::after {width: 0;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b div.sk-text-repr-fallback {display: none;}</style><div id="sk-94cb4155-3cdf-4e95-a4a7-4766484cbf5b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="faf00f78-eaa6-44cf-b4ec-aaed3f8faf64" type="checkbox" ><label for="faf00f78-eaa6-44cf-b4ec-aaed3f8faf64" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11e59c88-0b9d-4912-bbe0-5b51f0daad8b" type="checkbox" ><label for="11e59c88-0b9d-4912-bbe0-5b51f0daad8b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d193141e-fbf1-42a1-a5ec-86d96846e035" type="checkbox" ><label for="d193141e-fbf1-42a1-a5ec-86d96846e035" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5298b93b-4430-44b2-bb4b-9fad7402c465" type="checkbox" ><label for="5298b93b-4430-44b2-bb4b-9fad7402c465" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16542a30-a6da-4889-b298-b1f9953dec05" type="checkbox" ><label for="16542a30-a6da-4889-b298-b1f9953dec05" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b8a7882-6295-4ab8-a221-b83d736f811f" type="checkbox" ><label for="9b8a7882-6295-4ab8-a221-b83d736f811f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b31ccd64-fc80-411d-aed0-69e4fe18d668" type="checkbox" ><label for="b31ccd64-fc80-411d-aed0-69e4fe18d668" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bffb3ff2-a902-4cd0-affe-ad3ea1a3f258" type="checkbox" ><label for="bffb3ff2-a902-4cd0-affe-ad3ea1a3f258" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a537252-8d9d-48a3-9408-baf1b4bcfcd0" type="checkbox" ><label for="9a537252-8d9d-48a3-9408-baf1b4bcfcd0" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.158 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
