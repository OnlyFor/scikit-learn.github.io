
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8fc571e6-62b8-44f5-b334-a255564f0393 {color: black;background-color: white;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 pre{padding: 0;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-toggleable {background-color: white;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-item {z-index: 1;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-parallel-item:only-child::after {width: 0;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8fc571e6-62b8-44f5-b334-a255564f0393 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8fc571e6-62b8-44f5-b334-a255564f0393" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19390590-66b0-439d-8785-99f82d25a364" type="checkbox" ><label for="19390590-66b0-439d-8785-99f82d25a364" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8a8993c-a898-4f6d-a6c2-db63c4547824" type="checkbox" ><label for="c8a8993c-a898-4f6d-a6c2-db63c4547824" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb6aa196-ae99-42aa-bb58-e16c5d074bf4" type="checkbox" ><label for="cb6aa196-ae99-42aa-bb58-e16c5d074bf4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9def4f11-7eec-4671-9026-147c2845f5c9 {color: black;background-color: white;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 pre{padding: 0;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-toggleable {background-color: white;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-item {z-index: 1;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-parallel-item:only-child::after {width: 0;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9def4f11-7eec-4671-9026-147c2845f5c9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9def4f11-7eec-4671-9026-147c2845f5c9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c904c3a4-82f4-4481-b0ed-8b5f46989c1f" type="checkbox" ><label for="c904c3a4-82f4-4481-b0ed-8b5f46989c1f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="598dc002-2b3a-4dd2-bd17-e919634fd37c" type="checkbox" ><label for="598dc002-2b3a-4dd2-bd17-e919634fd37c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b58919f3-6e5d-4dba-a5f5-32201e4d1d50" type="checkbox" ><label for="b58919f3-6e5d-4dba-a5f5-32201e4d1d50" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="505e935a-0521-4d80-9cdf-e87a8e95c156" type="checkbox" ><label for="505e935a-0521-4d80-9cdf-e87a8e95c156" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f {color: black;background-color: white;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f pre{padding: 0;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-toggleable {background-color: white;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-estimator:hover {background-color: #d4ebff;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-item {z-index: 1;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-parallel-item:only-child::after {width: 0;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-17e1d13a-27c0-43df-8fbd-d0102276c74f div.sk-text-repr-fallback {display: none;}</style><div id="sk-17e1d13a-27c0-43df-8fbd-d0102276c74f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e978b57-9527-445f-baf7-96e243867105" type="checkbox" ><label for="2e978b57-9527-445f-baf7-96e243867105" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b78cfc9-3d92-4981-8907-2e37266beac8" type="checkbox" ><label for="1b78cfc9-3d92-4981-8907-2e37266beac8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b84d17da-f0ba-4b99-a4b4-40233ff5f899" type="checkbox" ><label for="b84d17da-f0ba-4b99-a4b4-40233ff5f899" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 {color: black;background-color: white;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 pre{padding: 0;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-toggleable {background-color: white;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-item {z-index: 1;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-parallel-item:only-child::after {width: 0;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b88413f8-baea-4bca-8645-4a17dfd731d8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b88413f8-baea-4bca-8645-4a17dfd731d8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a239451-795b-475e-8110-c8d012d76bca" type="checkbox" ><label for="4a239451-795b-475e-8110-c8d012d76bca" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="146e38a4-4a99-4e15-ba06-5af840eb32f0" type="checkbox" ><label for="146e38a4-4a99-4e15-ba06-5af840eb32f0" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7da4c91a-44d9-4efa-83b7-5d531fb73bf9" type="checkbox" ><label for="7da4c91a-44d9-4efa-83b7-5d531fb73bf9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e27455b-fb7e-4d6a-b932-7b54a2bb57b2" type="checkbox" ><label for="7e27455b-fb7e-4d6a-b932-7b54a2bb57b2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d69d56c-2d9e-449d-a087-bce2eb8a7586" type="checkbox" ><label for="6d69d56c-2d9e-449d-a087-bce2eb8a7586" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18253122-4df4-4ba0-91f4-3c506d41c20a" type="checkbox" ><label for="18253122-4df4-4ba0-91f4-3c506d41c20a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6c32bd2-fb2d-4fe0-adb2-75d566d924fc" type="checkbox" ><label for="c6c32bd2-fb2d-4fe0-adb2-75d566d924fc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7799496-7ff7-412d-8896-16f014b8d300" type="checkbox" ><label for="c7799496-7ff7-412d-8896-16f014b8d300" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b117fcc-a73a-4b17-9188-314d7abb9301" type="checkbox" ><label for="9b117fcc-a73a-4b17-9188-314d7abb9301" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e34d4755-43bd-4bc1-be79-b73465c5884e {color: black;background-color: white;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e pre{padding: 0;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-toggleable {background-color: white;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-estimator:hover {background-color: #d4ebff;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-item {z-index: 1;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-parallel-item:only-child::after {width: 0;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e34d4755-43bd-4bc1-be79-b73465c5884e div.sk-text-repr-fallback {display: none;}</style><div id="sk-e34d4755-43bd-4bc1-be79-b73465c5884e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7eccf682-a3ed-4253-a70c-876e32f06346" type="checkbox" ><label for="7eccf682-a3ed-4253-a70c-876e32f06346" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74fa5b4d-eaec-4e31-996c-b3189bca1934" type="checkbox" ><label for="74fa5b4d-eaec-4e31-996c-b3189bca1934" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a848b553-6b16-4b3e-844c-e7c8db10dbfb" type="checkbox" ><label for="a848b553-6b16-4b3e-844c-e7c8db10dbfb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8aec7f1-d4a6-4e06-bfb0-579eab0d1f78" type="checkbox" ><label for="d8aec7f1-d4a6-4e06-bfb0-579eab0d1f78" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="954d6aeb-7115-4c38-8847-d6ca2dd438ed" type="checkbox" ><label for="954d6aeb-7115-4c38-8847-d6ca2dd438ed" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25cd16dd-db8f-4b8d-8679-f4e0a9b33d32" type="checkbox" ><label for="25cd16dd-db8f-4b8d-8679-f4e0a9b33d32" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efdb50c1-3166-4b75-a9a0-1ecdabfce273" type="checkbox" ><label for="efdb50c1-3166-4b75-a9a0-1ecdabfce273" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="671ca9b6-4052-4421-87b6-ddc8a409efd7" type="checkbox" ><label for="671ca9b6-4052-4421-87b6-ddc8a409efd7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80bc011b-b89c-40b2-9dde-b5b23cbd1ed4" type="checkbox" ><label for="80bc011b-b89c-40b2-9dde-b5b23cbd1ed4" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
