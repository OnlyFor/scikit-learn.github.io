
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9980039c-216d-4be2-9338-e64770b3c880 {color: black;background-color: white;}#sk-9980039c-216d-4be2-9338-e64770b3c880 pre{padding: 0;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-toggleable {background-color: white;}#sk-9980039c-216d-4be2-9338-e64770b3c880 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9980039c-216d-4be2-9338-e64770b3c880 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9980039c-216d-4be2-9338-e64770b3c880 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9980039c-216d-4be2-9338-e64770b3c880 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9980039c-216d-4be2-9338-e64770b3c880 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9980039c-216d-4be2-9338-e64770b3c880 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-item {z-index: 1;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-parallel-item:only-child::after {width: 0;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9980039c-216d-4be2-9338-e64770b3c880 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9980039c-216d-4be2-9338-e64770b3c880" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8fe07363-e347-4cd1-8ecb-6e9e7ff20902" type="checkbox" ><label for="8fe07363-e347-4cd1-8ecb-6e9e7ff20902" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89eace56-1175-4663-90d6-7af3d5157205" type="checkbox" ><label for="89eace56-1175-4663-90d6-7af3d5157205" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70f2cb52-c8a8-480c-9c36-1390c93677e6" type="checkbox" ><label for="70f2cb52-c8a8-480c-9c36-1390c93677e6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-85b95872-2067-4f5f-ae34-148a15734dc5 {color: black;background-color: white;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 pre{padding: 0;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-toggleable {background-color: white;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-item {z-index: 1;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-parallel-item:only-child::after {width: 0;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-85b95872-2067-4f5f-ae34-148a15734dc5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-85b95872-2067-4f5f-ae34-148a15734dc5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d79a6e0-7a92-429d-98c0-558679494e4c" type="checkbox" ><label for="1d79a6e0-7a92-429d-98c0-558679494e4c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19addaef-5c2f-48fd-b85b-0d6d95789464" type="checkbox" ><label for="19addaef-5c2f-48fd-b85b-0d6d95789464" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce61d7b2-fb24-476b-9ed5-eb191f61e296" type="checkbox" ><label for="ce61d7b2-fb24-476b-9ed5-eb191f61e296" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eadd7c1c-bb36-4fed-b549-1a3d5cffcde7" type="checkbox" ><label for="eadd7c1c-bb36-4fed-b549-1a3d5cffcde7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 {color: black;background-color: white;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 pre{padding: 0;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-toggleable {background-color: white;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-item {z-index: 1;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-parallel-item:only-child::after {width: 0;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b38acbea-1ee8-4349-b2ff-02e61681ff82 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b38acbea-1ee8-4349-b2ff-02e61681ff82" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1aeacba-6d59-4dae-afc9-3bb555118294" type="checkbox" ><label for="d1aeacba-6d59-4dae-afc9-3bb555118294" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2062d7f1-34cf-4231-9920-f36678ac9c2a" type="checkbox" ><label for="2062d7f1-34cf-4231-9920-f36678ac9c2a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba948e67-bd23-471d-9e08-1d3572c08445" type="checkbox" ><label for="ba948e67-bd23-471d-9e08-1d3572c08445" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b {color: black;background-color: white;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b pre{padding: 0;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-toggleable {background-color: white;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-estimator:hover {background-color: #d4ebff;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-item {z-index: 1;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-parallel-item:only-child::after {width: 0;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b div.sk-text-repr-fallback {display: none;}</style><div id="sk-ddd4d8e6-b779-414a-83ed-d6d0e849e24b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ba5cef7-5659-493f-a264-9f1a73bb619a" type="checkbox" ><label for="3ba5cef7-5659-493f-a264-9f1a73bb619a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c0ec557-5378-4cdd-af93-f20ee38a209a" type="checkbox" ><label for="0c0ec557-5378-4cdd-af93-f20ee38a209a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3690ab53-9991-4e9c-8874-ace6dbc14df3" type="checkbox" ><label for="3690ab53-9991-4e9c-8874-ace6dbc14df3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c706ba2-7fa3-40aa-b08d-b67414cb3cbe" type="checkbox" ><label for="9c706ba2-7fa3-40aa-b08d-b67414cb3cbe" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdceed3a-e042-4349-b0fd-36ae5a1ea823" type="checkbox" ><label for="fdceed3a-e042-4349-b0fd-36ae5a1ea823" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33b78b50-a0c6-442e-9960-92535fbfb404" type="checkbox" ><label for="33b78b50-a0c6-442e-9960-92535fbfb404" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7667e13e-d51c-4a48-b563-13d14b3a2d89" type="checkbox" ><label for="7667e13e-d51c-4a48-b563-13d14b3a2d89" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="193fcf7b-64cb-424a-891b-9da6a465ef04" type="checkbox" ><label for="193fcf7b-64cb-424a-891b-9da6a465ef04" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="789f02b3-c398-456d-ad3b-0376d5484c9d" type="checkbox" ><label for="789f02b3-c398-456d-ad3b-0376d5484c9d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 {color: black;background-color: white;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 pre{padding: 0;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-toggleable {background-color: white;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-item {z-index: 1;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-parallel-item:only-child::after {width: 0;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-de0493c4-7940-4b69-9b06-1ab12e59fd22 div.sk-text-repr-fallback {display: none;}</style><div id="sk-de0493c4-7940-4b69-9b06-1ab12e59fd22" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ce17fab-bf29-428e-9c8d-a056220953eb" type="checkbox" ><label for="4ce17fab-bf29-428e-9c8d-a056220953eb" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f115054-d93f-480a-8c3a-63367edcd0fa" type="checkbox" ><label for="5f115054-d93f-480a-8c3a-63367edcd0fa" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5841de01-cc53-4fb5-9f0c-029c3b5832e7" type="checkbox" ><label for="5841de01-cc53-4fb5-9f0c-029c3b5832e7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5faf4abc-d9d5-4b90-bed1-d3707dfd0ed0" type="checkbox" ><label for="5faf4abc-d9d5-4b90-bed1-d3707dfd0ed0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="522b9c99-2c48-4005-a8fb-601d5a798045" type="checkbox" ><label for="522b9c99-2c48-4005-a8fb-601d5a798045" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0212ebd5-c251-49c0-913b-17253fd3eddc" type="checkbox" ><label for="0212ebd5-c251-49c0-913b-17253fd3eddc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8590e906-53bb-448f-885d-0dd64899d935" type="checkbox" ><label for="8590e906-53bb-448f-885d-0dd64899d935" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d85c492-8940-4653-9310-6c35d347f471" type="checkbox" ><label for="9d85c492-8940-4653-9310-6c35d347f471" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49d0e124-8abf-4b3a-9365-b502e325afef" type="checkbox" ><label for="49d0e124-8abf-4b3a-9365-b502e325afef" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
