
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab {color: black;background-color: white;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab pre{padding: 0;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-toggleable {background-color: white;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-estimator:hover {background-color: #d4ebff;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-item {z-index: 1;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-parallel-item:only-child::after {width: 0;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-daafbdda-72d9-4b2c-85cc-61e601c75aab div.sk-text-repr-fallback {display: none;}</style><div id="sk-daafbdda-72d9-4b2c-85cc-61e601c75aab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="377bb93b-e46f-4514-b9a5-d5739dcc59f6" type="checkbox" ><label for="377bb93b-e46f-4514-b9a5-d5739dcc59f6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa9193a1-26e6-4916-9cdb-384aad0aadca" type="checkbox" ><label for="aa9193a1-26e6-4916-9cdb-384aad0aadca" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0c2dc54-768a-4c3d-aa1e-7f1c7e5d5c80" type="checkbox" ><label for="d0c2dc54-768a-4c3d-aa1e-7f1c7e5d5c80" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb116408-ed0c-458c-8498-23624f82b4c7 {color: black;background-color: white;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 pre{padding: 0;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-toggleable {background-color: white;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-item {z-index: 1;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eb116408-ed0c-458c-8498-23624f82b4c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb116408-ed0c-458c-8498-23624f82b4c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="054a8f70-35ef-49ca-9e4e-8992b3331de4" type="checkbox" ><label for="054a8f70-35ef-49ca-9e4e-8992b3331de4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dccb3e09-4e77-42db-b5ed-f10ab35b818a" type="checkbox" ><label for="dccb3e09-4e77-42db-b5ed-f10ab35b818a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd5ab9b7-b562-4da4-a8cb-b84077e83ce1" type="checkbox" ><label for="dd5ab9b7-b562-4da4-a8cb-b84077e83ce1" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b556ac2d-2061-4125-a598-cb01ac5b07f7" type="checkbox" ><label for="b556ac2d-2061-4125-a598-cb01ac5b07f7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-40750159-1c97-4762-aa3c-f283780306d9 {color: black;background-color: white;}#sk-40750159-1c97-4762-aa3c-f283780306d9 pre{padding: 0;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-toggleable {background-color: white;}#sk-40750159-1c97-4762-aa3c-f283780306d9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-40750159-1c97-4762-aa3c-f283780306d9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-40750159-1c97-4762-aa3c-f283780306d9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-40750159-1c97-4762-aa3c-f283780306d9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-40750159-1c97-4762-aa3c-f283780306d9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40750159-1c97-4762-aa3c-f283780306d9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-item {z-index: 1;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-parallel-item:only-child::after {width: 0;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-40750159-1c97-4762-aa3c-f283780306d9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-40750159-1c97-4762-aa3c-f283780306d9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4af3991-be53-4613-9747-e58ee3650d45" type="checkbox" ><label for="a4af3991-be53-4613-9747-e58ee3650d45" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37b84ba8-c563-4e62-bdb8-193e0773433c" type="checkbox" ><label for="37b84ba8-c563-4e62-bdb8-193e0773433c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc4464cc-2ac1-4c8a-9789-3e96b02ec6b7" type="checkbox" ><label for="bc4464cc-2ac1-4c8a-9789-3e96b02ec6b7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ecae17d9-7e18-43c9-a601-207ba22940ec {color: black;background-color: white;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec pre{padding: 0;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-toggleable {background-color: white;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-estimator:hover {background-color: #d4ebff;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-item {z-index: 1;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-parallel-item:only-child::after {width: 0;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ecae17d9-7e18-43c9-a601-207ba22940ec div.sk-text-repr-fallback {display: none;}</style><div id="sk-ecae17d9-7e18-43c9-a601-207ba22940ec" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ba8b985-93f9-4419-a90c-976f976f655f" type="checkbox" ><label for="2ba8b985-93f9-4419-a90c-976f976f655f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c33389b6-8fba-422e-a81b-a4bdc3736945" type="checkbox" ><label for="c33389b6-8fba-422e-a81b-a4bdc3736945" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f849115f-9cc2-4f1f-8f35-4a978cb526c9" type="checkbox" ><label for="f849115f-9cc2-4f1f-8f35-4a978cb526c9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bf5c57c-c87e-425b-a553-2f0a4d82f446" type="checkbox" ><label for="9bf5c57c-c87e-425b-a553-2f0a4d82f446" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9670651b-37b8-411c-b85d-08890802745c" type="checkbox" ><label for="9670651b-37b8-411c-b85d-08890802745c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2754c34c-5dda-4bdf-8a76-8b28fb5fefb5" type="checkbox" ><label for="2754c34c-5dda-4bdf-8a76-8b28fb5fefb5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30b577ad-faf2-44a1-a76e-01e1d431a25e" type="checkbox" ><label for="30b577ad-faf2-44a1-a76e-01e1d431a25e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb652e1f-2616-4c3f-8e1f-11ee425a18a1" type="checkbox" ><label for="bb652e1f-2616-4c3f-8e1f-11ee425a18a1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="415e3b16-34c0-44ee-a673-f8cb5e4d0543" type="checkbox" ><label for="415e3b16-34c0-44ee-a673-f8cb5e4d0543" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8708a5a5-439c-48f9-a3f9-575df9421aab {color: black;background-color: white;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab pre{padding: 0;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-toggleable {background-color: white;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-estimator:hover {background-color: #d4ebff;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-item {z-index: 1;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-parallel-item:only-child::after {width: 0;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8708a5a5-439c-48f9-a3f9-575df9421aab div.sk-text-repr-fallback {display: none;}</style><div id="sk-8708a5a5-439c-48f9-a3f9-575df9421aab" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36e7ebb0-ee99-4f4b-9461-2becaa3d21ae" type="checkbox" ><label for="36e7ebb0-ee99-4f4b-9461-2becaa3d21ae" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86c5b783-b941-44fd-a015-0d776efd9fd9" type="checkbox" ><label for="86c5b783-b941-44fd-a015-0d776efd9fd9" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a09eff83-0c1f-46e3-bef9-f8af5f21ccff" type="checkbox" ><label for="a09eff83-0c1f-46e3-bef9-f8af5f21ccff" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a714b79-3065-4b3c-b615-583bb48fc51d" type="checkbox" ><label for="8a714b79-3065-4b3c-b615-583bb48fc51d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0068524-4b47-4d2e-9edc-c6a3ec330e51" type="checkbox" ><label for="c0068524-4b47-4d2e-9edc-c6a3ec330e51" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c54f8657-3050-427a-81f5-db239bfd0d4e" type="checkbox" ><label for="c54f8657-3050-427a-81f5-db239bfd0d4e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a79ed38-bb17-4c41-b173-ff40a4c39914" type="checkbox" ><label for="2a79ed38-bb17-4c41-b173-ff40a4c39914" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="107d63e9-9de2-4f6b-8389-d84687764956" type="checkbox" ><label for="107d63e9-9de2-4f6b-8389-d84687764956" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73b6e8b9-1a52-4240-b66e-de4403316b26" type="checkbox" ><label for="73b6e8b9-1a52-4240-b66e-de4403316b26" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.103 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
