
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 {color: black;background-color: white;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 pre{padding: 0;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-toggleable {background-color: white;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-item {z-index: 1;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-parallel-item:only-child::after {width: 0;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-container {display: inline-block;position: relative;}#sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-48cdafd3-0bd6-4f22-924f-e0999cf6c8c2" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="980a52f8-7aa9-4058-b062-a8e71f63d060" type="checkbox" ><label class="sk-toggleable__label" for="980a52f8-7aa9-4058-b062-a8e71f63d060">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bdcce5f4-2c7c-4a24-9364-90a554ee5b63" type="checkbox" ><label class="sk-toggleable__label" for="bdcce5f4-2c7c-4a24-9364-90a554ee5b63">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83da3937-3702-48d2-8fbe-3786ae5abfda" type="checkbox" ><label class="sk-toggleable__label" for="83da3937-3702-48d2-8fbe-3786ae5abfda">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 {color: black;background-color: white;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 pre{padding: 0;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-toggleable {background-color: white;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-item {z-index: 1;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-parallel-item:only-child::after {width: 0;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-container {display: inline-block;position: relative;}#sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4ede5dbe-d830-4f23-9bbf-cbb04dbfaf31" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e704f3a7-29c2-4ef1-917b-0a5e3eca8f56" type="checkbox" ><label class="sk-toggleable__label" for="e704f3a7-29c2-4ef1-917b-0a5e3eca8f56">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93d7bccb-f980-4c48-833c-a367b39424ea" type="checkbox" ><label class="sk-toggleable__label" for="93d7bccb-f980-4c48-833c-a367b39424ea">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3133999d-9486-4abf-934b-24195b2ee248" type="checkbox" ><label class="sk-toggleable__label" for="3133999d-9486-4abf-934b-24195b2ee248">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="571995c7-80e8-466a-baf7-924ffe9853fb" type="checkbox" ><label class="sk-toggleable__label" for="571995c7-80e8-466a-baf7-924ffe9853fb">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd {color: black;background-color: white;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd pre{padding: 0;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-toggleable {background-color: white;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-estimator:hover {background-color: #d4ebff;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-item {z-index: 1;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-parallel-item:only-child::after {width: 0;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-container {display: inline-block;position: relative;}#sk-25e47034-3fe8-4414-b74c-a1beb24aeafd div.sk-text-repr-fallback {display: none;}</style><div id="sk-25e47034-3fe8-4414-b74c-a1beb24aeafd" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b2bf847-6031-409f-ab1c-833c874fb004" type="checkbox" ><label class="sk-toggleable__label" for="0b2bf847-6031-409f-ab1c-833c874fb004">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d102dd84-ca0f-476d-9870-5d6165e6ead3" type="checkbox" ><label class="sk-toggleable__label" for="d102dd84-ca0f-476d-9870-5d6165e6ead3">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54ac5234-0959-45b5-9419-0f4004ea4073" type="checkbox" ><label class="sk-toggleable__label" for="54ac5234-0959-45b5-9419-0f4004ea4073">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d {color: black;background-color: white;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d pre{padding: 0;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-toggleable {background-color: white;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-item {z-index: 1;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-parallel-item:only-child::after {width: 0;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-container {display: inline-block;position: relative;}#sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-40f9ba65-0e31-45e0-8d69-80f59d2a4e3d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f5d3f70-28b2-4f75-bc37-50637697f4a5" type="checkbox" ><label class="sk-toggleable__label" for="3f5d3f70-28b2-4f75-bc37-50637697f4a5">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4586bd4-ab7d-4e72-8a9e-2c0b566c7cbd" type="checkbox" ><label class="sk-toggleable__label" for="f4586bd4-ab7d-4e72-8a9e-2c0b566c7cbd">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ac438cf-b993-4fae-a366-40201b9d922d" type="checkbox" ><label class="sk-toggleable__label" for="6ac438cf-b993-4fae-a366-40201b9d922d">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68dae7e5-0fa1-4ee3-aa45-150fb03580db" type="checkbox" ><label class="sk-toggleable__label" for="68dae7e5-0fa1-4ee3-aa45-150fb03580db">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26e42c76-7415-436b-a1d9-8ac5b46bc067" type="checkbox" ><label class="sk-toggleable__label" for="26e42c76-7415-436b-a1d9-8ac5b46bc067">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8d0d102-72ef-4d42-973b-2a6961e2d1a8" type="checkbox" ><label class="sk-toggleable__label" for="d8d0d102-72ef-4d42-973b-2a6961e2d1a8">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44db055d-3044-457f-a5b9-92aad26e3ef5" type="checkbox" ><label class="sk-toggleable__label" for="44db055d-3044-457f-a5b9-92aad26e3ef5">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86dcc20c-e0d9-4594-a33b-644b40752660" type="checkbox" ><label class="sk-toggleable__label" for="86dcc20c-e0d9-4594-a33b-644b40752660">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5960a6d-e17e-4836-a43a-df6f86a14fea" type="checkbox" ><label class="sk-toggleable__label" for="b5960a6d-e17e-4836-a43a-df6f86a14fea">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 {color: black;background-color: white;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 pre{padding: 0;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-toggleable {background-color: white;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-item {z-index: 1;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-parallel-item:only-child::after {width: 0;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-container {display: inline-block;position: relative;}#sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ed42ea8d-fd05-4548-be17-fe1eee74b4a4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb1839ae-1679-429c-8582-3572451bb413" type="checkbox" ><label class="sk-toggleable__label" for="fb1839ae-1679-429c-8582-3572451bb413">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82defe86-ca27-4195-aa89-2e1b05d40090" type="checkbox" ><label class="sk-toggleable__label" for="82defe86-ca27-4195-aa89-2e1b05d40090">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a30fd94-ba2d-47f5-95a6-0cc04eacc4a4" type="checkbox" ><label class="sk-toggleable__label" for="4a30fd94-ba2d-47f5-95a6-0cc04eacc4a4">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="368aee88-7e7d-4184-a519-d7429e16221e" type="checkbox" ><label class="sk-toggleable__label" for="368aee88-7e7d-4184-a519-d7429e16221e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94ad1095-8cd3-4904-92e1-21988fb9ac9b" type="checkbox" ><label class="sk-toggleable__label" for="94ad1095-8cd3-4904-92e1-21988fb9ac9b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63ca3095-a37e-45d5-b71d-3b846a6f1ab2" type="checkbox" ><label class="sk-toggleable__label" for="63ca3095-a37e-45d5-b71d-3b846a6f1ab2">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5bc618b-b53c-4186-a722-bf6d0252056b" type="checkbox" ><label class="sk-toggleable__label" for="c5bc618b-b53c-4186-a722-bf6d0252056b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d16d5e8-aa04-409c-b8e2-163a8971b4e7" type="checkbox" ><label class="sk-toggleable__label" for="4d16d5e8-aa04-409c-b8e2-163a8971b4e7">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13d65e5d-ddb8-4c0e-8012-5e841c8cb05b" type="checkbox" ><label class="sk-toggleable__label" for="13d65e5d-ddb8-4c0e-8012-5e841c8cb05b">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.134 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
