
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 {color: black;background-color: white;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 pre{padding: 0;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-toggleable {background-color: white;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-item {z-index: 1;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-parallel-item:only-child::after {width: 0;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c54c2775-71ce-4014-801d-a2b8e5e56938 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c54c2775-71ce-4014-801d-a2b8e5e56938" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78aa0d3e-7842-4fdf-8f51-6dc8639f1dee" type="checkbox" ><label for="78aa0d3e-7842-4fdf-8f51-6dc8639f1dee" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82352bdf-6363-4d57-927d-04a54534bca4" type="checkbox" ><label for="82352bdf-6363-4d57-927d-04a54534bca4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ac61c5c-9cc8-4a6d-91e5-70e4fae5e596" type="checkbox" ><label for="6ac61c5c-9cc8-4a6d-91e5-70e4fae5e596" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 {color: black;background-color: white;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 pre{padding: 0;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-toggleable {background-color: white;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-item {z-index: 1;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-parallel-item:only-child::after {width: 0;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5fc9921f-b397-4d80-8ef8-d150859f6259 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5fc9921f-b397-4d80-8ef8-d150859f6259" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49257235-f122-4c41-be33-a6aae93775d6" type="checkbox" ><label for="49257235-f122-4c41-be33-a6aae93775d6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b860092c-ebd7-46a9-8855-aed800a68dc4" type="checkbox" ><label for="b860092c-ebd7-46a9-8855-aed800a68dc4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69e7f47d-e038-4ca8-9491-68479c3be5c7" type="checkbox" ><label for="69e7f47d-e038-4ca8-9491-68479c3be5c7" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06991b2d-c886-4590-a6f7-5b69c7d627ba" type="checkbox" ><label for="06991b2d-c886-4590-a6f7-5b69c7d627ba" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 {color: black;background-color: white;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 pre{padding: 0;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-toggleable {background-color: white;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-item {z-index: 1;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-parallel-item:only-child::after {width: 0;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0009eb71-a39e-4797-a7b4-f613e8abf271 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0009eb71-a39e-4797-a7b4-f613e8abf271" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a99ac12-8083-4326-8836-1faabdbcdf56" type="checkbox" ><label for="8a99ac12-8083-4326-8836-1faabdbcdf56" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="920462d7-dfe3-4f68-a3b8-bae637bc6e67" type="checkbox" ><label for="920462d7-dfe3-4f68-a3b8-bae637bc6e67" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfb73645-3617-4fa2-986b-4b29d0cb4d08" type="checkbox" ><label for="bfb73645-3617-4fa2-986b-4b29d0cb4d08" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e48a5423-a410-455d-84f6-7cbf0571e96e {color: black;background-color: white;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e pre{padding: 0;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-toggleable {background-color: white;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-estimator:hover {background-color: #d4ebff;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-item {z-index: 1;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-parallel-item:only-child::after {width: 0;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e48a5423-a410-455d-84f6-7cbf0571e96e div.sk-text-repr-fallback {display: none;}</style><div id="sk-e48a5423-a410-455d-84f6-7cbf0571e96e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="512f1595-3f04-4bf3-a6d2-e57196198e1e" type="checkbox" ><label for="512f1595-3f04-4bf3-a6d2-e57196198e1e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="298bebbb-d25d-457e-a7e6-fa34d6b4c2e9" type="checkbox" ><label for="298bebbb-d25d-457e-a7e6-fa34d6b4c2e9" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7dd6535-dc29-4174-a709-439c8a26d176" type="checkbox" ><label for="b7dd6535-dc29-4174-a709-439c8a26d176" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31e63a06-4034-43bd-b44a-70554445614b" type="checkbox" ><label for="31e63a06-4034-43bd-b44a-70554445614b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28bd2288-0b6b-4592-a4bf-dd90246a554a" type="checkbox" ><label for="28bd2288-0b6b-4592-a4bf-dd90246a554a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36dae821-459b-4d8d-8b41-12a481bbaeb0" type="checkbox" ><label for="36dae821-459b-4d8d-8b41-12a481bbaeb0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="413a108a-80c6-4b27-98cd-a772ab14b75f" type="checkbox" ><label for="413a108a-80c6-4b27-98cd-a772ab14b75f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e951c35a-692c-4aec-9e54-0cd9a70976e4" type="checkbox" ><label for="e951c35a-692c-4aec-9e54-0cd9a70976e4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d0bbacc-f26f-4616-81aa-72e8890865f3" type="checkbox" ><label for="6d0bbacc-f26f-4616-81aa-72e8890865f3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 {color: black;background-color: white;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 pre{padding: 0;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-toggleable {background-color: white;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-item {z-index: 1;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-parallel-item:only-child::after {width: 0;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-018aff7b-3138-4bd1-b0a9-b145fb1808b2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca6b91ab-1ae7-4a70-bc62-2945d011a737" type="checkbox" ><label for="ca6b91ab-1ae7-4a70-bc62-2945d011a737" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0658d3a5-8390-4b0d-9b3c-1b7209e8f260" type="checkbox" ><label for="0658d3a5-8390-4b0d-9b3c-1b7209e8f260" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a31b5c0f-b1dc-43fb-b0d5-6513e14536c5" type="checkbox" ><label for="a31b5c0f-b1dc-43fb-b0d5-6513e14536c5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f92ac18-6bcd-4e75-b95c-6975c2b85061" type="checkbox" ><label for="4f92ac18-6bcd-4e75-b95c-6975c2b85061" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="468f27a6-662f-44c0-bf64-3af673674f9f" type="checkbox" ><label for="468f27a6-662f-44c0-bf64-3af673674f9f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f07917a4-bd16-4d72-8558-71c0c576a73b" type="checkbox" ><label for="f07917a4-bd16-4d72-8558-71c0c576a73b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e608cf8-57b2-48e1-836d-81afc9742d9d" type="checkbox" ><label for="4e608cf8-57b2-48e1-836d-81afc9742d9d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="354f54e1-9faf-443f-8a5a-a758c6b84823" type="checkbox" ><label for="354f54e1-9faf-443f-8a5a-a758c6b84823" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d8cff20-6995-4008-851f-6a1e6ba859f1" type="checkbox" ><label for="9d8cff20-6995-4008-851f-6a1e6ba859f1" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
