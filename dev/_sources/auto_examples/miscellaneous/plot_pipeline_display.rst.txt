
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-066c7abd-0e71-4416-87e5-02f278caef7f {color: black;background-color: white;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f pre{padding: 0;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-toggleable {background-color: white;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-estimator:hover {background-color: #d4ebff;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-item {z-index: 1;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-parallel-item:only-child::after {width: 0;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-container {display: inline-block;position: relative;}#sk-066c7abd-0e71-4416-87e5-02f278caef7f div.sk-text-repr-fallback {display: none;}</style><div id="sk-066c7abd-0e71-4416-87e5-02f278caef7f" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16ec4e23-d162-4358-ab33-48007f53755a" type="checkbox" ><label class="sk-toggleable__label" for="16ec4e23-d162-4358-ab33-48007f53755a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5d762b4-bfef-4339-b188-d19b768e36ed" type="checkbox" ><label class="sk-toggleable__label" for="f5d762b4-bfef-4339-b188-d19b768e36ed">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c851b61-1425-45cd-9dcf-a8f4ec32380a" type="checkbox" ><label class="sk-toggleable__label" for="4c851b61-1425-45cd-9dcf-a8f4ec32380a">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b {color: black;background-color: white;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b pre{padding: 0;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-toggleable {background-color: white;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-estimator:hover {background-color: #d4ebff;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-item {z-index: 1;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-parallel-item:only-child::after {width: 0;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-container {display: inline-block;position: relative;}#sk-e67d13f0-b4c8-4632-8000-ea3907ce104b div.sk-text-repr-fallback {display: none;}</style><div id="sk-e67d13f0-b4c8-4632-8000-ea3907ce104b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="015770b4-a03b-4a1c-baef-251a4d8ba7e8" type="checkbox" ><label class="sk-toggleable__label" for="015770b4-a03b-4a1c-baef-251a4d8ba7e8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79fac7c0-643a-4a5a-ae5e-933c13817008" type="checkbox" ><label class="sk-toggleable__label" for="79fac7c0-643a-4a5a-ae5e-933c13817008">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="870b29b7-f328-4abc-9297-7809fc849e41" type="checkbox" ><label class="sk-toggleable__label" for="870b29b7-f328-4abc-9297-7809fc849e41">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3eff48b-580e-4aa8-8981-ac6456bbb6c8" type="checkbox" ><label class="sk-toggleable__label" for="c3eff48b-580e-4aa8-8981-ac6456bbb6c8">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d {color: black;background-color: white;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d pre{padding: 0;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-toggleable {background-color: white;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-estimator:hover {background-color: #d4ebff;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-item {z-index: 1;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-parallel-item:only-child::after {width: 0;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-container {display: inline-block;position: relative;}#sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d div.sk-text-repr-fallback {display: none;}</style><div id="sk-887eb8b0-0a68-4b5a-9024-9f40dd3c535d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7db7d4ae-b586-4e12-932c-828da9545853" type="checkbox" ><label class="sk-toggleable__label" for="7db7d4ae-b586-4e12-932c-828da9545853">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8733a8db-aa0f-42f8-bf89-d59bd8bb04ca" type="checkbox" ><label class="sk-toggleable__label" for="8733a8db-aa0f-42f8-bf89-d59bd8bb04ca">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba93d85e-042a-4a16-9157-827c23b1671d" type="checkbox" ><label class="sk-toggleable__label" for="ba93d85e-042a-4a16-9157-827c23b1671d">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b {color: black;background-color: white;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b pre{padding: 0;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-toggleable {background-color: white;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-estimator:hover {background-color: #d4ebff;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-item {z-index: 1;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-parallel-item:only-child::after {width: 0;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-container {display: inline-block;position: relative;}#sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b div.sk-text-repr-fallback {display: none;}</style><div id="sk-1025d1e1-1ef2-4df6-9914-22d3a128e29b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d072acb9-fe37-4376-9295-0264c052343a" type="checkbox" ><label class="sk-toggleable__label" for="d072acb9-fe37-4376-9295-0264c052343a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65765852-052b-4466-ad61-7e5e07332cca" type="checkbox" ><label class="sk-toggleable__label" for="65765852-052b-4466-ad61-7e5e07332cca">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4c5acc7-8e2c-4a43-b0f2-e283324fd892" type="checkbox" ><label class="sk-toggleable__label" for="f4c5acc7-8e2c-4a43-b0f2-e283324fd892">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3afaa45e-f003-449a-b513-1a79627e5486" type="checkbox" ><label class="sk-toggleable__label" for="3afaa45e-f003-449a-b513-1a79627e5486">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d593a092-0124-4f60-bec5-0469810da08b" type="checkbox" ><label class="sk-toggleable__label" for="d593a092-0124-4f60-bec5-0469810da08b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8217aeb4-356b-4004-99e7-ddf210fd572f" type="checkbox" ><label class="sk-toggleable__label" for="8217aeb4-356b-4004-99e7-ddf210fd572f">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70404549-d1d9-44a8-a8f4-198ad07e8ac0" type="checkbox" ><label class="sk-toggleable__label" for="70404549-d1d9-44a8-a8f4-198ad07e8ac0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3f2cf10-2460-4bb1-8716-a6d9219b5e05" type="checkbox" ><label class="sk-toggleable__label" for="c3f2cf10-2460-4bb1-8716-a6d9219b5e05">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f04f411b-2ab5-4164-b776-af8bf8dbd330" type="checkbox" ><label class="sk-toggleable__label" for="f04f411b-2ab5-4164-b776-af8bf8dbd330">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b {color: black;background-color: white;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b pre{padding: 0;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-toggleable {background-color: white;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-estimator:hover {background-color: #d4ebff;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-item {z-index: 1;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-parallel-item:only-child::after {width: 0;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-container {display: inline-block;position: relative;}#sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b div.sk-text-repr-fallback {display: none;}</style><div id="sk-b6b792e3-2531-46c8-a7aa-78a84b9f296b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3052f81-9758-4226-bb21-856d5c281e02" type="checkbox" ><label class="sk-toggleable__label" for="b3052f81-9758-4226-bb21-856d5c281e02">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75c344b0-9d87-4cfd-a5d0-9ac6e6cfd702" type="checkbox" ><label class="sk-toggleable__label" for="75c344b0-9d87-4cfd-a5d0-9ac6e6cfd702">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89a7046d-acd5-4d3d-a403-faa41a8097fe" type="checkbox" ><label class="sk-toggleable__label" for="89a7046d-acd5-4d3d-a403-faa41a8097fe">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a9ae62b-1b71-4e6b-b161-2f2d63a856a2" type="checkbox" ><label class="sk-toggleable__label" for="6a9ae62b-1b71-4e6b-b161-2f2d63a856a2">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d228248-d55e-49ae-8039-565680532d82" type="checkbox" ><label class="sk-toggleable__label" for="8d228248-d55e-49ae-8039-565680532d82">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bb7ad73-bde7-47a6-a527-043c8794e64a" type="checkbox" ><label class="sk-toggleable__label" for="6bb7ad73-bde7-47a6-a527-043c8794e64a">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f88e9b0a-bec9-4b55-bb72-21632b6381c6" type="checkbox" ><label class="sk-toggleable__label" for="f88e9b0a-bec9-4b55-bb72-21632b6381c6">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e4adb11-4550-4a1e-be5e-91959daf2ae0" type="checkbox" ><label class="sk-toggleable__label" for="0e4adb11-4550-4a1e-be5e-91959daf2ae0">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e247bf48-9ade-4278-b0b4-772974120152" type="checkbox" ><label class="sk-toggleable__label" for="e247bf48-9ade-4278-b0b4-772974120152">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.083 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
