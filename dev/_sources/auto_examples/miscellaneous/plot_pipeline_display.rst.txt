
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 {color: black;background-color: white;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 pre{padding: 0;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-toggleable {background-color: white;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-item {z-index: 1;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-parallel-item:only-child::after {width: 0;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-container {display: inline-block;position: relative;}#sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d3cc45ae-4e7d-4525-a8fb-d827d996ea11" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbfea97e-221c-48ac-add4-883a8117d585" type="checkbox" ><label class="sk-toggleable__label" for="dbfea97e-221c-48ac-add4-883a8117d585">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53848ce5-da2c-46e6-af16-98a92249dc1e" type="checkbox" ><label class="sk-toggleable__label" for="53848ce5-da2c-46e6-af16-98a92249dc1e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="991cc16e-c4bf-4b58-ad8e-b5d3cade6800" type="checkbox" ><label class="sk-toggleable__label" for="991cc16e-c4bf-4b58-ad8e-b5d3cade6800">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 {color: black;background-color: white;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 pre{padding: 0;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-toggleable {background-color: white;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-item {z-index: 1;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-parallel-item:only-child::after {width: 0;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-container {display: inline-block;position: relative;}#sk-1cc4d723-de5a-476f-93a3-a9add62d3c21 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1cc4d723-de5a-476f-93a3-a9add62d3c21" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d68a44d-cc6a-4b6f-b04a-7c0ab4312f59" type="checkbox" ><label class="sk-toggleable__label" for="4d68a44d-cc6a-4b6f-b04a-7c0ab4312f59">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be106ed7-1f1c-4b9a-9444-46fcc3689117" type="checkbox" ><label class="sk-toggleable__label" for="be106ed7-1f1c-4b9a-9444-46fcc3689117">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b797eb48-2cff-4fc7-a386-6d36c43b979f" type="checkbox" ><label class="sk-toggleable__label" for="b797eb48-2cff-4fc7-a386-6d36c43b979f">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="162a25e6-5bd7-49bc-b287-fbe6a75fe57e" type="checkbox" ><label class="sk-toggleable__label" for="162a25e6-5bd7-49bc-b287-fbe6a75fe57e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 {color: black;background-color: white;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 pre{padding: 0;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-toggleable {background-color: white;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-estimator:hover {background-color: #d4ebff;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-item {z-index: 1;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-parallel-item:only-child::after {width: 0;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-container {display: inline-block;position: relative;}#sk-11776ff7-bc21-4bcd-a990-d4462e8f4087 div.sk-text-repr-fallback {display: none;}</style><div id="sk-11776ff7-bc21-4bcd-a990-d4462e8f4087" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f0a5376-5103-4833-a04f-0909c55081e0" type="checkbox" ><label class="sk-toggleable__label" for="6f0a5376-5103-4833-a04f-0909c55081e0">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3251b03-f246-4dab-9d94-ed4273fe1ce6" type="checkbox" ><label class="sk-toggleable__label" for="c3251b03-f246-4dab-9d94-ed4273fe1ce6">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e86f6a9-78bf-45b7-874a-810eef472d8b" type="checkbox" ><label class="sk-toggleable__label" for="4e86f6a9-78bf-45b7-874a-810eef472d8b">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 {color: black;background-color: white;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 pre{padding: 0;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-toggleable {background-color: white;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-item {z-index: 1;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-parallel-item:only-child::after {width: 0;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-container {display: inline-block;position: relative;}#sk-13e55864-0aa9-47c8-90cb-ba68878083e2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-13e55864-0aa9-47c8-90cb-ba68878083e2" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f77a338-76c9-4050-bfbb-b7f2916122c0" type="checkbox" ><label class="sk-toggleable__label" for="4f77a338-76c9-4050-bfbb-b7f2916122c0">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fc9d43f-65a5-4fea-bd39-9ccc7a8115ab" type="checkbox" ><label class="sk-toggleable__label" for="3fc9d43f-65a5-4fea-bd39-9ccc7a8115ab">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79c59026-588a-45ae-b579-0a7a3dc91700" type="checkbox" ><label class="sk-toggleable__label" for="79c59026-588a-45ae-b579-0a7a3dc91700">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e41ff26b-2baa-436c-9866-879b25505269" type="checkbox" ><label class="sk-toggleable__label" for="e41ff26b-2baa-436c-9866-879b25505269">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b67ac2e1-20f2-45d2-9748-a4699ba3caed" type="checkbox" ><label class="sk-toggleable__label" for="b67ac2e1-20f2-45d2-9748-a4699ba3caed">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f28a1143-a01a-422e-84fa-9800507759f7" type="checkbox" ><label class="sk-toggleable__label" for="f28a1143-a01a-422e-84fa-9800507759f7">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f615091-064f-4098-8830-4202197eb25c" type="checkbox" ><label class="sk-toggleable__label" for="2f615091-064f-4098-8830-4202197eb25c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d530e35-f6de-4438-8fc1-413fac6d5c33" type="checkbox" ><label class="sk-toggleable__label" for="4d530e35-f6de-4438-8fc1-413fac6d5c33">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00c8b738-0281-4892-9728-c58d30fbc476" type="checkbox" ><label class="sk-toggleable__label" for="00c8b738-0281-4892-9728-c58d30fbc476">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b {color: black;background-color: white;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b pre{padding: 0;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-toggleable {background-color: white;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-estimator:hover {background-color: #d4ebff;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-item {z-index: 1;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-parallel-item:only-child::after {width: 0;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-container {display: inline-block;position: relative;}#sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b div.sk-text-repr-fallback {display: none;}</style><div id="sk-9e482fdb-ca55-4ded-9b97-f286aaf0570b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b7ffd30-2f3f-4167-a88c-9d4dd9f3c7cb" type="checkbox" ><label class="sk-toggleable__label" for="2b7ffd30-2f3f-4167-a88c-9d4dd9f3c7cb">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38bcced1-14dc-4919-9770-e8d50d2f2752" type="checkbox" ><label class="sk-toggleable__label" for="38bcced1-14dc-4919-9770-e8d50d2f2752">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="743086e5-f840-44c7-bfe6-bc46a6a9671e" type="checkbox" ><label class="sk-toggleable__label" for="743086e5-f840-44c7-bfe6-bc46a6a9671e">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14e4e3ed-e4ef-4bb9-9023-500d382b29a5" type="checkbox" ><label class="sk-toggleable__label" for="14e4e3ed-e4ef-4bb9-9023-500d382b29a5">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3ef535d-0530-4d53-8066-e90c7cee4055" type="checkbox" ><label class="sk-toggleable__label" for="a3ef535d-0530-4d53-8066-e90c7cee4055">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ef00c6c-9198-4dfd-a491-c4bc7b77e913" type="checkbox" ><label class="sk-toggleable__label" for="4ef00c6c-9198-4dfd-a491-c4bc7b77e913">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bf7be9f-c7ab-4dc5-b92c-795ef02cb121" type="checkbox" ><label class="sk-toggleable__label" for="0bf7be9f-c7ab-4dc5-b92c-795ef02cb121">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2adef0d3-7c9b-422b-bcb7-81dc09f115df" type="checkbox" ><label class="sk-toggleable__label" for="2adef0d3-7c9b-422b-bcb7-81dc09f115df">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e452fa7d-db07-43a9-8bc8-fbb2081d971f" type="checkbox" ><label class="sk-toggleable__label" for="e452fa7d-db07-43a9-8bc8-fbb2081d971f">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.101 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
