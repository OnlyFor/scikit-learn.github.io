
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 {color: black;background-color: white;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 pre{padding: 0;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-toggleable {background-color: white;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-item {z-index: 1;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-parallel-item:only-child::after {width: 0;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-container {display: inline-block;position: relative;}#sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b4a451a-0e4a-484c-83df-b8e12db2a8a4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46e12dbc-e624-46e2-90eb-178bcfd07e8d" type="checkbox" ><label class="sk-toggleable__label" for="46e12dbc-e624-46e2-90eb-178bcfd07e8d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff1184f6-63a7-40cd-a57c-46e45c1deab9" type="checkbox" ><label class="sk-toggleable__label" for="ff1184f6-63a7-40cd-a57c-46e45c1deab9">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2705bdb-69a7-4f27-b5d5-852e61e39504" type="checkbox" ><label class="sk-toggleable__label" for="f2705bdb-69a7-4f27-b5d5-852e61e39504">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-22ac100c-9e46-444a-8298-58d85c40deb1 {color: black;background-color: white;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 pre{padding: 0;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-toggleable {background-color: white;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-item {z-index: 1;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-parallel-item:only-child::after {width: 0;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-container {display: inline-block;position: relative;}#sk-22ac100c-9e46-444a-8298-58d85c40deb1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-22ac100c-9e46-444a-8298-58d85c40deb1" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd8241c3-05cb-4bb4-abb0-1c535e650ef1" type="checkbox" ><label class="sk-toggleable__label" for="dd8241c3-05cb-4bb4-abb0-1c535e650ef1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51a1bb5d-97c3-4e86-82d1-22d8833059f3" type="checkbox" ><label class="sk-toggleable__label" for="51a1bb5d-97c3-4e86-82d1-22d8833059f3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83c15ae6-28e4-4463-bc66-9a455f7b9f36" type="checkbox" ><label class="sk-toggleable__label" for="83c15ae6-28e4-4463-bc66-9a455f7b9f36">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72a2cf28-577b-430e-b1d3-8a2ac323c37b" type="checkbox" ><label class="sk-toggleable__label" for="72a2cf28-577b-430e-b1d3-8a2ac323c37b">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 {color: black;background-color: white;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 pre{padding: 0;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-toggleable {background-color: white;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-item {z-index: 1;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-parallel-item:only-child::after {width: 0;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-container {display: inline-block;position: relative;}#sk-77d66de9-867b-421f-b8ab-8a957d201cc0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-77d66de9-867b-421f-b8ab-8a957d201cc0" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed3279ef-b32b-4435-a8aa-381fa73152ec" type="checkbox" ><label class="sk-toggleable__label" for="ed3279ef-b32b-4435-a8aa-381fa73152ec">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcc7a71f-6383-4fef-9a99-79e9bc6bc16d" type="checkbox" ><label class="sk-toggleable__label" for="fcc7a71f-6383-4fef-9a99-79e9bc6bc16d">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78973a9d-c3a0-468e-979c-70aa0b47408c" type="checkbox" ><label class="sk-toggleable__label" for="78973a9d-c3a0-468e-979c-70aa0b47408c">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 {color: black;background-color: white;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 pre{padding: 0;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-toggleable {background-color: white;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-item {z-index: 1;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-parallel-item:only-child::after {width: 0;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-container {display: inline-block;position: relative;}#sk-3cc71332-5a73-45a9-8408-40bc75c0ced3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3cc71332-5a73-45a9-8408-40bc75c0ced3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9104e5be-77fc-475c-92ea-77eae96c118e" type="checkbox" ><label class="sk-toggleable__label" for="9104e5be-77fc-475c-92ea-77eae96c118e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2419ddb-fa83-43cb-8fb1-18a7e66abecc" type="checkbox" ><label class="sk-toggleable__label" for="a2419ddb-fa83-43cb-8fb1-18a7e66abecc">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25c07a1b-148a-4c25-b9c3-7e5b6f5b208e" type="checkbox" ><label class="sk-toggleable__label" for="25c07a1b-148a-4c25-b9c3-7e5b6f5b208e">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="727b5acd-12d1-484d-a5cd-7fab810cccb9" type="checkbox" ><label class="sk-toggleable__label" for="727b5acd-12d1-484d-a5cd-7fab810cccb9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="461d0a2d-8119-4aea-bb5b-612bf80955f0" type="checkbox" ><label class="sk-toggleable__label" for="461d0a2d-8119-4aea-bb5b-612bf80955f0">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0360239d-55da-418d-b468-087a76da6655" type="checkbox" ><label class="sk-toggleable__label" for="0360239d-55da-418d-b468-087a76da6655">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="609ff015-5c30-4996-93e0-ce8bf9a8aaef" type="checkbox" ><label class="sk-toggleable__label" for="609ff015-5c30-4996-93e0-ce8bf9a8aaef">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cb3fb30-f866-47aa-a371-fcf8f5ed2420" type="checkbox" ><label class="sk-toggleable__label" for="6cb3fb30-f866-47aa-a371-fcf8f5ed2420">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e24f1a9-95fb-4bb1-81cf-686d271885c8" type="checkbox" ><label class="sk-toggleable__label" for="2e24f1a9-95fb-4bb1-81cf-686d271885c8">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 {color: black;background-color: white;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 pre{padding: 0;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-toggleable {background-color: white;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-item {z-index: 1;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-parallel-item:only-child::after {width: 0;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-container {display: inline-block;position: relative;}#sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0bd6ef41-e859-4bdd-aa89-df0a891ecc62" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5dfe1eaa-e534-4b77-8139-2add008316a3" type="checkbox" ><label class="sk-toggleable__label" for="5dfe1eaa-e534-4b77-8139-2add008316a3">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3024ce6f-85f5-4ea2-bddb-3b87c8379e47" type="checkbox" ><label class="sk-toggleable__label" for="3024ce6f-85f5-4ea2-bddb-3b87c8379e47">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cf56bf6-b069-41ce-9ce6-779b140ab628" type="checkbox" ><label class="sk-toggleable__label" for="0cf56bf6-b069-41ce-9ce6-779b140ab628">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f926eb7e-be05-48d4-b8d8-8fc2b041a129" type="checkbox" ><label class="sk-toggleable__label" for="f926eb7e-be05-48d4-b8d8-8fc2b041a129">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c319f35-62f9-4493-b667-30014af64b1d" type="checkbox" ><label class="sk-toggleable__label" for="3c319f35-62f9-4493-b667-30014af64b1d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88760029-353f-4e15-b8b9-43a325fc9e72" type="checkbox" ><label class="sk-toggleable__label" for="88760029-353f-4e15-b8b9-43a325fc9e72">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af1df0aa-9a5c-4846-9566-eb562b5053ea" type="checkbox" ><label class="sk-toggleable__label" for="af1df0aa-9a5c-4846-9566-eb562b5053ea">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10e07169-d750-46fe-a617-d765a9fe12ff" type="checkbox" ><label class="sk-toggleable__label" for="10e07169-d750-46fe-a617-d765a9fe12ff">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b25b4c3-ea20-472a-9a81-1b286a7a6cac" type="checkbox" ><label class="sk-toggleable__label" for="3b25b4c3-ea20-472a-9a81-1b286a7a6cac">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.126 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
