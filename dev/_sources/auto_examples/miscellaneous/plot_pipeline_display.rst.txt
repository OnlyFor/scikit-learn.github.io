
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb {color: black;background-color: white;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb pre{padding: 0;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-toggleable {background-color: white;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-estimator:hover {background-color: #d4ebff;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-item {z-index: 1;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-parallel-item:only-child::after {width: 0;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb div.sk-text-repr-fallback {display: none;}</style><div id="sk-17b585d4-76a1-4309-9f94-0b5017f7d7bb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f39fbc20-ca95-4f15-868a-abad741287cb" type="checkbox" ><label for="f39fbc20-ca95-4f15-868a-abad741287cb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98e47a21-0ac2-4c08-bb67-97b931e62659" type="checkbox" ><label for="98e47a21-0ac2-4c08-bb67-97b931e62659" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a97d8f01-6f65-4865-b680-e2346745a3cb" type="checkbox" ><label for="a97d8f01-6f65-4865-b680-e2346745a3cb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 {color: black;background-color: white;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 pre{padding: 0;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-toggleable {background-color: white;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-estimator:hover {background-color: #d4ebff;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-item {z-index: 1;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-parallel-item:only-child::after {width: 0;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-43f5d44d-ed79-47b8-a21b-e4289c14e635 div.sk-text-repr-fallback {display: none;}</style><div id="sk-43f5d44d-ed79-47b8-a21b-e4289c14e635" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f476d160-4ec3-42da-9348-112ea979353c" type="checkbox" ><label for="f476d160-4ec3-42da-9348-112ea979353c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f3a4010-83e0-465b-9945-f02a3b60bbb6" type="checkbox" ><label for="3f3a4010-83e0-465b-9945-f02a3b60bbb6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="822151ef-e0cb-47d9-b152-a7d2ca342dbf" type="checkbox" ><label for="822151ef-e0cb-47d9-b152-a7d2ca342dbf" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72e035a5-b6f3-4f62-8e58-b49866c5c8f7" type="checkbox" ><label for="72e035a5-b6f3-4f62-8e58-b49866c5c8f7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 {color: black;background-color: white;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 pre{padding: 0;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-toggleable {background-color: white;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-item {z-index: 1;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-parallel-item:only-child::after {width: 0;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-acb118a5-93b2-4d09-a27b-e38ca37541e7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-acb118a5-93b2-4d09-a27b-e38ca37541e7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73a05e74-d69d-4a8a-ae03-18b7a9ce1a9c" type="checkbox" ><label for="73a05e74-d69d-4a8a-ae03-18b7a9ce1a9c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="244a5984-4002-4cbb-9249-1dfb1a49da04" type="checkbox" ><label for="244a5984-4002-4cbb-9249-1dfb1a49da04" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f6e13d9-74b8-4ce5-b0fc-f697b78896eb" type="checkbox" ><label for="2f6e13d9-74b8-4ce5-b0fc-f697b78896eb" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 {color: black;background-color: white;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 pre{padding: 0;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-toggleable {background-color: white;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-item {z-index: 1;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-parallel-item:only-child::after {width: 0;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9c50f7ef-f78f-4071-bc84-5e7639596a20 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9c50f7ef-f78f-4071-bc84-5e7639596a20" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56aad04b-5006-45a9-875e-4e8b6e73056c" type="checkbox" ><label for="56aad04b-5006-45a9-875e-4e8b6e73056c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28d99898-6e51-4f9c-a64a-567daaf7fb79" type="checkbox" ><label for="28d99898-6e51-4f9c-a64a-567daaf7fb79" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73c77fc3-9833-496f-8500-e9db82fa5f3d" type="checkbox" ><label for="73c77fc3-9833-496f-8500-e9db82fa5f3d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="510940d3-6523-4212-9320-08e08f412c06" type="checkbox" ><label for="510940d3-6523-4212-9320-08e08f412c06" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f22a95fb-9951-44e9-b410-d43968124a52" type="checkbox" ><label for="f22a95fb-9951-44e9-b410-d43968124a52" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5e3ba96-0284-4526-93b9-7ddf515f409b" type="checkbox" ><label for="f5e3ba96-0284-4526-93b9-7ddf515f409b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3a8d65b-8052-4a83-868d-ae893fc8313b" type="checkbox" ><label for="d3a8d65b-8052-4a83-868d-ae893fc8313b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f72fda8-3440-4d70-bad6-613fc842934c" type="checkbox" ><label for="8f72fda8-3440-4d70-bad6-613fc842934c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe339d11-0dd9-4822-a88b-d432a12de829" type="checkbox" ><label for="fe339d11-0dd9-4822-a88b-d432a12de829" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f {color: black;background-color: white;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f pre{padding: 0;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-toggleable {background-color: white;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-estimator:hover {background-color: #d4ebff;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-item {z-index: 1;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-parallel-item:only-child::after {width: 0;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f div.sk-text-repr-fallback {display: none;}</style><div id="sk-cc4ad448-a4a5-45d9-bd93-6b89b5e8ea8f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99617abc-f8b8-418f-ba1b-984bfdeefcc4" type="checkbox" ><label for="99617abc-f8b8-418f-ba1b-984bfdeefcc4" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a41504f-1dc4-43bd-b3ed-62d873b2b498" type="checkbox" ><label for="3a41504f-1dc4-43bd-b3ed-62d873b2b498" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94048e1c-8ffb-4da7-a3ea-71b2e0f2e81c" type="checkbox" ><label for="94048e1c-8ffb-4da7-a3ea-71b2e0f2e81c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be3913a0-f24a-426f-9238-26f5e0be7272" type="checkbox" ><label for="be3913a0-f24a-426f-9238-26f5e0be7272" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e74c030-f10d-461b-856c-00e1d0e65743" type="checkbox" ><label for="5e74c030-f10d-461b-856c-00e1d0e65743" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97dfe2bc-abda-4b5e-a484-9bab0eb3c59e" type="checkbox" ><label for="97dfe2bc-abda-4b5e-a484-9bab0eb3c59e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="512f3c9e-9525-46f7-8ab5-01aa818061f4" type="checkbox" ><label for="512f3c9e-9525-46f7-8ab5-01aa818061f4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ad8e23e-2da9-40da-bbc8-8904078afdff" type="checkbox" ><label for="1ad8e23e-2da9-40da-bbc8-8904078afdff" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7e151a7-61b8-49be-9051-7940aba97eeb" type="checkbox" ><label for="d7e151a7-61b8-49be-9051-7940aba97eeb" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
