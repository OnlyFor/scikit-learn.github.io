
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 {color: black;background-color: white;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 pre{padding: 0;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-toggleable {background-color: white;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-item {z-index: 1;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3d7154bd-3823-4d1b-be51-f0199b0c70c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="807ecbdd-9a93-42ad-b34d-28d3fc41772f" type="checkbox" ><label for="807ecbdd-9a93-42ad-b34d-28d3fc41772f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e673080-196e-4e97-9cb4-9858949d7072" type="checkbox" ><label for="3e673080-196e-4e97-9cb4-9858949d7072" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aed9f1ec-749b-4722-8c67-f90a48e9d2e0" type="checkbox" ><label for="aed9f1ec-749b-4722-8c67-f90a48e9d2e0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac {color: black;background-color: white;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac pre{padding: 0;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-toggleable {background-color: white;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-estimator:hover {background-color: #d4ebff;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-item {z-index: 1;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-parallel-item:only-child::after {width: 0;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac div.sk-text-repr-fallback {display: none;}</style><div id="sk-2e01aa32-67a2-4d15-a0e7-05edcded02ac" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50af9071-ccd2-4713-95db-e0693d7589fa" type="checkbox" ><label for="50af9071-ccd2-4713-95db-e0693d7589fa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f39193f-07c9-4e5e-836f-b039bdaa6fc7" type="checkbox" ><label for="3f39193f-07c9-4e5e-836f-b039bdaa6fc7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a785db6-fc3d-4bb2-92eb-e4733c9a1feb" type="checkbox" ><label for="4a785db6-fc3d-4bb2-92eb-e4733c9a1feb" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d771be7-c196-4e2f-8bd9-9ea0834b0709" type="checkbox" ><label for="0d771be7-c196-4e2f-8bd9-9ea0834b0709" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e {color: black;background-color: white;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e pre{padding: 0;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-toggleable {background-color: white;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-item {z-index: 1;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-parallel-item:only-child::after {width: 0;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a7178d0-6518-4dcf-a52d-27aacc589d7e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="991aac98-9cea-4a29-857b-c30b2ebef1b2" type="checkbox" ><label for="991aac98-9cea-4a29-857b-c30b2ebef1b2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed21105d-2a4a-48b4-acb2-2d9b16028b4b" type="checkbox" ><label for="ed21105d-2a4a-48b4-acb2-2d9b16028b4b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e2bcb63-cbf9-4a96-af77-1450ede3d354" type="checkbox" ><label for="8e2bcb63-cbf9-4a96-af77-1450ede3d354" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-af2e7976-4d86-4745-97ec-867f1c536375 {color: black;background-color: white;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 pre{padding: 0;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-toggleable {background-color: white;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-estimator:hover {background-color: #d4ebff;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-item {z-index: 1;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-parallel-item:only-child::after {width: 0;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-af2e7976-4d86-4745-97ec-867f1c536375 div.sk-text-repr-fallback {display: none;}</style><div id="sk-af2e7976-4d86-4745-97ec-867f1c536375" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c8cbd1b-5fdb-4861-b21d-d0c40c53b5ab" type="checkbox" ><label for="3c8cbd1b-5fdb-4861-b21d-d0c40c53b5ab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="959f049d-9e29-4157-a874-772362b1054b" type="checkbox" ><label for="959f049d-9e29-4157-a874-772362b1054b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3f42bcb-45ef-4010-a1b8-fb13076c436d" type="checkbox" ><label for="d3f42bcb-45ef-4010-a1b8-fb13076c436d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0b651fc-5c80-488b-bec7-611c185d7f8d" type="checkbox" ><label for="a0b651fc-5c80-488b-bec7-611c185d7f8d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d110c77-3f78-41f9-8457-9d8f93b162a3" type="checkbox" ><label for="7d110c77-3f78-41f9-8457-9d8f93b162a3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fab047a-ac0e-428c-a603-095934e56ea3" type="checkbox" ><label for="5fab047a-ac0e-428c-a603-095934e56ea3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa46bf4e-af48-484a-813d-00be0f673069" type="checkbox" ><label for="aa46bf4e-af48-484a-813d-00be0f673069" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bce07ef9-c232-41c1-ad28-ad0bbdebd4df" type="checkbox" ><label for="bce07ef9-c232-41c1-ad28-ad0bbdebd4df" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efd087c3-463a-4262-8c9e-d3bbe65717a4" type="checkbox" ><label for="efd087c3-463a-4262-8c9e-d3bbe65717a4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 {color: black;background-color: white;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 pre{padding: 0;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-toggleable {background-color: white;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-item {z-index: 1;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-parallel-item:only-child::after {width: 0;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fb151f37-04fd-48bd-9425-94ae1630cfc5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fb151f37-04fd-48bd-9425-94ae1630cfc5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e68b300-2bc9-4ec9-a0a9-5f86e9a9c4bd" type="checkbox" ><label for="2e68b300-2bc9-4ec9-a0a9-5f86e9a9c4bd" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad3e8db8-0d1e-4374-991b-721e80d42d8a" type="checkbox" ><label for="ad3e8db8-0d1e-4374-991b-721e80d42d8a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f081ffe-ffbb-4872-8a65-2f8e538607a4" type="checkbox" ><label for="1f081ffe-ffbb-4872-8a65-2f8e538607a4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b546040-820f-41ac-b2eb-1bcea867e0ff" type="checkbox" ><label for="2b546040-820f-41ac-b2eb-1bcea867e0ff" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8ead3f5-82f5-44eb-88ed-2f82cd631541" type="checkbox" ><label for="b8ead3f5-82f5-44eb-88ed-2f82cd631541" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1d70840-5ae9-436b-abbc-994eefe5e239" type="checkbox" ><label for="a1d70840-5ae9-436b-abbc-994eefe5e239" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28497e5d-6f89-4737-826b-637221d4782e" type="checkbox" ><label for="28497e5d-6f89-4737-826b-637221d4782e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d27be3d0-06a2-4e85-afc8-68d2e4690e99" type="checkbox" ><label for="d27be3d0-06a2-4e85-afc8-68d2e4690e99" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70be8cff-74ea-442f-a9d6-796aea0af5a7" type="checkbox" ><label for="70be8cff-74ea-442f-a9d6-796aea0af5a7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
