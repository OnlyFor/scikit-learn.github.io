
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b {color: black;background-color: white;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b pre{padding: 0;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-toggleable {background-color: white;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-estimator:hover {background-color: #d4ebff;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-item {z-index: 1;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-parallel-item:only-child::after {width: 0;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-532580c7-3fd2-4867-8ff7-99199a75cb3b div.sk-text-repr-fallback {display: none;}</style><div id="sk-532580c7-3fd2-4867-8ff7-99199a75cb3b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="169ba565-7866-4a23-a2fa-806f75d09994" type="checkbox" ><label for="169ba565-7866-4a23-a2fa-806f75d09994" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4632f41d-1d3e-434e-bde8-4965e2ee7925" type="checkbox" ><label for="4632f41d-1d3e-434e-bde8-4965e2ee7925" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f54dd93-179d-48c4-8c4a-f47106386c4b" type="checkbox" ><label for="0f54dd93-179d-48c4-8c4a-f47106386c4b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f {color: black;background-color: white;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f pre{padding: 0;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-toggleable {background-color: white;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-estimator:hover {background-color: #d4ebff;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-item {z-index: 1;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-parallel-item:only-child::after {width: 0;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f div.sk-text-repr-fallback {display: none;}</style><div id="sk-4ea12cfd-b81d-4d12-a3b6-95a9f57cff5f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0446dc68-0d6c-44e0-9149-8cede431dd2a" type="checkbox" ><label for="0446dc68-0d6c-44e0-9149-8cede431dd2a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec52bf52-bd79-45bb-8bb0-d2fae8f353eb" type="checkbox" ><label for="ec52bf52-bd79-45bb-8bb0-d2fae8f353eb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1082eaac-3df1-4e97-b93f-ff14ddf147a5" type="checkbox" ><label for="1082eaac-3df1-4e97-b93f-ff14ddf147a5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96e4d3aa-5e7a-4e49-8e9b-b06fbc7378ac" type="checkbox" ><label for="96e4d3aa-5e7a-4e49-8e9b-b06fbc7378ac" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d {color: black;background-color: white;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d pre{padding: 0;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-toggleable {background-color: white;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-estimator:hover {background-color: #d4ebff;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-item {z-index: 1;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-parallel-item:only-child::after {width: 0;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d div.sk-text-repr-fallback {display: none;}</style><div id="sk-81e9c544-ab4b-412e-a9a2-c0dd0479630d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a616a98-fee1-433c-90ec-00ba1a1a2d50" type="checkbox" ><label for="9a616a98-fee1-433c-90ec-00ba1a1a2d50" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c44a5a04-b62a-4168-b51c-84e5f0d9a520" type="checkbox" ><label for="c44a5a04-b62a-4168-b51c-84e5f0d9a520" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28751756-c5a9-48b8-9e1a-9cd5bd09c899" type="checkbox" ><label for="28751756-c5a9-48b8-9e1a-9cd5bd09c899" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3c715934-f3a9-4091-b13e-e36a84048017 {color: black;background-color: white;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 pre{padding: 0;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-toggleable {background-color: white;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-item {z-index: 1;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-parallel-item:only-child::after {width: 0;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3c715934-f3a9-4091-b13e-e36a84048017 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3c715934-f3a9-4091-b13e-e36a84048017" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6554e5e-4cbc-495f-acf9-bfdb849051f9" type="checkbox" ><label for="c6554e5e-4cbc-495f-acf9-bfdb849051f9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="439d8daf-2ee6-4374-bf8d-6a49194d903e" type="checkbox" ><label for="439d8daf-2ee6-4374-bf8d-6a49194d903e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f6efd91-3f78-43fd-866d-57cb772011e6" type="checkbox" ><label for="0f6efd91-3f78-43fd-866d-57cb772011e6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc017058-b1f0-45b7-9211-17058fdcba13" type="checkbox" ><label for="dc017058-b1f0-45b7-9211-17058fdcba13" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a31610d-7adb-4d44-afc9-d51c952b16f4" type="checkbox" ><label for="4a31610d-7adb-4d44-afc9-d51c952b16f4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="049167dd-17c7-41fc-ae47-15e669524321" type="checkbox" ><label for="049167dd-17c7-41fc-ae47-15e669524321" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f20c0d5-2bf2-426e-8e71-4ae19f7c15e8" type="checkbox" ><label for="3f20c0d5-2bf2-426e-8e71-4ae19f7c15e8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05cb26a2-34f9-4d40-a970-d0987232bd9a" type="checkbox" ><label for="05cb26a2-34f9-4d40-a970-d0987232bd9a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f70f50ba-1a48-4305-99ed-281f9b62b3a9" type="checkbox" ><label for="f70f50ba-1a48-4305-99ed-281f9b62b3a9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 {color: black;background-color: white;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 pre{padding: 0;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-toggleable {background-color: white;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-item {z-index: 1;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-parallel-item:only-child::after {width: 0;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7da6993f-79e4-4711-b5ae-f2bcc31e1b77" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e14efaf-5020-4853-a4b9-b3a37f0eec47" type="checkbox" ><label for="2e14efaf-5020-4853-a4b9-b3a37f0eec47" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="613b3b3c-39bb-44e1-ab1c-b39be9317cbd" type="checkbox" ><label for="613b3b3c-39bb-44e1-ab1c-b39be9317cbd" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22261657-c176-40da-a040-21a63da33a64" type="checkbox" ><label for="22261657-c176-40da-a040-21a63da33a64" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55410f7f-fef6-4019-b4f8-3c15251264e6" type="checkbox" ><label for="55410f7f-fef6-4019-b4f8-3c15251264e6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0fd44a6-30f3-4b57-83dd-919815cd7057" type="checkbox" ><label for="a0fd44a6-30f3-4b57-83dd-919815cd7057" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff872e3a-700a-4351-a684-63fda2daa485" type="checkbox" ><label for="ff872e3a-700a-4351-a684-63fda2daa485" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9819b9f7-26b2-46d5-a1cf-767a8aa77dbf" type="checkbox" ><label for="9819b9f7-26b2-46d5-a1cf-767a8aa77dbf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d0703fb-3c38-43b2-84c1-454584fdf5d6" type="checkbox" ><label for="7d0703fb-3c38-43b2-84c1-454584fdf5d6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49b77cf0-c2af-446c-a746-c7eea8a46a61" type="checkbox" ><label for="49b77cf0-c2af-446c-a746-c7eea8a46a61" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
