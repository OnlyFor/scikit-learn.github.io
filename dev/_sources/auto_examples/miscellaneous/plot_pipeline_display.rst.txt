
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 {color: black;background-color: white;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 pre{padding: 0;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-toggleable {background-color: white;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-item {z-index: 1;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-parallel-item:only-child::after {width: 0;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-container {display: inline-block;position: relative;}#sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b0401e5a-58f4-4d5b-af95-4d5d2528b5a2" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da12fca2-8daf-45f6-8514-08edc4ccfcd2" type="checkbox" ><label class="sk-toggleable__label" for="da12fca2-8daf-45f6-8514-08edc4ccfcd2">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="364fb7f0-69f6-4a76-8875-2c20a96c53fc" type="checkbox" ><label class="sk-toggleable__label" for="364fb7f0-69f6-4a76-8875-2c20a96c53fc">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93db4523-e05a-4d21-bd3c-b56f4384aa18" type="checkbox" ><label class="sk-toggleable__label" for="93db4523-e05a-4d21-bd3c-b56f4384aa18">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 {color: black;background-color: white;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 pre{padding: 0;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-toggleable {background-color: white;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-item {z-index: 1;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-parallel-item:only-child::after {width: 0;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-container {display: inline-block;position: relative;}#sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6c464b4a-c68c-4c78-8fd7-a38fda75b8d1" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1fb9c43-03e1-496e-973d-39df6e03a811" type="checkbox" ><label class="sk-toggleable__label" for="a1fb9c43-03e1-496e-973d-39df6e03a811">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5aaef72-005e-4a7a-a1df-29e69e2d8070" type="checkbox" ><label class="sk-toggleable__label" for="a5aaef72-005e-4a7a-a1df-29e69e2d8070">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02ae36b1-75bc-46de-b354-05126f98aeb3" type="checkbox" ><label class="sk-toggleable__label" for="02ae36b1-75bc-46de-b354-05126f98aeb3">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1b66a66-9e1c-4371-9fcf-3f0e3b7610be" type="checkbox" ><label class="sk-toggleable__label" for="a1b66a66-9e1c-4371-9fcf-3f0e3b7610be">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d {color: black;background-color: white;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d pre{padding: 0;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-toggleable {background-color: white;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-estimator:hover {background-color: #d4ebff;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-item {z-index: 1;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-parallel-item:only-child::after {width: 0;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-container {display: inline-block;position: relative;}#sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d div.sk-text-repr-fallback {display: none;}</style><div id="sk-cbbcb9e0-3b6b-476c-bc4d-261d36c0405d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="613f8ce5-bf36-45b9-a36a-ba95d04642bc" type="checkbox" ><label class="sk-toggleable__label" for="613f8ce5-bf36-45b9-a36a-ba95d04642bc">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6b4300a-5492-4bdf-a799-ad5a64116d4a" type="checkbox" ><label class="sk-toggleable__label" for="c6b4300a-5492-4bdf-a799-ad5a64116d4a">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="030b87eb-95eb-443d-b9b0-1246026e4df7" type="checkbox" ><label class="sk-toggleable__label" for="030b87eb-95eb-443d-b9b0-1246026e4df7">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 {color: black;background-color: white;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 pre{padding: 0;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-toggleable {background-color: white;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-estimator:hover {background-color: #d4ebff;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-item {z-index: 1;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-parallel-item:only-child::after {width: 0;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-container {display: inline-block;position: relative;}#sk-189b6dc7-df58-4df5-9015-f28e9e06ba62 div.sk-text-repr-fallback {display: none;}</style><div id="sk-189b6dc7-df58-4df5-9015-f28e9e06ba62" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5ca696a-910c-4922-a3f3-8774864dc943" type="checkbox" ><label class="sk-toggleable__label" for="b5ca696a-910c-4922-a3f3-8774864dc943">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47d3f103-6d8f-4ec5-92ab-2627b9a7e4a7" type="checkbox" ><label class="sk-toggleable__label" for="47d3f103-6d8f-4ec5-92ab-2627b9a7e4a7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d24febf-3999-41a3-b155-fc14cb84b0be" type="checkbox" ><label class="sk-toggleable__label" for="8d24febf-3999-41a3-b155-fc14cb84b0be">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7faea434-d394-4c8e-b20e-09e8c34eef33" type="checkbox" ><label class="sk-toggleable__label" for="7faea434-d394-4c8e-b20e-09e8c34eef33">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d0e2a05-7261-4375-a52f-6dbd3ecbf647" type="checkbox" ><label class="sk-toggleable__label" for="4d0e2a05-7261-4375-a52f-6dbd3ecbf647">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb8d7b29-3870-4b89-babd-69398b704f3f" type="checkbox" ><label class="sk-toggleable__label" for="eb8d7b29-3870-4b89-babd-69398b704f3f">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52df005d-ba50-49f4-8d51-0e74dcd9751f" type="checkbox" ><label class="sk-toggleable__label" for="52df005d-ba50-49f4-8d51-0e74dcd9751f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c056231a-b334-46e4-a062-464ba0071bf6" type="checkbox" ><label class="sk-toggleable__label" for="c056231a-b334-46e4-a062-464ba0071bf6">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08b62f30-579b-4ab8-b1c3-b6fb84aeb973" type="checkbox" ><label class="sk-toggleable__label" for="08b62f30-579b-4ab8-b1c3-b6fb84aeb973">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d {color: black;background-color: white;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d pre{padding: 0;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-toggleable {background-color: white;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-estimator:hover {background-color: #d4ebff;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-item {z-index: 1;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-parallel-item:only-child::after {width: 0;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-container {display: inline-block;position: relative;}#sk-b5f53967-9ea4-42d2-a614-0f0589bee25d div.sk-text-repr-fallback {display: none;}</style><div id="sk-b5f53967-9ea4-42d2-a614-0f0589bee25d" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bac2ab6b-9066-46ab-af76-ee42fc8ba150" type="checkbox" ><label class="sk-toggleable__label" for="bac2ab6b-9066-46ab-af76-ee42fc8ba150">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c335f380-6a11-4d4f-9ddb-1cd8831544c6" type="checkbox" ><label class="sk-toggleable__label" for="c335f380-6a11-4d4f-9ddb-1cd8831544c6">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61ba5ddb-46af-4d42-9866-b114e451bcbf" type="checkbox" ><label class="sk-toggleable__label" for="61ba5ddb-46af-4d42-9866-b114e451bcbf">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ec70a6f-0ccd-4346-bb84-4e19f693bef9" type="checkbox" ><label class="sk-toggleable__label" for="5ec70a6f-0ccd-4346-bb84-4e19f693bef9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c115067-b628-4dae-aa8b-721a7079aa20" type="checkbox" ><label class="sk-toggleable__label" for="6c115067-b628-4dae-aa8b-721a7079aa20">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d52f972-8e81-44ff-b01c-a43dd19d6243" type="checkbox" ><label class="sk-toggleable__label" for="1d52f972-8e81-44ff-b01c-a43dd19d6243">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd3414ef-35ad-49fd-b279-0f440fd4673e" type="checkbox" ><label class="sk-toggleable__label" for="cd3414ef-35ad-49fd-b279-0f440fd4673e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af3cae9e-684b-4d8b-a879-c9476d63fd26" type="checkbox" ><label class="sk-toggleable__label" for="af3cae9e-684b-4d8b-a879-c9476d63fd26">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9569204c-419a-4a1d-9375-e7ecd317239e" type="checkbox" ><label class="sk-toggleable__label" for="9569204c-419a-4a1d-9375-e7ecd317239e">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.082 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
