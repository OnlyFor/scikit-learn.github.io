
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 {color: black;background-color: white;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 pre{padding: 0;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-toggleable {background-color: white;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-item {z-index: 1;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-parallel-item:only-child::after {width: 0;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0b3f5ee2-a463-4351-9316-4dee773e5929 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0b3f5ee2-a463-4351-9316-4dee773e5929" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f47072c0-10ec-479d-a7a7-054626f54e21" type="checkbox" ><label for="f47072c0-10ec-479d-a7a7-054626f54e21" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f1f1b95-fba5-4edb-840c-b237d1e8fd6e" type="checkbox" ><label for="1f1f1b95-fba5-4edb-840c-b237d1e8fd6e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0641ecea-cc0a-4e48-9370-6d4d9a5fb691" type="checkbox" ><label for="0641ecea-cc0a-4e48-9370-6d4d9a5fb691" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 {color: black;background-color: white;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 pre{padding: 0;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-toggleable {background-color: white;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-item {z-index: 1;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-parallel-item:only-child::after {width: 0;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3d4d5d21-c399-4a37-bf55-9351ebc01fc1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b912486a-616c-444b-a961-5aa8055f861f" type="checkbox" ><label for="b912486a-616c-444b-a961-5aa8055f861f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6234e01b-c315-45aa-a710-bdd2fdeb1f29" type="checkbox" ><label for="6234e01b-c315-45aa-a710-bdd2fdeb1f29" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="677c01c0-d7bb-4222-acd9-cb098fd96112" type="checkbox" ><label for="677c01c0-d7bb-4222-acd9-cb098fd96112" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a59d9755-0fc5-4a41-90ec-769854eb265c" type="checkbox" ><label for="a59d9755-0fc5-4a41-90ec-769854eb265c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7cb8f62d-b8ba-4942-8308-4969a568141f {color: black;background-color: white;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f pre{padding: 0;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-toggleable {background-color: white;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-estimator:hover {background-color: #d4ebff;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-item {z-index: 1;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-parallel-item:only-child::after {width: 0;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7cb8f62d-b8ba-4942-8308-4969a568141f div.sk-text-repr-fallback {display: none;}</style><div id="sk-7cb8f62d-b8ba-4942-8308-4969a568141f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd88dd4c-515c-4a88-8c15-4e3e5656d60e" type="checkbox" ><label for="bd88dd4c-515c-4a88-8c15-4e3e5656d60e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44e1b7c3-fd80-45f7-bbc2-d5ee3a33fc31" type="checkbox" ><label for="44e1b7c3-fd80-45f7-bbc2-d5ee3a33fc31" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f8f60c7-a675-4fc1-abc6-9053abf82815" type="checkbox" ><label for="8f8f60c7-a675-4fc1-abc6-9053abf82815" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 {color: black;background-color: white;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 pre{padding: 0;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-toggleable {background-color: white;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-item {z-index: 1;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-parallel-item:only-child::after {width: 0;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9a2c346a-dea6-4d32-95ed-f53102372df5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9a2c346a-dea6-4d32-95ed-f53102372df5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bee1f36-3fea-4be4-96fc-1dd1feb4abef" type="checkbox" ><label for="4bee1f36-3fea-4be4-96fc-1dd1feb4abef" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94a01fa1-31fe-406f-a3fd-f78c458f8c7a" type="checkbox" ><label for="94a01fa1-31fe-406f-a3fd-f78c458f8c7a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80de1670-ae30-4df9-9c23-789d5ccfa9f0" type="checkbox" ><label for="80de1670-ae30-4df9-9c23-789d5ccfa9f0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e8c4f39-3c22-4cac-a144-e96c5d54e30b" type="checkbox" ><label for="5e8c4f39-3c22-4cac-a144-e96c5d54e30b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="455aa274-60ab-4016-b51d-15e3bba00ca5" type="checkbox" ><label for="455aa274-60ab-4016-b51d-15e3bba00ca5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d7e26b0-034b-454a-ab59-a371450e0bb2" type="checkbox" ><label for="5d7e26b0-034b-454a-ab59-a371450e0bb2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6cbe6e4-f8f0-4bbe-9027-efe293134fa7" type="checkbox" ><label for="e6cbe6e4-f8f0-4bbe-9027-efe293134fa7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43bcd9ce-28f4-44a7-bc2b-e8f94386dc64" type="checkbox" ><label for="43bcd9ce-28f4-44a7-bc2b-e8f94386dc64" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b723ac49-f7fe-4177-9a5a-5d7a65c5f3ad" type="checkbox" ><label for="b723ac49-f7fe-4177-9a5a-5d7a65c5f3ad" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 {color: black;background-color: white;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 pre{padding: 0;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-toggleable {background-color: white;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-estimator:hover {background-color: #d4ebff;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-item {z-index: 1;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-parallel-item:only-child::after {width: 0;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39 div.sk-text-repr-fallback {display: none;}</style><div id="sk-181fad52-ab00-4ffe-92a0-0f4bdfa8db39" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d85d7dd8-bca7-45b9-ad9f-89ed45a16340" type="checkbox" ><label for="d85d7dd8-bca7-45b9-ad9f-89ed45a16340" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="446b8a5f-e16d-4dbb-b80e-8be147488bb5" type="checkbox" ><label for="446b8a5f-e16d-4dbb-b80e-8be147488bb5" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6eae50d-bd90-43c1-8c09-de816dba7102" type="checkbox" ><label for="e6eae50d-bd90-43c1-8c09-de816dba7102" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a486a14-84d1-4955-abc7-67435b8648a3" type="checkbox" ><label for="7a486a14-84d1-4955-abc7-67435b8648a3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b3055da-bea1-439f-9ada-403d4ad206ef" type="checkbox" ><label for="0b3055da-bea1-439f-9ada-403d4ad206ef" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8af574cc-af24-4d7c-98fc-ead8ef1852a9" type="checkbox" ><label for="8af574cc-af24-4d7c-98fc-ead8ef1852a9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b8cd0c7-91e6-4740-8114-28685d19fbf1" type="checkbox" ><label for="7b8cd0c7-91e6-4740-8114-28685d19fbf1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba05b3bf-cb42-497c-8f59-40b6ffd3e52d" type="checkbox" ><label for="ba05b3bf-cb42-497c-8f59-40b6ffd3e52d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f00f8d34-1812-41fe-b311-7a7b9f0a2c2e" type="checkbox" ><label for="f00f8d34-1812-41fe-b311-7a7b9f0a2c2e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
