
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 {color: black;background-color: white;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 pre{padding: 0;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-toggleable {background-color: white;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-item {z-index: 1;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-parallel-item:only-child::after {width: 0;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2d17cd86-aaca-4c5c-918b-99dd58853d17 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2d17cd86-aaca-4c5c-918b-99dd58853d17" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93da92ac-daf4-4dd7-a5ee-f34b83cf1ca7" type="checkbox" ><label for="93da92ac-daf4-4dd7-a5ee-f34b83cf1ca7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="427c2533-8cae-4ab4-a83c-77e81be30c00" type="checkbox" ><label for="427c2533-8cae-4ab4-a83c-77e81be30c00" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06299479-0b08-43fa-9c01-20c4a907d7c8" type="checkbox" ><label for="06299479-0b08-43fa-9c01-20c4a907d7c8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 {color: black;background-color: white;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 pre{padding: 0;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-toggleable {background-color: white;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-item {z-index: 1;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-parallel-item:only-child::after {width: 0;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d0f4366a-7eb7-4f2a-a9bb-a6a6a181a377" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f928d44-f330-4f43-9f11-a8ae8b378989" type="checkbox" ><label for="1f928d44-f330-4f43-9f11-a8ae8b378989" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="235996db-05b1-4e80-ab02-ed15f1d0dd1e" type="checkbox" ><label for="235996db-05b1-4e80-ab02-ed15f1d0dd1e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="942b2f14-eab3-4e10-9425-fb036a62daac" type="checkbox" ><label for="942b2f14-eab3-4e10-9425-fb036a62daac" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92e6e974-ecda-4de8-bee7-a0dc500596c1" type="checkbox" ><label for="92e6e974-ecda-4de8-bee7-a0dc500596c1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a {color: black;background-color: white;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a pre{padding: 0;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-toggleable {background-color: white;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-estimator:hover {background-color: #d4ebff;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-item {z-index: 1;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-parallel-item:only-child::after {width: 0;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a div.sk-text-repr-fallback {display: none;}</style><div id="sk-8efd4ea8-92f3-4cc4-abb2-f8c94b43940a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="965a8a58-d5c2-46b3-9485-18ecded3d700" type="checkbox" ><label for="965a8a58-d5c2-46b3-9485-18ecded3d700" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e630f6b8-a324-4719-9ec9-0206e1a9b71e" type="checkbox" ><label for="e630f6b8-a324-4719-9ec9-0206e1a9b71e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae2791a9-1e84-40b6-894b-596c0b68798c" type="checkbox" ><label for="ae2791a9-1e84-40b6-894b-596c0b68798c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 {color: black;background-color: white;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 pre{padding: 0;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-toggleable {background-color: white;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-item {z-index: 1;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-parallel-item:only-child::after {width: 0;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0c6830f3-544d-419e-b8c4-e6dce4064e91 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0c6830f3-544d-419e-b8c4-e6dce4064e91" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45ce7053-e13e-414f-8a58-83b871ab2e28" type="checkbox" ><label for="45ce7053-e13e-414f-8a58-83b871ab2e28" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9206da64-364c-44f4-b297-56017236a2e2" type="checkbox" ><label for="9206da64-364c-44f4-b297-56017236a2e2" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="daf71fc1-5198-4d28-b36f-ff3319601712" type="checkbox" ><label for="daf71fc1-5198-4d28-b36f-ff3319601712" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe8ce23c-19e9-4dde-a2b5-f4d2e12ad44e" type="checkbox" ><label for="fe8ce23c-19e9-4dde-a2b5-f4d2e12ad44e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6e55e52-506d-4329-8372-cec0ba95f0b8" type="checkbox" ><label for="e6e55e52-506d-4329-8372-cec0ba95f0b8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48be25fe-b25d-4089-917d-59fa0ec84139" type="checkbox" ><label for="48be25fe-b25d-4089-917d-59fa0ec84139" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdb0a7cb-7eb7-4ed2-a0d5-fcd713569bad" type="checkbox" ><label for="cdb0a7cb-7eb7-4ed2-a0d5-fcd713569bad" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d106a12-ad00-4a5d-a33d-792f7abeeb59" type="checkbox" ><label for="5d106a12-ad00-4a5d-a33d-792f7abeeb59" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cf094b4-6c81-4b9c-9953-a800fcda18b6" type="checkbox" ><label for="8cf094b4-6c81-4b9c-9953-a800fcda18b6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 {color: black;background-color: white;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 pre{padding: 0;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-toggleable {background-color: white;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-item {z-index: 1;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-parallel-item:only-child::after {width: 0;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b1e36d5a-e9ba-4f9a-8741-f90f3830e360" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a663614-5ee4-4830-aff2-85e36b2ed5d1" type="checkbox" ><label for="4a663614-5ee4-4830-aff2-85e36b2ed5d1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b64b39f4-a37c-453a-9fd9-56724a84dd7c" type="checkbox" ><label for="b64b39f4-a37c-453a-9fd9-56724a84dd7c" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c7d24af-a13b-4bcf-847b-6ab6e6471794" type="checkbox" ><label for="6c7d24af-a13b-4bcf-847b-6ab6e6471794" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="967a9df9-5fdf-41dc-98fe-ea1c5e8bfaa4" type="checkbox" ><label for="967a9df9-5fdf-41dc-98fe-ea1c5e8bfaa4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3a4f2b4-eb0f-4019-8d26-1b152c0ef260" type="checkbox" ><label for="b3a4f2b4-eb0f-4019-8d26-1b152c0ef260" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66fa8b14-6241-4fe9-a4ae-fe77bb70fb27" type="checkbox" ><label for="66fa8b14-6241-4fe9-a4ae-fe77bb70fb27" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a2d57ea-2037-4718-8cce-5d40c9e2ee39" type="checkbox" ><label for="1a2d57ea-2037-4718-8cce-5d40c9e2ee39" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="266caec2-ca0d-484d-b965-800c68470580" type="checkbox" ><label for="266caec2-ca0d-484d-b965-800c68470580" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c5c5bdd-2a78-4038-9655-7bdb16d6b03a" type="checkbox" ><label for="1c5c5bdd-2a78-4038-9655-7bdb16d6b03a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
