
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 {color: black;background-color: white;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 pre{padding: 0;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-toggleable {background-color: white;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-item {z-index: 1;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-parallel-item:only-child::after {width: 0;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bf459592-ba8f-46f7-9b8d-0eaccf41c847" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ff18fbd-bcdf-4222-b0cf-25e686e976a1" type="checkbox" ><label for="5ff18fbd-bcdf-4222-b0cf-25e686e976a1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80f00c5a-4cb6-4863-8241-f88597ae5411" type="checkbox" ><label for="80f00c5a-4cb6-4863-8241-f88597ae5411" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e2ee3e0-47ea-4299-9010-cdc664184069" type="checkbox" ><label for="3e2ee3e0-47ea-4299-9010-cdc664184069" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf {color: black;background-color: white;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf pre{padding: 0;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-toggleable {background-color: white;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-estimator:hover {background-color: #d4ebff;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-item {z-index: 1;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-parallel-item:only-child::after {width: 0;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf div.sk-text-repr-fallback {display: none;}</style><div id="sk-b4a7c3c6-bfcb-4093-93be-f1b9e4cf97cf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1357c69b-914c-44a7-aa7a-8e7b7e98e30c" type="checkbox" ><label for="1357c69b-914c-44a7-aa7a-8e7b7e98e30c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d523e988-ab84-4ce3-ae67-eb77f525298c" type="checkbox" ><label for="d523e988-ab84-4ce3-ae67-eb77f525298c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea7b2eaf-52d3-46c0-9838-abe89084ba6f" type="checkbox" ><label for="ea7b2eaf-52d3-46c0-9838-abe89084ba6f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f3f721c-1980-4152-8fcf-6401b320f646" type="checkbox" ><label for="8f3f721c-1980-4152-8fcf-6401b320f646" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b {color: black;background-color: white;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b pre{padding: 0;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-toggleable {background-color: white;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-estimator:hover {background-color: #d4ebff;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-item {z-index: 1;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-parallel-item:only-child::after {width: 0;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a4ff48d9-950a-4155-a47a-6406d4e1568b div.sk-text-repr-fallback {display: none;}</style><div id="sk-a4ff48d9-950a-4155-a47a-6406d4e1568b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e00ada9c-0dda-491a-affb-6b2c34172103" type="checkbox" ><label for="e00ada9c-0dda-491a-affb-6b2c34172103" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63b06ace-8d39-4407-92c2-443f4005debb" type="checkbox" ><label for="63b06ace-8d39-4407-92c2-443f4005debb" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="126f0fcc-e2e7-43c2-8c73-773100c04791" type="checkbox" ><label for="126f0fcc-e2e7-43c2-8c73-773100c04791" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 {color: black;background-color: white;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 pre{padding: 0;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-toggleable {background-color: white;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-item {z-index: 1;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-parallel-item:only-child::after {width: 0;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e6a48a62-8a88-4a0e-b713-90497bb3a222 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e6a48a62-8a88-4a0e-b713-90497bb3a222" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5f89950-c364-43e0-93db-1285e5ea993c" type="checkbox" ><label for="b5f89950-c364-43e0-93db-1285e5ea993c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9159f1d6-9cf1-44e7-9c96-1d57ad5be297" type="checkbox" ><label for="9159f1d6-9cf1-44e7-9c96-1d57ad5be297" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f513c6a-eb91-45fa-9bab-b8d76046c4de" type="checkbox" ><label for="2f513c6a-eb91-45fa-9bab-b8d76046c4de" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5da7592c-03c7-42d8-9875-39d87a3e0732" type="checkbox" ><label for="5da7592c-03c7-42d8-9875-39d87a3e0732" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4acf46e5-1a03-403a-b864-dc0db304630d" type="checkbox" ><label for="4acf46e5-1a03-403a-b864-dc0db304630d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="501d3cfc-73bd-4f8f-9e9e-c64ebb3127bd" type="checkbox" ><label for="501d3cfc-73bd-4f8f-9e9e-c64ebb3127bd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f79af444-7ba9-430d-a23f-1a7821ab87ca" type="checkbox" ><label for="f79af444-7ba9-430d-a23f-1a7821ab87ca" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c0aabc4-2fc6-4128-a7e9-118390702ad3" type="checkbox" ><label for="7c0aabc4-2fc6-4128-a7e9-118390702ad3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d302fcd-23c9-4a87-ab8e-bbac459a43b4" type="checkbox" ><label for="0d302fcd-23c9-4a87-ab8e-bbac459a43b4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 {color: black;background-color: white;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 pre{padding: 0;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-toggleable {background-color: white;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-item {z-index: 1;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-parallel-item:only-child::after {width: 0;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1989f65b-4744-4ca4-853b-9aba7b2caf88 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1989f65b-4744-4ca4-853b-9aba7b2caf88" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69af2a6e-1a90-450f-adb1-6665580f0923" type="checkbox" ><label for="69af2a6e-1a90-450f-adb1-6665580f0923" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8cf0b25-9e97-4b6c-aaa3-d2772626e7b2" type="checkbox" ><label for="d8cf0b25-9e97-4b6c-aaa3-d2772626e7b2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2173e128-f459-498a-8ad7-f38b55d0ee21" type="checkbox" ><label for="2173e128-f459-498a-8ad7-f38b55d0ee21" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f007dbb0-5285-471f-8f3a-3b5c35025b5e" type="checkbox" ><label for="f007dbb0-5285-471f-8f3a-3b5c35025b5e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="574d5a8b-8703-4323-83cd-aa1913835483" type="checkbox" ><label for="574d5a8b-8703-4323-83cd-aa1913835483" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90bf6dc7-1dcb-4889-9561-a3d4aa8d04da" type="checkbox" ><label for="90bf6dc7-1dcb-4889-9561-a3d4aa8d04da" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5db9a193-1c17-4ab0-9179-71b3bb3149d0" type="checkbox" ><label for="5db9a193-1c17-4ab0-9179-71b3bb3149d0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a057891-97fc-4f7d-86a2-cc8f616fdfd5" type="checkbox" ><label for="6a057891-97fc-4f7d-86a2-cc8f616fdfd5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e87df70d-ebf7-47a7-b0de-e3f04958118b" type="checkbox" ><label for="e87df70d-ebf7-47a7-b0de-e3f04958118b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
