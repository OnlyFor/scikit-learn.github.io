
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c {color: black;background-color: white;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c pre{padding: 0;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-toggleable {background-color: white;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-estimator:hover {background-color: #d4ebff;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-item {z-index: 1;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-parallel-item:only-child::after {width: 0;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-container {display: inline-block;position: relative;}#sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c div.sk-text-repr-fallback {display: none;}</style><div id="sk-f3fa1689-2b73-4937-89c9-3cba9be4ad6c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41f97160-fbe4-4865-990c-9c14c503117a" type="checkbox" ><label class="sk-toggleable__label" for="41f97160-fbe4-4865-990c-9c14c503117a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="206a692e-4002-4ba4-8c09-32e34d9c77b3" type="checkbox" ><label class="sk-toggleable__label" for="206a692e-4002-4ba4-8c09-32e34d9c77b3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd01ba0e-d915-40ad-a2c6-9655b7703ae1" type="checkbox" ><label class="sk-toggleable__label" for="fd01ba0e-d915-40ad-a2c6-9655b7703ae1">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc {color: black;background-color: white;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc pre{padding: 0;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-toggleable {background-color: white;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-estimator:hover {background-color: #d4ebff;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-item {z-index: 1;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-parallel-item:only-child::after {width: 0;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-container {display: inline-block;position: relative;}#sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc div.sk-text-repr-fallback {display: none;}</style><div id="sk-09e6fd3a-d6ad-4f67-924e-67f9ec817abc" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86bdd176-2120-43d5-97b8-1ffeadf968c6" type="checkbox" ><label class="sk-toggleable__label" for="86bdd176-2120-43d5-97b8-1ffeadf968c6">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38058206-3c1c-475d-a098-fbd4211afdc9" type="checkbox" ><label class="sk-toggleable__label" for="38058206-3c1c-475d-a098-fbd4211afdc9">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ede6ab5-abc3-4530-b0a8-d34a83145a8d" type="checkbox" ><label class="sk-toggleable__label" for="7ede6ab5-abc3-4530-b0a8-d34a83145a8d">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5168fec7-3db6-4878-8d0e-269c906085cf" type="checkbox" ><label class="sk-toggleable__label" for="5168fec7-3db6-4878-8d0e-269c906085cf">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 {color: black;background-color: white;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 pre{padding: 0;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-toggleable {background-color: white;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-estimator:hover {background-color: #d4ebff;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-item {z-index: 1;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-parallel-item:only-child::after {width: 0;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-container {display: inline-block;position: relative;}#sk-68f9d394-43c1-4641-bbe0-14d1b3836c76 div.sk-text-repr-fallback {display: none;}</style><div id="sk-68f9d394-43c1-4641-bbe0-14d1b3836c76" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="065e5cfa-62bf-4959-b7dc-83d5dcd921e1" type="checkbox" ><label class="sk-toggleable__label" for="065e5cfa-62bf-4959-b7dc-83d5dcd921e1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ae5c9ba-ca8e-41f7-89a3-54f3090f76ba" type="checkbox" ><label class="sk-toggleable__label" for="2ae5c9ba-ca8e-41f7-89a3-54f3090f76ba">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40ac4758-043c-4f39-8eab-89133b78d3a8" type="checkbox" ><label class="sk-toggleable__label" for="40ac4758-043c-4f39-8eab-89133b78d3a8">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce {color: black;background-color: white;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce pre{padding: 0;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-toggleable {background-color: white;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-item {z-index: 1;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-parallel-item:only-child::after {width: 0;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-container {display: inline-block;position: relative;}#sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab5a6aed-50b6-45e3-a8ce-60f3dbc715ce" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="932e0c69-c4f4-4e70-bf89-43d7b3831458" type="checkbox" ><label class="sk-toggleable__label" for="932e0c69-c4f4-4e70-bf89-43d7b3831458">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c356e100-626c-4cb8-a9e8-715a6d956ee7" type="checkbox" ><label class="sk-toggleable__label" for="c356e100-626c-4cb8-a9e8-715a6d956ee7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea16e007-567e-4f9b-918b-3661508bb3dd" type="checkbox" ><label class="sk-toggleable__label" for="ea16e007-567e-4f9b-918b-3661508bb3dd">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1345d6e-29f8-40bd-952f-ff602f02dd97" type="checkbox" ><label class="sk-toggleable__label" for="d1345d6e-29f8-40bd-952f-ff602f02dd97">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d6446fa-8908-4379-b9ff-20544922239d" type="checkbox" ><label class="sk-toggleable__label" for="8d6446fa-8908-4379-b9ff-20544922239d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7d3a52b-94e9-42a8-add2-3430a54b5da6" type="checkbox" ><label class="sk-toggleable__label" for="b7d3a52b-94e9-42a8-add2-3430a54b5da6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7432a38-8ec1-430b-aa00-f2a75ef50929" type="checkbox" ><label class="sk-toggleable__label" for="f7432a38-8ec1-430b-aa00-f2a75ef50929">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f123ac26-51ad-4825-82a9-caeda9d9515b" type="checkbox" ><label class="sk-toggleable__label" for="f123ac26-51ad-4825-82a9-caeda9d9515b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3dafc1f-4682-4727-aeff-fb060f460dfb" type="checkbox" ><label class="sk-toggleable__label" for="a3dafc1f-4682-4727-aeff-fb060f460dfb">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 {color: black;background-color: white;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 pre{padding: 0;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-toggleable {background-color: white;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-item {z-index: 1;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-parallel-item:only-child::after {width: 0;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-container {display: inline-block;position: relative;}#sk-bdcaec15-b158-4afc-9f3b-19e253237c96 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bdcaec15-b158-4afc-9f3b-19e253237c96" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63f7fed4-13a8-468b-aa92-e1a4b06b759f" type="checkbox" ><label class="sk-toggleable__label" for="63f7fed4-13a8-468b-aa92-e1a4b06b759f">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d324f256-1c3e-4758-a488-36eea24869bc" type="checkbox" ><label class="sk-toggleable__label" for="d324f256-1c3e-4758-a488-36eea24869bc">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59982d8c-aa77-4a62-995a-5c2a46bca408" type="checkbox" ><label class="sk-toggleable__label" for="59982d8c-aa77-4a62-995a-5c2a46bca408">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e60959a-1bcc-46b8-9b47-df995993befd" type="checkbox" ><label class="sk-toggleable__label" for="2e60959a-1bcc-46b8-9b47-df995993befd">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9964eaef-1496-44ad-9d64-a09831962b8b" type="checkbox" ><label class="sk-toggleable__label" for="9964eaef-1496-44ad-9d64-a09831962b8b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="661f5252-d07e-4283-9ffa-74d803f8c316" type="checkbox" ><label class="sk-toggleable__label" for="661f5252-d07e-4283-9ffa-74d803f8c316">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a33c783e-37f2-47da-b661-e6d082902541" type="checkbox" ><label class="sk-toggleable__label" for="a33c783e-37f2-47da-b661-e6d082902541">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ebc822d-0b8d-4ec2-ac04-ba88a36b27b3" type="checkbox" ><label class="sk-toggleable__label" for="5ebc822d-0b8d-4ec2-ac04-ba88a36b27b3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="681e65c8-4e2c-4a58-ae60-353905d4ffed" type="checkbox" ><label class="sk-toggleable__label" for="681e65c8-4e2c-4a58-ae60-353905d4ffed">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.096 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
