
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-db309ccd-eabc-4698-8f3a-efd614e54805 {color: black;background-color: white;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 pre{padding: 0;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-toggleable {background-color: white;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-estimator:hover {background-color: #d4ebff;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-item {z-index: 1;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-parallel-item:only-child::after {width: 0;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-db309ccd-eabc-4698-8f3a-efd614e54805 div.sk-text-repr-fallback {display: none;}</style><div id="sk-db309ccd-eabc-4698-8f3a-efd614e54805" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9e26cc6-75ec-4c52-8031-d71c570ed1c8" type="checkbox" ><label for="e9e26cc6-75ec-4c52-8031-d71c570ed1c8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9c6c23c-b978-46f9-a6c3-5b42dfe208e3" type="checkbox" ><label for="c9c6c23c-b978-46f9-a6c3-5b42dfe208e3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e3660b0-c785-471e-8f1e-320273216fda" type="checkbox" ><label for="2e3660b0-c785-471e-8f1e-320273216fda" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-eb832430-89cd-4652-9f25-e2effd8151dc {color: black;background-color: white;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc pre{padding: 0;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-toggleable {background-color: white;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-estimator:hover {background-color: #d4ebff;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-item {z-index: 1;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-parallel-item:only-child::after {width: 0;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-eb832430-89cd-4652-9f25-e2effd8151dc div.sk-text-repr-fallback {display: none;}</style><div id="sk-eb832430-89cd-4652-9f25-e2effd8151dc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d3dad0d-5464-42f7-b72b-a3be880cc6ab" type="checkbox" ><label for="8d3dad0d-5464-42f7-b72b-a3be880cc6ab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc3dc054-9d07-46e4-a55c-82bd224b1fa1" type="checkbox" ><label for="bc3dc054-9d07-46e4-a55c-82bd224b1fa1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9f74495-cb4b-4d45-965e-6e33346cc6b0" type="checkbox" ><label for="a9f74495-cb4b-4d45-965e-6e33346cc6b0" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8055a54-17dc-47fd-9dbc-16ed6cd9c300" type="checkbox" ><label for="b8055a54-17dc-47fd-9dbc-16ed6cd9c300" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 {color: black;background-color: white;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 pre{padding: 0;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-toggleable {background-color: white;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-item {z-index: 1;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-parallel-item:only-child::after {width: 0;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0d407ea-8b66-4591-b5a0-3c269cc70586 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0d407ea-8b66-4591-b5a0-3c269cc70586" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4610b1ca-538e-4b25-b44e-f0716366bde6" type="checkbox" ><label for="4610b1ca-538e-4b25-b44e-f0716366bde6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cb4b8b6-8ee4-4aef-a6fb-ea8de98af9d8" type="checkbox" ><label for="7cb4b8b6-8ee4-4aef-a6fb-ea8de98af9d8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2410f523-900b-436b-8297-747835d36016" type="checkbox" ><label for="2410f523-900b-436b-8297-747835d36016" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e720fc55-1e44-49b1-8333-3c54175a3663 {color: black;background-color: white;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 pre{padding: 0;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-toggleable {background-color: white;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-item {z-index: 1;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-parallel-item:only-child::after {width: 0;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e720fc55-1e44-49b1-8333-3c54175a3663 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e720fc55-1e44-49b1-8333-3c54175a3663" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4895830-8891-4ff7-9693-1c68bc8a4253" type="checkbox" ><label for="c4895830-8891-4ff7-9693-1c68bc8a4253" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="968352b7-e1ba-4535-b48f-b2a1c5c91895" type="checkbox" ><label for="968352b7-e1ba-4535-b48f-b2a1c5c91895" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="987f12a9-f01a-4bcd-9a80-e90d37db0951" type="checkbox" ><label for="987f12a9-f01a-4bcd-9a80-e90d37db0951" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dba6cec7-6206-4eb7-b353-3cea685935f2" type="checkbox" ><label for="dba6cec7-6206-4eb7-b353-3cea685935f2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44921866-66b9-4c3c-b4b5-0a8d415847da" type="checkbox" ><label for="44921866-66b9-4c3c-b4b5-0a8d415847da" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b2a1cb9-e0c6-4cd2-98a6-72e40d520db1" type="checkbox" ><label for="7b2a1cb9-e0c6-4cd2-98a6-72e40d520db1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="973d2eb5-8488-4928-a935-11a2b7729a64" type="checkbox" ><label for="973d2eb5-8488-4928-a935-11a2b7729a64" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62dc2f80-c726-4e7e-a79d-4c8f24b25302" type="checkbox" ><label for="62dc2f80-c726-4e7e-a79d-4c8f24b25302" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a69b77da-9d7d-44c8-9f89-c1b7301212e3" type="checkbox" ><label for="a69b77da-9d7d-44c8-9f89-c1b7301212e3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 {color: black;background-color: white;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 pre{padding: 0;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-toggleable {background-color: white;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-estimator:hover {background-color: #d4ebff;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-item {z-index: 1;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-parallel-item:only-child::after {width: 0;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-db4dd4fb-310b-4d32-be38-ad3334e6d909 div.sk-text-repr-fallback {display: none;}</style><div id="sk-db4dd4fb-310b-4d32-be38-ad3334e6d909" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3a2ff7c-d353-4d5d-ba9e-7f09f13ae0ec" type="checkbox" ><label for="c3a2ff7c-d353-4d5d-ba9e-7f09f13ae0ec" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c2ae2eb-0978-4159-8445-a529bbd8d5ce" type="checkbox" ><label for="8c2ae2eb-0978-4159-8445-a529bbd8d5ce" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0051712-6f43-439d-a003-d1cdf7102690" type="checkbox" ><label for="c0051712-6f43-439d-a003-d1cdf7102690" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0645323-26f1-4c58-825e-e6defaf235ec" type="checkbox" ><label for="a0645323-26f1-4c58-825e-e6defaf235ec" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0fc30f6-bf7b-4ced-a720-2c9e8a2873d7" type="checkbox" ><label for="d0fc30f6-bf7b-4ced-a720-2c9e8a2873d7" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb8f2fb5-f29f-44af-9b65-df31f782cd4b" type="checkbox" ><label for="eb8f2fb5-f29f-44af-9b65-df31f782cd4b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77d10490-c15d-49fd-9dd3-d5e72e38baf0" type="checkbox" ><label for="77d10490-c15d-49fd-9dd3-d5e72e38baf0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a8d5aa8-ef74-4680-a240-e83c4a725382" type="checkbox" ><label for="0a8d5aa8-ef74-4680-a240-e83c4a725382" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32a32ec2-9fcf-47de-9533-b050d3945a9f" type="checkbox" ><label for="32a32ec2-9fcf-47de-9533-b050d3945a9f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
