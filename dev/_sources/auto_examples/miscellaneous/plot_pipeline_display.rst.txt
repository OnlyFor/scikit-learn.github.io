
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf {color: black;background-color: white;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf pre{padding: 0;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-toggleable {background-color: white;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-estimator:hover {background-color: #d4ebff;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-item {z-index: 1;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-parallel-item:only-child::after {width: 0;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf div.sk-text-repr-fallback {display: none;}</style><div id="sk-0c8f546f-f0b2-491c-94dd-490c657aaaaf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0b19bc5-9c68-48ee-a5cb-e8179d479f43" type="checkbox" ><label for="c0b19bc5-9c68-48ee-a5cb-e8179d479f43" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ca0527c-a7f1-4297-ae22-4d1e962db965" type="checkbox" ><label for="8ca0527c-a7f1-4297-ae22-4d1e962db965" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee3217a5-608b-4e21-aa9c-dfc49af75655" type="checkbox" ><label for="ee3217a5-608b-4e21-aa9c-dfc49af75655" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd {color: black;background-color: white;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd pre{padding: 0;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-toggleable {background-color: white;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-item {z-index: 1;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-parallel-item:only-child::after {width: 0;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5600fe09-192b-43a8-a466-82e13fd5e6fd div.sk-text-repr-fallback {display: none;}</style><div id="sk-5600fe09-192b-43a8-a466-82e13fd5e6fd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c98a753b-4188-4267-92ee-c43625df56ba" type="checkbox" ><label for="c98a753b-4188-4267-92ee-c43625df56ba" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e299b227-5104-4b23-ad5c-e672143b29e7" type="checkbox" ><label for="e299b227-5104-4b23-ad5c-e672143b29e7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="057b7030-3a7a-4479-a824-8a7a33debe1e" type="checkbox" ><label for="057b7030-3a7a-4479-a824-8a7a33debe1e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5604a4c6-8813-480d-b83b-e6623b9619aa" type="checkbox" ><label for="5604a4c6-8813-480d-b83b-e6623b9619aa" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 {color: black;background-color: white;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 pre{padding: 0;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-toggleable {background-color: white;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-item {z-index: 1;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-parallel-item:only-child::after {width: 0;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-aa48849d-470a-4552-b3e6-d166e45b21e4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-aa48849d-470a-4552-b3e6-d166e45b21e4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="507dfc99-f4bb-426b-9634-8a2cdff19f31" type="checkbox" ><label for="507dfc99-f4bb-426b-9634-8a2cdff19f31" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1164a22a-44e3-41cb-9a5a-39c93deabfb8" type="checkbox" ><label for="1164a22a-44e3-41cb-9a5a-39c93deabfb8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0e3a606-9bc4-4d25-a8f5-ceda5788c1ba" type="checkbox" ><label for="e0e3a606-9bc4-4d25-a8f5-ceda5788c1ba" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7089f960-27c2-4201-9346-1aa5046859c5 {color: black;background-color: white;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 pre{padding: 0;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-toggleable {background-color: white;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-item {z-index: 1;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-parallel-item:only-child::after {width: 0;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7089f960-27c2-4201-9346-1aa5046859c5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7089f960-27c2-4201-9346-1aa5046859c5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07a3b73a-146a-4963-a93a-e4e43c06a55f" type="checkbox" ><label for="07a3b73a-146a-4963-a93a-e4e43c06a55f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32cff666-5940-4e67-a564-53b844bb89f1" type="checkbox" ><label for="32cff666-5940-4e67-a564-53b844bb89f1" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b62912ad-f6d1-4592-bfbe-f9ed5a3ce038" type="checkbox" ><label for="b62912ad-f6d1-4592-bfbe-f9ed5a3ce038" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df44762f-c4fe-4e53-ab44-262c8b494f19" type="checkbox" ><label for="df44762f-c4fe-4e53-ab44-262c8b494f19" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83e787c6-7262-4859-b3d7-d1b9b6c14b74" type="checkbox" ><label for="83e787c6-7262-4859-b3d7-d1b9b6c14b74" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13f7ae53-e392-4180-a2c5-cb831a7524ad" type="checkbox" ><label for="13f7ae53-e392-4180-a2c5-cb831a7524ad" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69cad48b-7aa2-47d6-b65a-0b52a95c65bd" type="checkbox" ><label for="69cad48b-7aa2-47d6-b65a-0b52a95c65bd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c8ad1b7-de27-430e-896a-9de7ad5aeb7a" type="checkbox" ><label for="6c8ad1b7-de27-430e-896a-9de7ad5aeb7a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9da707c6-40d3-4033-a57b-475d646674ce" type="checkbox" ><label for="9da707c6-40d3-4033-a57b-475d646674ce" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 {color: black;background-color: white;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 pre{padding: 0;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-toggleable {background-color: white;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-item {z-index: 1;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9202efde-f02a-4700-b7f0-f6b4fb7a50c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f61c415-e1a9-43ae-bedf-ac9394a8cedc" type="checkbox" ><label for="2f61c415-e1a9-43ae-bedf-ac9394a8cedc" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b2b085b-4b90-4563-be49-e7c69b716d09" type="checkbox" ><label for="5b2b085b-4b90-4563-be49-e7c69b716d09" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d33a39ec-5ced-4c5b-9132-d62a0d79d93a" type="checkbox" ><label for="d33a39ec-5ced-4c5b-9132-d62a0d79d93a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1748f6ee-8545-42d2-8740-a19b1a738db7" type="checkbox" ><label for="1748f6ee-8545-42d2-8740-a19b1a738db7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="015f27a2-4503-4286-9605-c03fadd3b797" type="checkbox" ><label for="015f27a2-4503-4286-9605-c03fadd3b797" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2cc99f5-d467-451a-86af-739a31785968" type="checkbox" ><label for="f2cc99f5-d467-451a-86af-739a31785968" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c570c113-1e70-4648-82e3-b16c62b67b9a" type="checkbox" ><label for="c570c113-1e70-4648-82e3-b16c62b67b9a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a838834-6e31-47cf-a68b-143bca8ac62d" type="checkbox" ><label for="1a838834-6e31-47cf-a68b-143bca8ac62d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0029d9ba-bc65-4040-9ab0-062421b65752" type="checkbox" ><label for="0029d9ba-bc65-4040-9ab0-062421b65752" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
