
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2a0e0113-5946-4c0e-b340-657900797e81 {color: black;background-color: white;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 pre{padding: 0;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-toggleable {background-color: white;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-item {z-index: 1;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-parallel-item:only-child::after {width: 0;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2a0e0113-5946-4c0e-b340-657900797e81 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2a0e0113-5946-4c0e-b340-657900797e81" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a04dc7a9-8884-4f55-831d-f6ed087ce5c6" type="checkbox" ><label for="a04dc7a9-8884-4f55-831d-f6ed087ce5c6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57cce30e-0514-45d9-8a6a-b91592fbd8f8" type="checkbox" ><label for="57cce30e-0514-45d9-8a6a-b91592fbd8f8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6bee5db0-2c57-40e1-8321-2e7bbfa62f89" type="checkbox" ><label for="6bee5db0-2c57-40e1-8321-2e7bbfa62f89" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b {color: black;background-color: white;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b pre{padding: 0;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-toggleable {background-color: white;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-estimator:hover {background-color: #d4ebff;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-item {z-index: 1;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-parallel-item:only-child::after {width: 0;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b div.sk-text-repr-fallback {display: none;}</style><div id="sk-9da4b0db-d58e-4620-bc32-c29585f0eb7b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e879746a-00d3-4d2c-9ccb-6d379c69806e" type="checkbox" ><label for="e879746a-00d3-4d2c-9ccb-6d379c69806e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e34e02c-c756-4b52-8ca6-77d7ddf1a15f" type="checkbox" ><label for="2e34e02c-c756-4b52-8ca6-77d7ddf1a15f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42497387-4d21-4bb4-bc07-a00b0014a335" type="checkbox" ><label for="42497387-4d21-4bb4-bc07-a00b0014a335" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8df40346-3510-454f-9bb2-2d348aab3fc3" type="checkbox" ><label for="8df40346-3510-454f-9bb2-2d348aab3fc3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 {color: black;background-color: white;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 pre{padding: 0;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-toggleable {background-color: white;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-item {z-index: 1;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-parallel-item:only-child::after {width: 0;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9e0c01be-11ec-4f0a-8536-0874aea55026 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9e0c01be-11ec-4f0a-8536-0874aea55026" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a99c099-6b1f-43d2-b14a-5b7f08a11e09" type="checkbox" ><label for="5a99c099-6b1f-43d2-b14a-5b7f08a11e09" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9edac36-29c6-458f-9ff4-ad5d58d7ab40" type="checkbox" ><label for="a9edac36-29c6-458f-9ff4-ad5d58d7ab40" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13b3cb91-5a9e-4ad6-b5c0-35eea5d19112" type="checkbox" ><label for="13b3cb91-5a9e-4ad6-b5c0-35eea5d19112" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 {color: black;background-color: white;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 pre{padding: 0;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-toggleable {background-color: white;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-item {z-index: 1;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-parallel-item:only-child::after {width: 0;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c60be86e-12f8-47ff-b81e-26bcf7ca07c3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="caaf519c-f1cd-47b7-8936-2e7666849316" type="checkbox" ><label for="caaf519c-f1cd-47b7-8936-2e7666849316" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="420f7c26-ebfc-4831-8036-47b6a58e6540" type="checkbox" ><label for="420f7c26-ebfc-4831-8036-47b6a58e6540" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7e2c181-2adb-42ad-aaad-1f40da581125" type="checkbox" ><label for="b7e2c181-2adb-42ad-aaad-1f40da581125" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ad5805b-3247-4ed7-89ec-fad36abba1ad" type="checkbox" ><label for="7ad5805b-3247-4ed7-89ec-fad36abba1ad" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e5525f9-fc17-4267-92ed-a36002b7f8ef" type="checkbox" ><label for="4e5525f9-fc17-4267-92ed-a36002b7f8ef" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da5f8152-51f6-463a-b34e-9e1d3bc103d7" type="checkbox" ><label for="da5f8152-51f6-463a-b34e-9e1d3bc103d7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c83465e-fe3b-4fdb-9930-948321453a14" type="checkbox" ><label for="3c83465e-fe3b-4fdb-9930-948321453a14" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0003d01-8bae-4d84-92bb-08c2fdf3326e" type="checkbox" ><label for="e0003d01-8bae-4d84-92bb-08c2fdf3326e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26b5e5aa-cb58-4aab-ad25-5cea3303eb88" type="checkbox" ><label for="26b5e5aa-cb58-4aab-ad25-5cea3303eb88" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c {color: black;background-color: white;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c pre{padding: 0;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-toggleable {background-color: white;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-estimator:hover {background-color: #d4ebff;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-item {z-index: 1;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-parallel-item:only-child::after {width: 0;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c div.sk-text-repr-fallback {display: none;}</style><div id="sk-48c91542-ac99-4ac6-be2d-dfde7f8c590c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82036978-0825-42a2-8567-9856c419630a" type="checkbox" ><label for="82036978-0825-42a2-8567-9856c419630a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54c41e43-0734-4f56-a58f-1e2fe9307836" type="checkbox" ><label for="54c41e43-0734-4f56-a58f-1e2fe9307836" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e02661e-3603-42dd-9b61-0b73d3e7b22a" type="checkbox" ><label for="9e02661e-3603-42dd-9b61-0b73d3e7b22a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8aac830c-9220-4b3c-ab90-3f8d1b77b113" type="checkbox" ><label for="8aac830c-9220-4b3c-ab90-3f8d1b77b113" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3c93a47-3f59-4afc-8068-402d74968994" type="checkbox" ><label for="b3c93a47-3f59-4afc-8068-402d74968994" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1b34b8b-c210-4501-830c-fe8dcf569142" type="checkbox" ><label for="c1b34b8b-c210-4501-830c-fe8dcf569142" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c21ea90c-24aa-43a9-94b9-0b6dd7129062" type="checkbox" ><label for="c21ea90c-24aa-43a9-94b9-0b6dd7129062" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41937c14-283d-4d27-b331-3c27fcd3e3b0" type="checkbox" ><label for="41937c14-283d-4d27-b331-3c27fcd3e3b0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfee700b-d49f-4b4e-b9aa-2bae7238d901" type="checkbox" ><label for="bfee700b-d49f-4b4e-b9aa-2bae7238d901" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
