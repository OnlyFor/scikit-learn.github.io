
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 {color: black;background-color: white;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 pre{padding: 0;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-toggleable {background-color: white;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-item {z-index: 1;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-parallel-item:only-child::after {width: 0;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a100d6a0-28e2-4b9d-ad27-24a86bcc9955" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3ddcafe-6ef6-49b8-accc-9a023406a16d" type="checkbox" ><label for="d3ddcafe-6ef6-49b8-accc-9a023406a16d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ae6d45c-7798-4934-9dbb-7b42d38861f6" type="checkbox" ><label for="2ae6d45c-7798-4934-9dbb-7b42d38861f6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1609d11e-e155-4fbd-872a-9447e9c7dc64" type="checkbox" ><label for="1609d11e-e155-4fbd-872a-9447e9c7dc64" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8af0518a-cd14-41bd-9281-b4d960f144af {color: black;background-color: white;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af pre{padding: 0;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-toggleable {background-color: white;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-estimator:hover {background-color: #d4ebff;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-item {z-index: 1;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-parallel-item:only-child::after {width: 0;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8af0518a-cd14-41bd-9281-b4d960f144af div.sk-text-repr-fallback {display: none;}</style><div id="sk-8af0518a-cd14-41bd-9281-b4d960f144af" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af856d75-5bc9-426b-bcb1-6ab080020a54" type="checkbox" ><label for="af856d75-5bc9-426b-bcb1-6ab080020a54" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcb6252c-086f-4c6b-98fd-7ea77f2c1107" type="checkbox" ><label for="dcb6252c-086f-4c6b-98fd-7ea77f2c1107" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28da7ac9-e308-43cb-94b1-f5f1d6a7bfd9" type="checkbox" ><label for="28da7ac9-e308-43cb-94b1-f5f1d6a7bfd9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6607715-4883-4a49-aefd-6faa3ef85da4" type="checkbox" ><label for="a6607715-4883-4a49-aefd-6faa3ef85da4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 {color: black;background-color: white;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 pre{padding: 0;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-toggleable {background-color: white;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-item {z-index: 1;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-parallel-item:only-child::after {width: 0;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c3a6094e-1a2d-4083-a8c3-3ade163dfad6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="128021e0-87db-4778-93de-0041feb85ad3" type="checkbox" ><label for="128021e0-87db-4778-93de-0041feb85ad3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f151d8a-7cc2-4fed-adc5-b5baf104e4d5" type="checkbox" ><label for="3f151d8a-7cc2-4fed-adc5-b5baf104e4d5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db45a8d5-ef56-478f-9ab2-437572e3a169" type="checkbox" ><label for="db45a8d5-ef56-478f-9ab2-437572e3a169" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 {color: black;background-color: white;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 pre{padding: 0;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-toggleable {background-color: white;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-estimator:hover {background-color: #d4ebff;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-item {z-index: 1;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-parallel-item:only-child::after {width: 0;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-63a99af0-1dc0-4041-8ac6-ba168062ac53 div.sk-text-repr-fallback {display: none;}</style><div id="sk-63a99af0-1dc0-4041-8ac6-ba168062ac53" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59616ce5-ac3f-487d-a085-76094630afaf" type="checkbox" ><label for="59616ce5-ac3f-487d-a085-76094630afaf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bfe0b19-6add-4fd9-a25a-d9ee4299f09d" type="checkbox" ><label for="3bfe0b19-6add-4fd9-a25a-d9ee4299f09d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6243661d-bd69-49f3-9da8-cfa82618eec5" type="checkbox" ><label for="6243661d-bd69-49f3-9da8-cfa82618eec5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20dddf9f-7feb-43b0-a565-4720fe3574ce" type="checkbox" ><label for="20dddf9f-7feb-43b0-a565-4720fe3574ce" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03c96102-9b56-4e79-b6fc-4da646fd801b" type="checkbox" ><label for="03c96102-9b56-4e79-b6fc-4da646fd801b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b2505fc-18bd-4bdc-8499-afdbf75b6160" type="checkbox" ><label for="6b2505fc-18bd-4bdc-8499-afdbf75b6160" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9193716-fa97-4bb2-8c8b-b0cb08299249" type="checkbox" ><label for="f9193716-fa97-4bb2-8c8b-b0cb08299249" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ec1900aa-5961-446d-8953-6b282b8b941d" type="checkbox" ><label for="ec1900aa-5961-446d-8953-6b282b8b941d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7c7e534-bf1f-4b23-b6d1-b0bff7b27e01" type="checkbox" ><label for="f7c7e534-bf1f-4b23-b6d1-b0bff7b27e01" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a {color: black;background-color: white;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a pre{padding: 0;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-toggleable {background-color: white;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-item {z-index: 1;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-parallel-item:only-child::after {width: 0;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab7e8b2d-941e-4dab-8a05-0d46727d2c6a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="788b8b99-4443-46c4-b867-f94e33748f59" type="checkbox" ><label for="788b8b99-4443-46c4-b867-f94e33748f59" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="030b515f-9384-4534-a963-fbb346285b30" type="checkbox" ><label for="030b515f-9384-4534-a963-fbb346285b30" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="601697e0-2b1a-48e0-875a-c4c71f1af88c" type="checkbox" ><label for="601697e0-2b1a-48e0-875a-c4c71f1af88c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42f295c5-60c0-4dc2-9dea-4f6f5b8895f9" type="checkbox" ><label for="42f295c5-60c0-4dc2-9dea-4f6f5b8895f9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8309ac0a-06c9-4fd1-85f4-fe1922e81099" type="checkbox" ><label for="8309ac0a-06c9-4fd1-85f4-fe1922e81099" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9362f39a-f672-4efe-a13e-12ed77da691b" type="checkbox" ><label for="9362f39a-f672-4efe-a13e-12ed77da691b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bfeb507-36b6-4531-988d-1782a42c97f0" type="checkbox" ><label for="5bfeb507-36b6-4531-988d-1782a42c97f0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33f6ee15-7522-44f3-8204-f6c0062b288e" type="checkbox" ><label for="33f6ee15-7522-44f3-8204-f6c0062b288e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="243db08d-9cf9-4a5f-a1e1-9147e5cf9ad8" type="checkbox" ><label for="243db08d-9cf9-4a5f-a1e1-9147e5cf9ad8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
