
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e17f7373-3108-4ee2-87eb-a046aa239822 {color: black;background-color: white;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 pre{padding: 0;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-toggleable {background-color: white;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-item {z-index: 1;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-parallel-item:only-child::after {width: 0;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e17f7373-3108-4ee2-87eb-a046aa239822 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e17f7373-3108-4ee2-87eb-a046aa239822" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ce096e5-b836-4bf7-a6ef-a315f44c5436" type="checkbox" ><label for="0ce096e5-b836-4bf7-a6ef-a315f44c5436" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9c1bfd5-5349-45f1-90d9-31b87e68654e" type="checkbox" ><label for="b9c1bfd5-5349-45f1-90d9-31b87e68654e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69f2289c-9d23-430b-a0db-8d062489b21b" type="checkbox" ><label for="69f2289c-9d23-430b-a0db-8d062489b21b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf {color: black;background-color: white;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf pre{padding: 0;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-toggleable {background-color: white;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-estimator:hover {background-color: #d4ebff;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-item {z-index: 1;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-parallel-item:only-child::after {width: 0;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-35ef8b82-51b3-4c93-83c0-733a91405eaf div.sk-text-repr-fallback {display: none;}</style><div id="sk-35ef8b82-51b3-4c93-83c0-733a91405eaf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8c2b468-c1f5-40df-9725-3a5145ed384d" type="checkbox" ><label for="e8c2b468-c1f5-40df-9725-3a5145ed384d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67e9e492-0342-4d04-895d-da0175d6965c" type="checkbox" ><label for="67e9e492-0342-4d04-895d-da0175d6965c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f6c96a7-4e07-4ce0-8808-a17138decd48" type="checkbox" ><label for="3f6c96a7-4e07-4ce0-8808-a17138decd48" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0602a88-4351-4399-a9df-ad8b11348007" type="checkbox" ><label for="b0602a88-4351-4399-a9df-ad8b11348007" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cf326172-4064-47e3-aab9-4baab5d4099b {color: black;background-color: white;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b pre{padding: 0;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-toggleable {background-color: white;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-estimator:hover {background-color: #d4ebff;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-item {z-index: 1;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-parallel-item:only-child::after {width: 0;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cf326172-4064-47e3-aab9-4baab5d4099b div.sk-text-repr-fallback {display: none;}</style><div id="sk-cf326172-4064-47e3-aab9-4baab5d4099b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac7e37d7-551f-46d8-94d6-49d6cd9b32bd" type="checkbox" ><label for="ac7e37d7-551f-46d8-94d6-49d6cd9b32bd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cb4b6f8-b2ce-45d2-9cdf-8a2b1d0c781c" type="checkbox" ><label for="4cb4b6f8-b2ce-45d2-9cdf-8a2b1d0c781c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0eb7681-7665-4b51-ae40-e36d74fed832" type="checkbox" ><label for="e0eb7681-7665-4b51-ae40-e36d74fed832" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e {color: black;background-color: white;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e pre{padding: 0;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-toggleable {background-color: white;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-estimator:hover {background-color: #d4ebff;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-item {z-index: 1;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-parallel-item:only-child::after {width: 0;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e div.sk-text-repr-fallback {display: none;}</style><div id="sk-5d4efd7a-dda1-4212-b4ac-2b1107e7542e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc29be75-3166-4101-9825-51e2bd94562e" type="checkbox" ><label for="dc29be75-3166-4101-9825-51e2bd94562e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7678652d-e015-4d04-bafb-6237f8907539" type="checkbox" ><label for="7678652d-e015-4d04-bafb-6237f8907539" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f782924-b0ab-4f06-8c6c-2782b9cc0678" type="checkbox" ><label for="9f782924-b0ab-4f06-8c6c-2782b9cc0678" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a70c6cf5-e69b-4514-921b-4480821b606f" type="checkbox" ><label for="a70c6cf5-e69b-4514-921b-4480821b606f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15144e50-8c3a-4369-99b7-cf3326cb8d8d" type="checkbox" ><label for="15144e50-8c3a-4369-99b7-cf3326cb8d8d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92c06d83-9702-4299-bbc8-0578f8df62d8" type="checkbox" ><label for="92c06d83-9702-4299-bbc8-0578f8df62d8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="466a83c3-3478-4fed-8fea-68b4d19a6c4a" type="checkbox" ><label for="466a83c3-3478-4fed-8fea-68b4d19a6c4a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fefc864-71b2-4ced-acd5-c43fccd4d1a7" type="checkbox" ><label for="3fefc864-71b2-4ced-acd5-c43fccd4d1a7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3ee5776-f4a3-4031-8093-6d1fbd674fe5" type="checkbox" ><label for="e3ee5776-f4a3-4031-8093-6d1fbd674fe5" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 {color: black;background-color: white;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 pre{padding: 0;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-toggleable {background-color: white;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-item {z-index: 1;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-parallel-item:only-child::after {width: 0;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b9710a9-af66-46c6-944b-39cfb6d4ce79" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b24dbe4b-dbb9-47a9-b228-edb7813a1812" type="checkbox" ><label for="b24dbe4b-dbb9-47a9-b228-edb7813a1812" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d14edb7-8257-4e8d-81b5-5f541c025b3b" type="checkbox" ><label for="9d14edb7-8257-4e8d-81b5-5f541c025b3b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89bbef3c-0ad4-46da-a225-5122bdf81ec9" type="checkbox" ><label for="89bbef3c-0ad4-46da-a225-5122bdf81ec9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6adc827-5553-4cab-a8a9-c38dc6176111" type="checkbox" ><label for="c6adc827-5553-4cab-a8a9-c38dc6176111" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c4f0298-5fbc-4b4e-8753-ab6292b04295" type="checkbox" ><label for="4c4f0298-5fbc-4b4e-8753-ab6292b04295" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20e81389-9b9b-4bc4-95a4-820f9b57dd4d" type="checkbox" ><label for="20e81389-9b9b-4bc4-95a4-820f9b57dd4d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f3a25bc-ff96-408c-9e84-4652b4125725" type="checkbox" ><label for="0f3a25bc-ff96-408c-9e84-4652b4125725" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84508f1f-11c5-4c74-8aa0-f1de9d93dc34" type="checkbox" ><label for="84508f1f-11c5-4c74-8aa0-f1de9d93dc34" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1a4268c-49c3-4220-8950-41a317279a17" type="checkbox" ><label for="d1a4268c-49c3-4220-8950-41a317279a17" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.138 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
