
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b {color: black;background-color: white;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b pre{padding: 0;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-toggleable {background-color: white;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-estimator:hover {background-color: #d4ebff;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-item {z-index: 1;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-parallel-item:only-child::after {width: 0;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b div.sk-text-repr-fallback {display: none;}</style><div id="sk-97dedce4-d156-407c-a1d1-1844f8e9ee6b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42c6f6e2-c73e-4ff0-9466-a20218c9c640" type="checkbox" ><label for="42c6f6e2-c73e-4ff0-9466-a20218c9c640" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16d58d4c-d8f6-4e3e-a52c-92d4962b8093" type="checkbox" ><label for="16d58d4c-d8f6-4e3e-a52c-92d4962b8093" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1672cf4f-a919-416a-9426-1170563b3c5c" type="checkbox" ><label for="1672cf4f-a919-416a-9426-1170563b3c5c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 {color: black;background-color: white;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 pre{padding: 0;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-toggleable {background-color: white;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-item {z-index: 1;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-parallel-item:only-child::after {width: 0;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3fa00b53-3601-48c2-aa73-843dc6f55177 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3fa00b53-3601-48c2-aa73-843dc6f55177" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72ee749d-a727-4821-b16d-87986960eaa7" type="checkbox" ><label for="72ee749d-a727-4821-b16d-87986960eaa7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5c2492c-6268-49d3-857f-23fff0ed2d43" type="checkbox" ><label for="e5c2492c-6268-49d3-857f-23fff0ed2d43" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fcf25ef-b60f-4738-98c8-93c7494d9e0f" type="checkbox" ><label for="3fcf25ef-b60f-4738-98c8-93c7494d9e0f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="883a82ad-4827-4e71-84b6-6511aa892d89" type="checkbox" ><label for="883a82ad-4827-4e71-84b6-6511aa892d89" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 {color: black;background-color: white;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 pre{padding: 0;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-toggleable {background-color: white;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-item {z-index: 1;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-parallel-item:only-child::after {width: 0;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7541c1cc-839e-4fa4-89c5-2f65853fcbc6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a9e3857-98ed-499d-8ad6-442ac5288ec6" type="checkbox" ><label for="9a9e3857-98ed-499d-8ad6-442ac5288ec6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09522f76-f895-4188-bbda-51fb4f655b5d" type="checkbox" ><label for="09522f76-f895-4188-bbda-51fb4f655b5d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d10d8677-2540-4ae0-87e4-083f5acf08b1" type="checkbox" ><label for="d10d8677-2540-4ae0-87e4-083f5acf08b1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d2613238-7f25-4a02-a5ad-bb800f37713c {color: black;background-color: white;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c pre{padding: 0;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-toggleable {background-color: white;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-estimator:hover {background-color: #d4ebff;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-item {z-index: 1;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-parallel-item:only-child::after {width: 0;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d2613238-7f25-4a02-a5ad-bb800f37713c div.sk-text-repr-fallback {display: none;}</style><div id="sk-d2613238-7f25-4a02-a5ad-bb800f37713c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cb4ebff-8010-4073-983d-64eb31a33e2a" type="checkbox" ><label for="5cb4ebff-8010-4073-983d-64eb31a33e2a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c470ae79-a074-4d2a-9eab-02d00b3d1021" type="checkbox" ><label for="c470ae79-a074-4d2a-9eab-02d00b3d1021" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87757fc7-ff9f-4336-915e-4cd3689cbb83" type="checkbox" ><label for="87757fc7-ff9f-4336-915e-4cd3689cbb83" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed0a6ac2-4df4-47a3-84bc-df233f6771c4" type="checkbox" ><label for="ed0a6ac2-4df4-47a3-84bc-df233f6771c4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca3eeff9-7e22-4824-9545-f52588146260" type="checkbox" ><label for="ca3eeff9-7e22-4824-9545-f52588146260" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42964143-4343-438c-9e0b-408a972cf378" type="checkbox" ><label for="42964143-4343-438c-9e0b-408a972cf378" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7ec6df1-0397-45d9-87b1-9553a1bfd535" type="checkbox" ><label for="b7ec6df1-0397-45d9-87b1-9553a1bfd535" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92793a61-12b8-4f90-aa2f-805207d725a8" type="checkbox" ><label for="92793a61-12b8-4f90-aa2f-805207d725a8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="762ed82f-3f24-4dc4-af10-a40ee561c6c3" type="checkbox" ><label for="762ed82f-3f24-4dc4-af10-a40ee561c6c3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c {color: black;background-color: white;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c pre{padding: 0;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-toggleable {background-color: white;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-estimator:hover {background-color: #d4ebff;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-item {z-index: 1;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-parallel-item:only-child::after {width: 0;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c div.sk-text-repr-fallback {display: none;}</style><div id="sk-68c1788a-774a-4c03-a8d2-185ef2b55f5c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbfbb1bd-7915-4c50-a5ae-7bf552b6b395" type="checkbox" ><label for="fbfbb1bd-7915-4c50-a5ae-7bf552b6b395" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c01d142-768b-453a-aad0-de7d9760e119" type="checkbox" ><label for="2c01d142-768b-453a-aad0-de7d9760e119" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04e8c894-ca01-4c35-a5aa-12defc80f957" type="checkbox" ><label for="04e8c894-ca01-4c35-a5aa-12defc80f957" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5a5be42-b229-42d1-ae8c-87e663ff1427" type="checkbox" ><label for="d5a5be42-b229-42d1-ae8c-87e663ff1427" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c63c400-6f85-42b7-a87b-bd24868cdfb0" type="checkbox" ><label for="9c63c400-6f85-42b7-a87b-bd24868cdfb0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7356f59-20ca-4fe8-8ea7-964cf6d93501" type="checkbox" ><label for="a7356f59-20ca-4fe8-8ea7-964cf6d93501" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da68aa63-8023-4da9-afcf-93a6ca6ef95c" type="checkbox" ><label for="da68aa63-8023-4da9-afcf-93a6ca6ef95c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2327e0a-8122-4ddc-8d5f-34bd91b81485" type="checkbox" ><label for="c2327e0a-8122-4ddc-8d5f-34bd91b81485" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb06b8a8-2eaf-4686-900d-e8bbc0353d25" type="checkbox" ><label for="eb06b8a8-2eaf-4686-900d-e8bbc0353d25" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
