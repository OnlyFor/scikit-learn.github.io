
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 {color: black;background-color: white;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 pre{padding: 0;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-toggleable {background-color: white;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-item {z-index: 1;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-parallel-item:only-child::after {width: 0;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c4ef248f-ed39-4905-9315-f8a52dad7106 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c4ef248f-ed39-4905-9315-f8a52dad7106" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24b5f000-e5a0-4470-9929-02830d15310c" type="checkbox" ><label for="24b5f000-e5a0-4470-9929-02830d15310c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3f23ce5-ede1-4659-bf04-671401da0f2e" type="checkbox" ><label for="b3f23ce5-ede1-4659-bf04-671401da0f2e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f705529-b59d-4b8b-8906-b7894b17213f" type="checkbox" ><label for="6f705529-b59d-4b8b-8906-b7894b17213f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-65801b2d-805d-4f56-9b5e-499852aabc99 {color: black;background-color: white;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 pre{padding: 0;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-toggleable {background-color: white;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-estimator:hover {background-color: #d4ebff;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-item {z-index: 1;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-parallel-item:only-child::after {width: 0;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-65801b2d-805d-4f56-9b5e-499852aabc99 div.sk-text-repr-fallback {display: none;}</style><div id="sk-65801b2d-805d-4f56-9b5e-499852aabc99" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a950a98-a3e7-40c8-9947-3214a19423ac" type="checkbox" ><label for="9a950a98-a3e7-40c8-9947-3214a19423ac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22e0d25a-9db7-48eb-92c6-56b75681b1d8" type="checkbox" ><label for="22e0d25a-9db7-48eb-92c6-56b75681b1d8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b653b55-9a0a-4046-951a-6f5a6ac47550" type="checkbox" ><label for="7b653b55-9a0a-4046-951a-6f5a6ac47550" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39d98799-2122-4b97-9d1d-9bd8eed34e45" type="checkbox" ><label for="39d98799-2122-4b97-9d1d-9bd8eed34e45" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 {color: black;background-color: white;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 pre{padding: 0;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-toggleable {background-color: white;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-item {z-index: 1;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-parallel-item:only-child::after {width: 0;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8515f30a-aa56-4b3c-bc54-61c98bb04548 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8515f30a-aa56-4b3c-bc54-61c98bb04548" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="348a72c3-dab8-42f1-9bea-ca9a31607606" type="checkbox" ><label for="348a72c3-dab8-42f1-9bea-ca9a31607606" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="099f3e7c-eed6-41c2-9784-204b8ef307da" type="checkbox" ><label for="099f3e7c-eed6-41c2-9784-204b8ef307da" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34889f45-d818-44b1-a6a7-36110e35bdec" type="checkbox" ><label for="34889f45-d818-44b1-a6a7-36110e35bdec" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-997030f9-5872-413e-b740-6aba2c934877 {color: black;background-color: white;}#sk-997030f9-5872-413e-b740-6aba2c934877 pre{padding: 0;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-toggleable {background-color: white;}#sk-997030f9-5872-413e-b740-6aba2c934877 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-997030f9-5872-413e-b740-6aba2c934877 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-997030f9-5872-413e-b740-6aba2c934877 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-997030f9-5872-413e-b740-6aba2c934877 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-997030f9-5872-413e-b740-6aba2c934877 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-997030f9-5872-413e-b740-6aba2c934877 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-estimator:hover {background-color: #d4ebff;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-item {z-index: 1;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-parallel-item:only-child::after {width: 0;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-997030f9-5872-413e-b740-6aba2c934877 div.sk-text-repr-fallback {display: none;}</style><div id="sk-997030f9-5872-413e-b740-6aba2c934877" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c73732f2-b99d-4779-88a1-79a87d7bd278" type="checkbox" ><label for="c73732f2-b99d-4779-88a1-79a87d7bd278" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d45e885f-bb3d-4524-b049-87ecc9132e9b" type="checkbox" ><label for="d45e885f-bb3d-4524-b049-87ecc9132e9b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="121d30fe-324e-4f09-9db8-cb0fec169f02" type="checkbox" ><label for="121d30fe-324e-4f09-9db8-cb0fec169f02" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b6a0f7f-be0d-47f4-956f-72ad50c8e043" type="checkbox" ><label for="8b6a0f7f-be0d-47f4-956f-72ad50c8e043" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93d9397e-7f70-4c25-b94b-4bbfa7d1ed7e" type="checkbox" ><label for="93d9397e-7f70-4c25-b94b-4bbfa7d1ed7e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="701d490d-ce10-48cb-a621-7b48e4ec26a3" type="checkbox" ><label for="701d490d-ce10-48cb-a621-7b48e4ec26a3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4a9ddfe-11bf-4769-9017-f6cccc6c7305" type="checkbox" ><label for="e4a9ddfe-11bf-4769-9017-f6cccc6c7305" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="114bb9a8-121a-4549-aa2c-44c0bba7cafa" type="checkbox" ><label for="114bb9a8-121a-4549-aa2c-44c0bba7cafa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1c5a78e-c6d9-4bc1-9e01-a00ebac8e090" type="checkbox" ><label for="c1c5a78e-c6d9-4bc1-9e01-a00ebac8e090" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 {color: black;background-color: white;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 pre{padding: 0;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-toggleable {background-color: white;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-item {z-index: 1;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-parallel-item:only-child::after {width: 0;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f7ddbb0f-688c-4105-a527-95b8db7b4337 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f7ddbb0f-688c-4105-a527-95b8db7b4337" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e72b0509-4bd1-432a-b331-dcb27a4969c5" type="checkbox" ><label for="e72b0509-4bd1-432a-b331-dcb27a4969c5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46078779-3caf-47e0-bf08-cd0e8b3eeaa7" type="checkbox" ><label for="46078779-3caf-47e0-bf08-cd0e8b3eeaa7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd874047-4778-464d-ab5b-ac0b16bbd9ce" type="checkbox" ><label for="bd874047-4778-464d-ab5b-ac0b16bbd9ce" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="118ed318-aec9-4f96-8f4b-720037da563b" type="checkbox" ><label for="118ed318-aec9-4f96-8f4b-720037da563b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b3d338f-547a-411c-b565-440dad1ffba8" type="checkbox" ><label for="4b3d338f-547a-411c-b565-440dad1ffba8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32778d91-ac7f-438d-a1bd-dc73a2cc4938" type="checkbox" ><label for="32778d91-ac7f-438d-a1bd-dc73a2cc4938" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d6583ee-2ffe-4904-a0e1-888bc5e1534c" type="checkbox" ><label for="8d6583ee-2ffe-4904-a0e1-888bc5e1534c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d197a13b-bca0-4d29-8a5e-db8b322a7b71" type="checkbox" ><label for="d197a13b-bca0-4d29-8a5e-db8b322a7b71" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6147b30-7998-41c1-a08a-f223a72e11a9" type="checkbox" ><label for="b6147b30-7998-41c1-a08a-f223a72e11a9" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
