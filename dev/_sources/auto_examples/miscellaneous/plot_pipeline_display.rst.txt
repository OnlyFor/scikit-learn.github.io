
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef {color: black;background-color: white;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef pre{padding: 0;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-toggleable {background-color: white;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-estimator:hover {background-color: #d4ebff;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-item {z-index: 1;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-parallel-item:only-child::after {width: 0;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-681e58e4-462c-4048-9bef-01fdfe8e2bef div.sk-text-repr-fallback {display: none;}</style><div id="sk-681e58e4-462c-4048-9bef-01fdfe8e2bef" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55af8d13-b785-459d-837b-703a7bf76598" type="checkbox" ><label for="55af8d13-b785-459d-837b-703a7bf76598" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9e9f364-209b-47a2-a255-4f876e347a57" type="checkbox" ><label for="f9e9f364-209b-47a2-a255-4f876e347a57" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cad6425-8a9d-49a0-aa55-8e3714d8dcbe" type="checkbox" ><label for="5cad6425-8a9d-49a0-aa55-8e3714d8dcbe" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d {color: black;background-color: white;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d pre{padding: 0;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-toggleable {background-color: white;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-item {z-index: 1;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-parallel-item:only-child::after {width: 0;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-74655fd7-a3a6-4e37-a8f0-9d93db83bb3d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0069a735-72e6-4275-a7eb-70684a0988a3" type="checkbox" ><label for="0069a735-72e6-4275-a7eb-70684a0988a3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79bfeeef-275d-4d1d-be3f-03fadab0b6a3" type="checkbox" ><label for="79bfeeef-275d-4d1d-be3f-03fadab0b6a3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2a9ccdd-7d60-4fbb-8704-105ba0f9fd9d" type="checkbox" ><label for="b2a9ccdd-7d60-4fbb-8704-105ba0f9fd9d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="787d7f73-f9d6-418e-b2d5-4128b3424195" type="checkbox" ><label for="787d7f73-f9d6-418e-b2d5-4128b3424195" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e1497c57-1700-438b-801c-bf60361c141b {color: black;background-color: white;}#sk-e1497c57-1700-438b-801c-bf60361c141b pre{padding: 0;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-toggleable {background-color: white;}#sk-e1497c57-1700-438b-801c-bf60361c141b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e1497c57-1700-438b-801c-bf60361c141b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e1497c57-1700-438b-801c-bf60361c141b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e1497c57-1700-438b-801c-bf60361c141b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e1497c57-1700-438b-801c-bf60361c141b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1497c57-1700-438b-801c-bf60361c141b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-estimator:hover {background-color: #d4ebff;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-item {z-index: 1;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-parallel-item:only-child::after {width: 0;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e1497c57-1700-438b-801c-bf60361c141b div.sk-text-repr-fallback {display: none;}</style><div id="sk-e1497c57-1700-438b-801c-bf60361c141b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32946214-e5ae-481c-98b0-732681f175b9" type="checkbox" ><label for="32946214-e5ae-481c-98b0-732681f175b9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="805498ca-e6aa-447c-bcef-b3982a5d537e" type="checkbox" ><label for="805498ca-e6aa-447c-bcef-b3982a5d537e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a643352-d057-4375-a49a-86069eb09ca9" type="checkbox" ><label for="6a643352-d057-4375-a49a-86069eb09ca9" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c6953edd-342b-433b-ae3b-b944ae828630 {color: black;background-color: white;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 pre{padding: 0;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-toggleable {background-color: white;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-item {z-index: 1;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-parallel-item:only-child::after {width: 0;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c6953edd-342b-433b-ae3b-b944ae828630 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c6953edd-342b-433b-ae3b-b944ae828630" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eb0b6e8-0d41-49ab-b473-14822cfd251a" type="checkbox" ><label for="0eb0b6e8-0d41-49ab-b473-14822cfd251a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e3aa11f-d801-4fbc-a91a-6b262b230055" type="checkbox" ><label for="4e3aa11f-d801-4fbc-a91a-6b262b230055" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c6432c0-0404-43e8-91d9-e3552b1a0799" type="checkbox" ><label for="7c6432c0-0404-43e8-91d9-e3552b1a0799" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="868431a6-6c80-472c-a812-39c76fb67959" type="checkbox" ><label for="868431a6-6c80-472c-a812-39c76fb67959" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a846c092-470e-4a62-805b-81b10636a59c" type="checkbox" ><label for="a846c092-470e-4a62-805b-81b10636a59c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db4303ab-982a-4cdc-8972-c2be825b8e54" type="checkbox" ><label for="db4303ab-982a-4cdc-8972-c2be825b8e54" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6842eba7-ebae-4167-b955-5a50c85e2c42" type="checkbox" ><label for="6842eba7-ebae-4167-b955-5a50c85e2c42" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14894a12-89a5-4eef-9d87-45c31270a318" type="checkbox" ><label for="14894a12-89a5-4eef-9d87-45c31270a318" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b2e9c93-2a2b-4db9-9ee8-5e715be6cc26" type="checkbox" ><label for="4b2e9c93-2a2b-4db9-9ee8-5e715be6cc26" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c {color: black;background-color: white;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c pre{padding: 0;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-toggleable {background-color: white;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-estimator:hover {background-color: #d4ebff;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-item {z-index: 1;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-parallel-item:only-child::after {width: 0;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bfe89319-6b0f-401b-b093-ca4d16ee479c div.sk-text-repr-fallback {display: none;}</style><div id="sk-bfe89319-6b0f-401b-b093-ca4d16ee479c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10ce85bb-4130-4fd5-8389-a0324cf0b022" type="checkbox" ><label for="10ce85bb-4130-4fd5-8389-a0324cf0b022" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d94f18e-a235-4bb8-ac2a-dddaad17c145" type="checkbox" ><label for="1d94f18e-a235-4bb8-ac2a-dddaad17c145" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c81bb567-4fa9-44c8-b1e7-2da91ad24f92" type="checkbox" ><label for="c81bb567-4fa9-44c8-b1e7-2da91ad24f92" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1c8f106-11b4-4549-8e86-d6778bc5a7e9" type="checkbox" ><label for="c1c8f106-11b4-4549-8e86-d6778bc5a7e9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cdada39-5873-4fc8-8e29-bdd985f8b32c" type="checkbox" ><label for="5cdada39-5873-4fc8-8e29-bdd985f8b32c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1d2b81a-cd45-4aa9-9cdc-f920afcf40fa" type="checkbox" ><label for="b1d2b81a-cd45-4aa9-9cdc-f920afcf40fa" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24b8b8db-a8c4-41e9-a566-42d14a320e24" type="checkbox" ><label for="24b8b8db-a8c4-41e9-a566-42d14a320e24" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d675bff3-3bd6-4da0-80ea-c1bd472fe67e" type="checkbox" ><label for="d675bff3-3bd6-4da0-80ea-c1bd472fe67e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65ae206f-4348-443b-88b9-8df1692734d1" type="checkbox" ><label for="65ae206f-4348-443b-88b9-8df1692734d1" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
