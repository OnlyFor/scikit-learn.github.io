
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 {color: black;background-color: white;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 pre{padding: 0;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-toggleable {background-color: white;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-item {z-index: 1;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-parallel-item:only-child::after {width: 0;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6f0d7f75-4938-44e6-9fdb-0cc3ce800891" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8327be86-7333-48aa-beed-4928d2c1d22c" type="checkbox" ><label for="8327be86-7333-48aa-beed-4928d2c1d22c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="900b9b41-b127-4367-b415-89f26bfe3c6d" type="checkbox" ><label for="900b9b41-b127-4367-b415-89f26bfe3c6d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="575a9225-be28-43a0-9655-0cd119a2c19b" type="checkbox" ><label for="575a9225-be28-43a0-9655-0cd119a2c19b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 {color: black;background-color: white;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 pre{padding: 0;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-toggleable {background-color: white;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-item {z-index: 1;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-parallel-item:only-child::after {width: 0;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d015a848-adbe-4e0c-9625-71d23f4b0f28 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d015a848-adbe-4e0c-9625-71d23f4b0f28" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="618a525c-1c67-43f8-b3a0-879c5b10aec6" type="checkbox" ><label for="618a525c-1c67-43f8-b3a0-879c5b10aec6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd8dc8b1-8b84-46fd-b258-ef5edfa48925" type="checkbox" ><label for="dd8dc8b1-8b84-46fd-b258-ef5edfa48925" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0dd0203-f05d-4295-8c59-48a6335c5bef" type="checkbox" ><label for="e0dd0203-f05d-4295-8c59-48a6335c5bef" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a368526-1c94-4618-854a-7b9e2d7a93d4" type="checkbox" ><label for="5a368526-1c94-4618-854a-7b9e2d7a93d4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae {color: black;background-color: white;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae pre{padding: 0;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-toggleable {background-color: white;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-estimator:hover {background-color: #d4ebff;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-item {z-index: 1;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-parallel-item:only-child::after {width: 0;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8b7057f2-4f43-4808-bc73-d7667790a2ae div.sk-text-repr-fallback {display: none;}</style><div id="sk-8b7057f2-4f43-4808-bc73-d7667790a2ae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="904be0e5-f93f-47a7-b2e1-ae3c02d32f73" type="checkbox" ><label for="904be0e5-f93f-47a7-b2e1-ae3c02d32f73" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88af54a7-4802-4d3e-aafe-63a80eea54cf" type="checkbox" ><label for="88af54a7-4802-4d3e-aafe-63a80eea54cf" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="368cec50-3187-4fc5-96f7-30683a7fc926" type="checkbox" ><label for="368cec50-3187-4fc5-96f7-30683a7fc926" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 {color: black;background-color: white;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 pre{padding: 0;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-toggleable {background-color: white;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-item {z-index: 1;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-parallel-item:only-child::after {width: 0;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a398756d-1450-4a53-bb72-77922e2fbbf9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a398756d-1450-4a53-bb72-77922e2fbbf9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="125566e1-7761-4bd0-bccc-26ef45533501" type="checkbox" ><label for="125566e1-7761-4bd0-bccc-26ef45533501" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="854027a7-80db-4e4c-bcc4-a12468eda940" type="checkbox" ><label for="854027a7-80db-4e4c-bcc4-a12468eda940" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38978735-d71e-4570-9b47-170bccddcedb" type="checkbox" ><label for="38978735-d71e-4570-9b47-170bccddcedb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2dc07f4-6c4a-4a8d-8ee5-e18170cd8957" type="checkbox" ><label for="b2dc07f4-6c4a-4a8d-8ee5-e18170cd8957" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="462e8d3a-46a9-4830-b049-f0e88f21dfcb" type="checkbox" ><label for="462e8d3a-46a9-4830-b049-f0e88f21dfcb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2d66f5d-7c6d-4a18-a0a7-554a0fb1e4db" type="checkbox" ><label for="a2d66f5d-7c6d-4a18-a0a7-554a0fb1e4db" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ef21172-b969-409f-a0cf-6dc2b710d06c" type="checkbox" ><label for="8ef21172-b969-409f-a0cf-6dc2b710d06c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5db9339-5073-40b9-86e1-9279f5d782cc" type="checkbox" ><label for="d5db9339-5073-40b9-86e1-9279f5d782cc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="974835a6-225d-4d5f-837e-bf24018bc336" type="checkbox" ><label for="974835a6-225d-4d5f-837e-bf24018bc336" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad {color: black;background-color: white;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad pre{padding: 0;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-toggleable {background-color: white;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-estimator:hover {background-color: #d4ebff;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-item {z-index: 1;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-parallel-item:only-child::after {width: 0;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad div.sk-text-repr-fallback {display: none;}</style><div id="sk-8077e6dc-af9d-4a4e-ae2f-d6f5bf6e16ad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4eeec2c-7ebd-46aa-9528-2cbe818de6f7" type="checkbox" ><label for="d4eeec2c-7ebd-46aa-9528-2cbe818de6f7" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3294a925-d8eb-4f56-9a38-4f4d587e9dcc" type="checkbox" ><label for="3294a925-d8eb-4f56-9a38-4f4d587e9dcc" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8dd432b-cf03-48c6-87ca-e14989cce268" type="checkbox" ><label for="b8dd432b-cf03-48c6-87ca-e14989cce268" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a3b0d63-15b3-4416-9cf4-eb2501944fbc" type="checkbox" ><label for="6a3b0d63-15b3-4416-9cf4-eb2501944fbc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f556716-8f1c-4194-ba10-a6aeaa3930e3" type="checkbox" ><label for="9f556716-8f1c-4194-ba10-a6aeaa3930e3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="738bea94-b5e6-49e8-a1b8-379f6319cce1" type="checkbox" ><label for="738bea94-b5e6-49e8-a1b8-379f6319cce1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd66451f-2e1e-4cb5-b334-5d36f3947bbe" type="checkbox" ><label for="bd66451f-2e1e-4cb5-b334-5d36f3947bbe" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00508032-571f-4b10-a757-b495f5ddf0d7" type="checkbox" ><label for="00508032-571f-4b10-a757-b495f5ddf0d7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79f0e146-0a45-48c7-912d-f9e6bcaaf4f1" type="checkbox" ><label for="79f0e146-0a45-48c7-912d-f9e6bcaaf4f1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="040b739d-d68a-4385-9ea4-4d8f9d410fa6" type="checkbox" ><label for="040b739d-d68a-4385-9ea4-4d8f9d410fa6" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.111 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
