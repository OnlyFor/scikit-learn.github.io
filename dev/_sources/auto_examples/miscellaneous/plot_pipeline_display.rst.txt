
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 {color: black;background-color: white;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 pre{padding: 0;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-toggleable {background-color: white;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-item {z-index: 1;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-parallel-item:only-child::after {width: 0;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-container {display: inline-block;position: relative;}#sk-8e9bc05c-5184-46f9-9606-f4c53026be47 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8e9bc05c-5184-46f9-9606-f4c53026be47" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb284a6a-a970-498d-b924-988d9d8e7865" type="checkbox" ><label class="sk-toggleable__label" for="eb284a6a-a970-498d-b924-988d9d8e7865">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf625c9c-d4ab-4a35-b51d-4d0fe7288fa5" type="checkbox" ><label class="sk-toggleable__label" for="bf625c9c-d4ab-4a35-b51d-4d0fe7288fa5">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e2b94da-63e5-402c-ace7-cb2cf2d3404f" type="checkbox" ><label class="sk-toggleable__label" for="7e2b94da-63e5-402c-ace7-cb2cf2d3404f">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 {color: black;background-color: white;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 pre{padding: 0;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-toggleable {background-color: white;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-item {z-index: 1;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-parallel-item:only-child::after {width: 0;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-container {display: inline-block;position: relative;}#sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-76f49f4b-07cf-484e-9fd2-4bd2aa4da1a2" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7181d743-d96c-422d-bc84-c165ff3e8aff" type="checkbox" ><label class="sk-toggleable__label" for="7181d743-d96c-422d-bc84-c165ff3e8aff">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e3cc429-7630-47d4-b85d-09a0ebb48634" type="checkbox" ><label class="sk-toggleable__label" for="2e3cc429-7630-47d4-b85d-09a0ebb48634">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="797c8f58-90a4-48e0-a428-f89046a26522" type="checkbox" ><label class="sk-toggleable__label" for="797c8f58-90a4-48e0-a428-f89046a26522">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b44b16ad-81bd-41ad-8730-4d05e547852d" type="checkbox" ><label class="sk-toggleable__label" for="b44b16ad-81bd-41ad-8730-4d05e547852d">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f6660435-4c0b-42ea-b430-a495056dfe43 {color: black;background-color: white;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 pre{padding: 0;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-toggleable {background-color: white;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-item {z-index: 1;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-parallel-item:only-child::after {width: 0;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-container {display: inline-block;position: relative;}#sk-f6660435-4c0b-42ea-b430-a495056dfe43 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f6660435-4c0b-42ea-b430-a495056dfe43" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fc8dc6f-df4b-4113-a904-2dcf078b954b" type="checkbox" ><label class="sk-toggleable__label" for="5fc8dc6f-df4b-4113-a904-2dcf078b954b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d73ee1e-b7ae-4d71-a6f4-505647807f19" type="checkbox" ><label class="sk-toggleable__label" for="0d73ee1e-b7ae-4d71-a6f4-505647807f19">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86974a29-513d-41c0-8b04-bc80394f3bd5" type="checkbox" ><label class="sk-toggleable__label" for="86974a29-513d-41c0-8b04-bc80394f3bd5">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 {color: black;background-color: white;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 pre{padding: 0;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-toggleable {background-color: white;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-item {z-index: 1;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-parallel-item:only-child::after {width: 0;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-container {display: inline-block;position: relative;}#sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4f101c0c-19f1-4f54-a501-40f0e8ef3281" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d974256-6a34-45c2-9d5d-8540b18e4bfe" type="checkbox" ><label class="sk-toggleable__label" for="1d974256-6a34-45c2-9d5d-8540b18e4bfe">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bbda93e3-bfe7-4f37-90cb-8527f2cba8ef" type="checkbox" ><label class="sk-toggleable__label" for="bbda93e3-bfe7-4f37-90cb-8527f2cba8ef">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="837307bd-36e2-406b-8b94-bb01a678ac83" type="checkbox" ><label class="sk-toggleable__label" for="837307bd-36e2-406b-8b94-bb01a678ac83">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a48e50a7-0ca7-41eb-9810-ea8c8ea02d05" type="checkbox" ><label class="sk-toggleable__label" for="a48e50a7-0ca7-41eb-9810-ea8c8ea02d05">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7484cb4-bc9e-4eb2-b1e1-1a31cec920ee" type="checkbox" ><label class="sk-toggleable__label" for="f7484cb4-bc9e-4eb2-b1e1-1a31cec920ee">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f47106b-6c37-4338-b2e6-4ec91e390d4c" type="checkbox" ><label class="sk-toggleable__label" for="4f47106b-6c37-4338-b2e6-4ec91e390d4c">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20397ab3-7878-421c-a6ee-3eb4e3a08b1e" type="checkbox" ><label class="sk-toggleable__label" for="20397ab3-7878-421c-a6ee-3eb4e3a08b1e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c03cc3e-7078-4ba4-9bb7-748806698a27" type="checkbox" ><label class="sk-toggleable__label" for="2c03cc3e-7078-4ba4-9bb7-748806698a27">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96ba831d-76c1-4cd1-a70e-34e8e7683c28" type="checkbox" ><label class="sk-toggleable__label" for="96ba831d-76c1-4cd1-a70e-34e8e7683c28">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c {color: black;background-color: white;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c pre{padding: 0;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-toggleable {background-color: white;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-estimator:hover {background-color: #d4ebff;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-item {z-index: 1;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-parallel-item:only-child::after {width: 0;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-container {display: inline-block;position: relative;}#sk-e68bebd9-c8f7-41bb-85d3-964a9643800c div.sk-text-repr-fallback {display: none;}</style><div id="sk-e68bebd9-c8f7-41bb-85d3-964a9643800c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6be057a-f54d-4032-b8db-1ebbaa8512f7" type="checkbox" ><label class="sk-toggleable__label" for="e6be057a-f54d-4032-b8db-1ebbaa8512f7">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d933f21-fe50-4814-808b-51557c2e9730" type="checkbox" ><label class="sk-toggleable__label" for="1d933f21-fe50-4814-808b-51557c2e9730">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9db32fa1-cdd0-4296-8870-7f4bb7d0cbd3" type="checkbox" ><label class="sk-toggleable__label" for="9db32fa1-cdd0-4296-8870-7f4bb7d0cbd3">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c53a0b1-1e39-40d2-993f-d78f87289fbc" type="checkbox" ><label class="sk-toggleable__label" for="9c53a0b1-1e39-40d2-993f-d78f87289fbc">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f31d41d8-7b07-41e5-ba2f-b5a22d40d81f" type="checkbox" ><label class="sk-toggleable__label" for="f31d41d8-7b07-41e5-ba2f-b5a22d40d81f">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a0b6e0b-28b1-4191-8ea8-6d021693b42c" type="checkbox" ><label class="sk-toggleable__label" for="2a0b6e0b-28b1-4191-8ea8-6d021693b42c">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cda0921-d6af-4e2e-ad3f-16af72c53afc" type="checkbox" ><label class="sk-toggleable__label" for="0cda0921-d6af-4e2e-ad3f-16af72c53afc">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b932e02-abff-4192-b1fb-d01506ca8563" type="checkbox" ><label class="sk-toggleable__label" for="8b932e02-abff-4192-b1fb-d01506ca8563">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="645c1ceb-215d-4682-8497-702d184d0622" type="checkbox" ><label class="sk-toggleable__label" for="645c1ceb-215d-4682-8497-702d184d0622">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.101 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
