
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 {color: black;background-color: white;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 pre{padding: 0;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-toggleable {background-color: white;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-item {z-index: 1;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-parallel-item:only-child::after {width: 0;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-61b1b46d-77d2-44ab-97b2-64642bea6cb0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a5f312f-d52f-4995-b6c0-9482628cf34e" type="checkbox" ><label for="7a5f312f-d52f-4995-b6c0-9482628cf34e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="986a6d9b-7b1c-466e-acf5-d61056d126c1" type="checkbox" ><label for="986a6d9b-7b1c-466e-acf5-d61056d126c1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29589ec5-e4c3-4f87-88e6-0ba56e4c06c1" type="checkbox" ><label for="29589ec5-e4c3-4f87-88e6-0ba56e4c06c1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 {color: black;background-color: white;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 pre{padding: 0;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-toggleable {background-color: white;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-item {z-index: 1;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0af27592-ae01-4db2-8d40-d142de67e2c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0af27592-ae01-4db2-8d40-d142de67e2c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0160f967-e987-4bcf-bce0-3fa6b133d1d5" type="checkbox" ><label for="0160f967-e987-4bcf-bce0-3fa6b133d1d5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa020249-ceb2-4fcf-9670-f1a049f39163" type="checkbox" ><label for="aa020249-ceb2-4fcf-9670-f1a049f39163" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ad17196-bd9b-468f-af7e-a5e1e3335089" type="checkbox" ><label for="3ad17196-bd9b-468f-af7e-a5e1e3335089" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d6297cc-7d01-4e95-a6ef-68dff4ecca8e" type="checkbox" ><label for="9d6297cc-7d01-4e95-a6ef-68dff4ecca8e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 {color: black;background-color: white;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 pre{padding: 0;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-toggleable {background-color: white;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-item {z-index: 1;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-parallel-item:only-child::after {width: 0;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dc8796b6-603b-4a4f-b2f0-ab14be396f57" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d404ed4-3f43-4192-b09c-536e9052824f" type="checkbox" ><label for="7d404ed4-3f43-4192-b09c-536e9052824f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30907463-4464-4e95-b789-3dead778be2c" type="checkbox" ><label for="30907463-4464-4e95-b789-3dead778be2c" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0dcc1b13-78ea-4757-8041-3d2f6b5a1e74" type="checkbox" ><label for="0dcc1b13-78ea-4757-8041-3d2f6b5a1e74" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-127768a7-6938-41d3-8b33-ed2247ef59ff {color: black;background-color: white;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff pre{padding: 0;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-toggleable {background-color: white;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-item {z-index: 1;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-parallel-item:only-child::after {width: 0;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-127768a7-6938-41d3-8b33-ed2247ef59ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-127768a7-6938-41d3-8b33-ed2247ef59ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8874ab0b-5dac-47fd-91b6-6e8f68204b25" type="checkbox" ><label for="8874ab0b-5dac-47fd-91b6-6e8f68204b25" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0b85a97-d014-4c23-84bb-23efccb1ef66" type="checkbox" ><label for="f0b85a97-d014-4c23-84bb-23efccb1ef66" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8df7f549-6dda-4e4a-aa6b-09a4d709429e" type="checkbox" ><label for="8df7f549-6dda-4e4a-aa6b-09a4d709429e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4ee377f-d35a-499f-a5a2-1442e98e58dd" type="checkbox" ><label for="d4ee377f-d35a-499f-a5a2-1442e98e58dd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9977939-cb5d-42e1-a9a1-3d41823ff7d1" type="checkbox" ><label for="b9977939-cb5d-42e1-a9a1-3d41823ff7d1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c884ed6b-7ccb-4f66-8bef-17cfd94e6a2d" type="checkbox" ><label for="c884ed6b-7ccb-4f66-8bef-17cfd94e6a2d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d0b7faa-4e3c-463a-b26f-864fad18dcc3" type="checkbox" ><label for="2d0b7faa-4e3c-463a-b26f-864fad18dcc3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc39443c-cede-40e5-aaa5-064a905691a6" type="checkbox" ><label for="dc39443c-cede-40e5-aaa5-064a905691a6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7e1550a-137e-4c2b-a5e9-0b7070db76b4" type="checkbox" ><label for="b7e1550a-137e-4c2b-a5e9-0b7070db76b4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b {color: black;background-color: white;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b pre{padding: 0;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-toggleable {background-color: white;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-estimator:hover {background-color: #d4ebff;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-item {z-index: 1;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-parallel-item:only-child::after {width: 0;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b div.sk-text-repr-fallback {display: none;}</style><div id="sk-55266055-d8dd-4fa7-bbc2-d6b508a4630b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be36f24f-de40-4244-8662-a0d21ffa4180" type="checkbox" ><label for="be36f24f-de40-4244-8662-a0d21ffa4180" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="535772db-95cf-4866-905d-cfadb63e0f25" type="checkbox" ><label for="535772db-95cf-4866-905d-cfadb63e0f25" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50b127e2-2098-45d9-90b4-32a6b1019d8b" type="checkbox" ><label for="50b127e2-2098-45d9-90b4-32a6b1019d8b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41b74bac-accf-4e1b-abc8-a01d5035ae65" type="checkbox" ><label for="41b74bac-accf-4e1b-abc8-a01d5035ae65" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4158165-1b1c-4c48-a69e-afa1faedf0c4" type="checkbox" ><label for="d4158165-1b1c-4c48-a69e-afa1faedf0c4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="624aa287-e1ec-40ba-a8f7-758d68e33805" type="checkbox" ><label for="624aa287-e1ec-40ba-a8f7-758d68e33805" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88d9f052-fd06-4ddf-820e-f4c8abb22924" type="checkbox" ><label for="88d9f052-fd06-4ddf-820e-f4c8abb22924" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c432f3a-4883-4450-8da6-9a5daaf91823" type="checkbox" ><label for="2c432f3a-4883-4450-8da6-9a5daaf91823" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9582d1f4-9fd4-4fd6-b24a-cf9feeb32610" type="checkbox" ><label for="9582d1f4-9fd4-4fd6-b24a-cf9feeb32610" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
