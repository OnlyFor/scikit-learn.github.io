
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 {color: black;background-color: white;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 pre{padding: 0;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-toggleable {background-color: white;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-item {z-index: 1;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-parallel-item:only-child::after {width: 0;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ed0e15a0-c2cc-4d96-b833-cff939256de3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ed0e15a0-c2cc-4d96-b833-cff939256de3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e7c2807-3492-458f-9840-6a33b08e7016" type="checkbox" ><label for="6e7c2807-3492-458f-9840-6a33b08e7016" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e9d4495-6662-4dd4-9eec-251959466971" type="checkbox" ><label for="0e9d4495-6662-4dd4-9eec-251959466971" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68c8590c-1007-41fc-9389-2f52e31d98b7" type="checkbox" ><label for="68c8590c-1007-41fc-9389-2f52e31d98b7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 {color: black;background-color: white;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 pre{padding: 0;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-toggleable {background-color: white;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-estimator:hover {background-color: #d4ebff;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-item {z-index: 1;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-parallel-item:only-child::after {width: 0;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-28f0b174-2eed-4624-a028-b6b4e2f26511 div.sk-text-repr-fallback {display: none;}</style><div id="sk-28f0b174-2eed-4624-a028-b6b4e2f26511" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28ce703d-b2fe-4899-a9fd-a8efc584e2ec" type="checkbox" ><label for="28ce703d-b2fe-4899-a9fd-a8efc584e2ec" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ee84a1a-6b07-4004-97fb-a8d2129df48a" type="checkbox" ><label for="1ee84a1a-6b07-4004-97fb-a8d2129df48a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a12127c-c6ce-41a4-9bbc-362a255dd457" type="checkbox" ><label for="7a12127c-c6ce-41a4-9bbc-362a255dd457" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83e45965-5d8c-458e-b8c2-9367ff8e3d11" type="checkbox" ><label for="83e45965-5d8c-458e-b8c2-9367ff8e3d11" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 {color: black;background-color: white;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 pre{padding: 0;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-toggleable {background-color: white;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-item {z-index: 1;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-parallel-item:only-child::after {width: 0;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e66c48d9-ebef-4c18-bf24-3b0b34c882e1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4290e7fa-6715-437f-b17f-1f5ff3f4488e" type="checkbox" ><label for="4290e7fa-6715-437f-b17f-1f5ff3f4488e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16fe2e97-6af4-4ca5-80f5-fc29c9752026" type="checkbox" ><label for="16fe2e97-6af4-4ca5-80f5-fc29c9752026" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7e7114d-05c7-42a6-bae3-b06817df99ca" type="checkbox" ><label for="b7e7114d-05c7-42a6-bae3-b06817df99ca" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-67c3332b-81c4-4795-a848-914d7af19641 {color: black;background-color: white;}#sk-67c3332b-81c4-4795-a848-914d7af19641 pre{padding: 0;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-toggleable {background-color: white;}#sk-67c3332b-81c4-4795-a848-914d7af19641 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-67c3332b-81c4-4795-a848-914d7af19641 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-67c3332b-81c4-4795-a848-914d7af19641 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-67c3332b-81c4-4795-a848-914d7af19641 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-67c3332b-81c4-4795-a848-914d7af19641 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-67c3332b-81c4-4795-a848-914d7af19641 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-estimator:hover {background-color: #d4ebff;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-item {z-index: 1;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-parallel-item:only-child::after {width: 0;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-67c3332b-81c4-4795-a848-914d7af19641 div.sk-text-repr-fallback {display: none;}</style><div id="sk-67c3332b-81c4-4795-a848-914d7af19641" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c2c8bc0-f84e-4025-811b-a227aa1f623e" type="checkbox" ><label for="5c2c8bc0-f84e-4025-811b-a227aa1f623e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="192defb0-2245-47a4-91e7-11a53153d8cf" type="checkbox" ><label for="192defb0-2245-47a4-91e7-11a53153d8cf" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="627af553-3bd3-430c-8ece-c0b3bdc499de" type="checkbox" ><label for="627af553-3bd3-430c-8ece-c0b3bdc499de" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a59290c-5462-4237-9f4a-deaf7cfcfaa5" type="checkbox" ><label for="6a59290c-5462-4237-9f4a-deaf7cfcfaa5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35405e37-063e-4e91-b8a7-0d543c9d9fc9" type="checkbox" ><label for="35405e37-063e-4e91-b8a7-0d543c9d9fc9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41c0cc6b-2e4d-4469-97f4-4be4ff3f40e2" type="checkbox" ><label for="41c0cc6b-2e4d-4469-97f4-4be4ff3f40e2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb1ef73f-6fc3-476b-a80c-9c2ae0d579a1" type="checkbox" ><label for="bb1ef73f-6fc3-476b-a80c-9c2ae0d579a1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a4cfbc2-419d-4f50-a53f-9cec1a0a6537" type="checkbox" ><label for="7a4cfbc2-419d-4f50-a53f-9cec1a0a6537" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bcebbd2-ab51-4239-8001-768d2ff83022" type="checkbox" ><label for="9bcebbd2-ab51-4239-8001-768d2ff83022" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca {color: black;background-color: white;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca pre{padding: 0;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-toggleable {background-color: white;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-item {z-index: 1;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-parallel-item:only-child::after {width: 0;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9b781ae5-c441-4657-8eed-32a4ebce92ca div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b781ae5-c441-4657-8eed-32a4ebce92ca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35404159-865d-4d26-a58e-a93914d9a1e1" type="checkbox" ><label for="35404159-865d-4d26-a58e-a93914d9a1e1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="411eea75-f213-457a-a9d9-cea674d8c266" type="checkbox" ><label for="411eea75-f213-457a-a9d9-cea674d8c266" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee806044-68c9-4cd7-b7b8-99ede5c8eeb0" type="checkbox" ><label for="ee806044-68c9-4cd7-b7b8-99ede5c8eeb0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5385301-78b6-4812-8ad7-f61f3ad305c8" type="checkbox" ><label for="d5385301-78b6-4812-8ad7-f61f3ad305c8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="262d9b45-196c-4bd9-96ca-b84f6b429352" type="checkbox" ><label for="262d9b45-196c-4bd9-96ca-b84f6b429352" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bd9ed90-252d-4521-b5db-533f57d68c09" type="checkbox" ><label for="0bd9ed90-252d-4521-b5db-533f57d68c09" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="899a00c2-7b35-4cd4-8b97-728cc1e6b176" type="checkbox" ><label for="899a00c2-7b35-4cd4-8b97-728cc1e6b176" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f31a0f1-b33d-43f3-8413-3dcc2f6e667a" type="checkbox" ><label for="7f31a0f1-b33d-43f3-8413-3dcc2f6e667a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="276f3dd7-d8c6-448d-8556-6242b26bbb1d" type="checkbox" ><label for="276f3dd7-d8c6-448d-8556-6242b26bbb1d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
