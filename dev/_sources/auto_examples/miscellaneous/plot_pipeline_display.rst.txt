
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 {color: black;background-color: white;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 pre{padding: 0;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-toggleable {background-color: white;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-estimator:hover {background-color: #d4ebff;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-item {z-index: 1;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-parallel-item:only-child::after {width: 0;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-92a60f07-4c12-4058-bf61-a1d7bef01340 div.sk-text-repr-fallback {display: none;}</style><div id="sk-92a60f07-4c12-4058-bf61-a1d7bef01340" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d50388cc-0e91-4b78-b490-fd5a23362f6e" type="checkbox" ><label for="d50388cc-0e91-4b78-b490-fd5a23362f6e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="772120b1-6e77-4ffc-9818-b323de8f8f49" type="checkbox" ><label for="772120b1-6e77-4ffc-9818-b323de8f8f49" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21a9cf24-3dd2-4d18-9b0b-23edefe906fe" type="checkbox" ><label for="21a9cf24-3dd2-4d18-9b0b-23edefe906fe" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 {color: black;background-color: white;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 pre{padding: 0;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-toggleable {background-color: white;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-estimator:hover {background-color: #d4ebff;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-item {z-index: 1;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-parallel-item:only-child::after {width: 0;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98 div.sk-text-repr-fallback {display: none;}</style><div id="sk-140c6b12-6d9a-4c20-ba04-5b64f9812c98" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="91fe870e-35e0-4ec9-a52b-224fbe005f89" type="checkbox" ><label for="91fe870e-35e0-4ec9-a52b-224fbe005f89" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbe39a3f-e260-4c28-b9c5-48a4924162dc" type="checkbox" ><label for="dbe39a3f-e260-4c28-b9c5-48a4924162dc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51761905-7315-4d0e-88c3-2fa2ca81492f" type="checkbox" ><label for="51761905-7315-4d0e-88c3-2fa2ca81492f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e8d5ffe-43c5-4884-86b5-c1302ef5330e" type="checkbox" ><label for="6e8d5ffe-43c5-4884-86b5-c1302ef5330e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bafb48d1-e361-4c73-9b78-b87927e910ed {color: black;background-color: white;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed pre{padding: 0;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-toggleable {background-color: white;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-estimator:hover {background-color: #d4ebff;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-item {z-index: 1;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-parallel-item:only-child::after {width: 0;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bafb48d1-e361-4c73-9b78-b87927e910ed div.sk-text-repr-fallback {display: none;}</style><div id="sk-bafb48d1-e361-4c73-9b78-b87927e910ed" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f19c24c6-4cd3-4c00-9449-668ef6567381" type="checkbox" ><label for="f19c24c6-4cd3-4c00-9449-668ef6567381" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="060b53bf-d7aa-43d7-b4fe-43ac76eec56e" type="checkbox" ><label for="060b53bf-d7aa-43d7-b4fe-43ac76eec56e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af96cba8-bd27-4bd7-a92b-d15ad018c018" type="checkbox" ><label for="af96cba8-bd27-4bd7-a92b-d15ad018c018" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b1fbea80-d46f-4f25-8566-00491bf761fd {color: black;background-color: white;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd pre{padding: 0;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-toggleable {background-color: white;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-item {z-index: 1;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-parallel-item:only-child::after {width: 0;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b1fbea80-d46f-4f25-8566-00491bf761fd div.sk-text-repr-fallback {display: none;}</style><div id="sk-b1fbea80-d46f-4f25-8566-00491bf761fd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d8b6ccd-89cf-46e5-b1d3-c29869b23963" type="checkbox" ><label for="4d8b6ccd-89cf-46e5-b1d3-c29869b23963" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db854c2e-69ac-4961-a528-122a4e880dcb" type="checkbox" ><label for="db854c2e-69ac-4961-a528-122a4e880dcb" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f37cc938-91e7-4cf8-9bf5-71dd1f48638a" type="checkbox" ><label for="f37cc938-91e7-4cf8-9bf5-71dd1f48638a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2efe0d5-3000-4a6b-9cac-ae710995ba9c" type="checkbox" ><label for="e2efe0d5-3000-4a6b-9cac-ae710995ba9c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5f93749-8e8d-4bb5-a49e-113c4a753a89" type="checkbox" ><label for="a5f93749-8e8d-4bb5-a49e-113c4a753a89" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c21050d1-52a9-4a7d-8240-025c83515fe4" type="checkbox" ><label for="c21050d1-52a9-4a7d-8240-025c83515fe4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3eb1444d-9a13-4d64-9c6e-25d51de04ffa" type="checkbox" ><label for="3eb1444d-9a13-4d64-9c6e-25d51de04ffa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3c29b31-cfcf-46f1-9970-e75a46b6b2ed" type="checkbox" ><label for="e3c29b31-cfcf-46f1-9970-e75a46b6b2ed" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dbe1b67c-3ad2-415f-ae41-e61e6bcaab8d" type="checkbox" ><label for="dbe1b67c-3ad2-415f-ae41-e61e6bcaab8d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 {color: black;background-color: white;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 pre{padding: 0;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-toggleable {background-color: white;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-estimator:hover {background-color: #d4ebff;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-item {z-index: 1;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-parallel-item:only-child::after {width: 0;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-430a1301-51a6-442c-9f40-48e4e2dd2a18 div.sk-text-repr-fallback {display: none;}</style><div id="sk-430a1301-51a6-442c-9f40-48e4e2dd2a18" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e26c11b-0403-46fc-a396-3e29d7ee9d65" type="checkbox" ><label for="6e26c11b-0403-46fc-a396-3e29d7ee9d65" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32029d63-dfd1-4afe-a0f2-e8e566a65998" type="checkbox" ><label for="32029d63-dfd1-4afe-a0f2-e8e566a65998" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4168692-f222-44b6-9c3f-4e71ef449264" type="checkbox" ><label for="f4168692-f222-44b6-9c3f-4e71ef449264" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b9bcee5-93e2-47cd-afa8-c27a1471bd58" type="checkbox" ><label for="0b9bcee5-93e2-47cd-afa8-c27a1471bd58" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4912aab7-e3e5-46d3-a7fc-b387909bfccb" type="checkbox" ><label for="4912aab7-e3e5-46d3-a7fc-b387909bfccb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30c21cb3-ee8a-47aa-85d9-57b4d32b0c59" type="checkbox" ><label for="30c21cb3-ee8a-47aa-85d9-57b4d32b0c59" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbc116f8-10b0-4bf3-8ec7-c432801ec57c" type="checkbox" ><label for="fbc116f8-10b0-4bf3-8ec7-c432801ec57c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc6e3cfe-47e9-44c5-8772-2c6e9cdfe620" type="checkbox" ><label for="bc6e3cfe-47e9-44c5-8772-2c6e9cdfe620" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60be3759-6e03-4080-88fd-cdd9fd0dbd69" type="checkbox" ><label for="60be3759-6e03-4080-88fd-cdd9fd0dbd69" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
