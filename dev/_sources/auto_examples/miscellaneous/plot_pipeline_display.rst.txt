
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e {color: black;background-color: white;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e pre{padding: 0;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-toggleable {background-color: white;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-estimator:hover {background-color: #d4ebff;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-item {z-index: 1;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-parallel-item:only-child::after {width: 0;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e div.sk-text-repr-fallback {display: none;}</style><div id="sk-df4ffd06-cf03-4164-b26e-cdc3f0e3084e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43777d4d-ee0c-4895-995c-345ec634ae3e" type="checkbox" ><label for="43777d4d-ee0c-4895-995c-345ec634ae3e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17fc3499-42b6-49eb-8234-af542a63d0b9" type="checkbox" ><label for="17fc3499-42b6-49eb-8234-af542a63d0b9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a952072-7552-44e7-8311-76eec389c9fd" type="checkbox" ><label for="1a952072-7552-44e7-8311-76eec389c9fd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 {color: black;background-color: white;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 pre{padding: 0;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-toggleable {background-color: white;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-item {z-index: 1;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-parallel-item:only-child::after {width: 0;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a8d91f3f-a3a2-418f-97eb-2248c129bf59" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8545b705-cee2-4815-809e-cacf871a7017" type="checkbox" ><label for="8545b705-cee2-4815-809e-cacf871a7017" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33881968-0585-43bc-a7a2-fd61e673dab6" type="checkbox" ><label for="33881968-0585-43bc-a7a2-fd61e673dab6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b790cc6e-a686-4749-bca3-3f47863eba3c" type="checkbox" ><label for="b790cc6e-a686-4749-bca3-3f47863eba3c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5077afde-831a-4d0e-9609-bc06ec32171c" type="checkbox" ><label for="5077afde-831a-4d0e-9609-bc06ec32171c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 {color: black;background-color: white;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 pre{padding: 0;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-toggleable {background-color: white;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-item {z-index: 1;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-parallel-item:only-child::after {width: 0;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b915116e-cba6-40f2-ba4d-d1beb2487b97 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b915116e-cba6-40f2-ba4d-d1beb2487b97" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f6148cf-c06d-419f-9213-19ea32e4675a" type="checkbox" ><label for="2f6148cf-c06d-419f-9213-19ea32e4675a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76fd4eaf-07af-4cf4-8ef4-8917f45ecb53" type="checkbox" ><label for="76fd4eaf-07af-4cf4-8ef4-8917f45ecb53" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5585fc0d-8023-4f85-bf8e-ca04934c7913" type="checkbox" ><label for="5585fc0d-8023-4f85-bf8e-ca04934c7913" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14c3d7b0-9868-45de-87bf-0fd68144047f {color: black;background-color: white;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f pre{padding: 0;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-toggleable {background-color: white;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-estimator:hover {background-color: #d4ebff;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-item {z-index: 1;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-parallel-item:only-child::after {width: 0;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-14c3d7b0-9868-45de-87bf-0fd68144047f div.sk-text-repr-fallback {display: none;}</style><div id="sk-14c3d7b0-9868-45de-87bf-0fd68144047f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5aaad5f-9c24-402d-9446-51bc3464c7d7" type="checkbox" ><label for="a5aaad5f-9c24-402d-9446-51bc3464c7d7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="769d1743-0c9a-4b6c-b388-36c075fbab7b" type="checkbox" ><label for="769d1743-0c9a-4b6c-b388-36c075fbab7b" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d311c3ce-166b-47f5-bc10-79744a413696" type="checkbox" ><label for="d311c3ce-166b-47f5-bc10-79744a413696" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78bf9cd1-202f-4f2d-9d5b-56cff312c157" type="checkbox" ><label for="78bf9cd1-202f-4f2d-9d5b-56cff312c157" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f06ed7c-aedf-4cbd-b5f9-959146e98341" type="checkbox" ><label for="1f06ed7c-aedf-4cbd-b5f9-959146e98341" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9614bd82-565c-4998-85b6-87d52fc79da3" type="checkbox" ><label for="9614bd82-565c-4998-85b6-87d52fc79da3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1c4e75c-5a5e-4285-845f-2823450763f2" type="checkbox" ><label for="b1c4e75c-5a5e-4285-845f-2823450763f2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23107487-2704-4a53-b321-23e21e60f5e3" type="checkbox" ><label for="23107487-2704-4a53-b321-23e21e60f5e3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c08e8f06-abd1-4015-a8d0-7307846359e6" type="checkbox" ><label for="c08e8f06-abd1-4015-a8d0-7307846359e6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 {color: black;background-color: white;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 pre{padding: 0;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-toggleable {background-color: white;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-item {z-index: 1;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-parallel-item:only-child::after {width: 0;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8b71233d-13d6-46c4-ac69-762ebb0ed969 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8b71233d-13d6-46c4-ac69-762ebb0ed969" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dd0edb5-ba1f-40a5-9c0e-0fbe2ffc2096" type="checkbox" ><label for="4dd0edb5-ba1f-40a5-9c0e-0fbe2ffc2096" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a91d672-96e3-49e4-9b81-c243fec6ed1f" type="checkbox" ><label for="5a91d672-96e3-49e4-9b81-c243fec6ed1f" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3c66d78-c82a-4231-9599-72753655530f" type="checkbox" ><label for="a3c66d78-c82a-4231-9599-72753655530f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e278b6d3-568a-4e58-9d30-b430f0c044b6" type="checkbox" ><label for="e278b6d3-568a-4e58-9d30-b430f0c044b6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="abe1b152-91e6-4fcd-bb6f-fbf02d25c1ba" type="checkbox" ><label for="abe1b152-91e6-4fcd-bb6f-fbf02d25c1ba" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acef8a75-67be-4400-9f52-52e8038c148e" type="checkbox" ><label for="acef8a75-67be-4400-9f52-52e8038c148e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="294d53b1-dae8-40e1-88b7-d17d63ba0676" type="checkbox" ><label for="294d53b1-dae8-40e1-88b7-d17d63ba0676" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="830d329d-2f71-4bdb-95c2-1913459f0a78" type="checkbox" ><label for="830d329d-2f71-4bdb-95c2-1913459f0a78" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac5ece5b-f1bf-4ffc-b1c6-a5262c950995" type="checkbox" ><label for="ac5ece5b-f1bf-4ffc-b1c6-a5262c950995" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58056e1e-960c-4c20-9023-0a7fe9bcd5ae" type="checkbox" ><label for="58056e1e-960c-4c20-9023-0a7fe9bcd5ae" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.099 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
