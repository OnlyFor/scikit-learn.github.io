
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-86953319-4793-4b42-95bb-b39f50608953 {color: black;background-color: white;}#sk-86953319-4793-4b42-95bb-b39f50608953 pre{padding: 0;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-toggleable {background-color: white;}#sk-86953319-4793-4b42-95bb-b39f50608953 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-86953319-4793-4b42-95bb-b39f50608953 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-86953319-4793-4b42-95bb-b39f50608953 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-86953319-4793-4b42-95bb-b39f50608953 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-86953319-4793-4b42-95bb-b39f50608953 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-86953319-4793-4b42-95bb-b39f50608953 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-estimator:hover {background-color: #d4ebff;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-item {z-index: 1;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-parallel-item:only-child::after {width: 0;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-86953319-4793-4b42-95bb-b39f50608953 div.sk-text-repr-fallback {display: none;}</style><div id="sk-86953319-4793-4b42-95bb-b39f50608953" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1740384-b794-4606-8848-e513ea091428" type="checkbox" ><label for="f1740384-b794-4606-8848-e513ea091428" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4204f1b4-569e-4ea0-9dc9-632a221aac22" type="checkbox" ><label for="4204f1b4-569e-4ea0-9dc9-632a221aac22" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d67b3cc1-1d7d-44f4-aa19-773655246734" type="checkbox" ><label for="d67b3cc1-1d7d-44f4-aa19-773655246734" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 {color: black;background-color: white;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 pre{padding: 0;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-toggleable {background-color: white;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-item {z-index: 1;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-parallel-item:only-child::after {width: 0;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-25f6717b-3e4b-4941-8afd-6631e42c68d8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-25f6717b-3e4b-4941-8afd-6631e42c68d8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c7c2eb4-d7aa-41dd-a602-5e822c604adb" type="checkbox" ><label for="9c7c2eb4-d7aa-41dd-a602-5e822c604adb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e3e616b-6069-4757-99f0-610a2d4253b1" type="checkbox" ><label for="1e3e616b-6069-4757-99f0-610a2d4253b1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3dd05b0-1fe4-40fe-b188-e67392572616" type="checkbox" ><label for="f3dd05b0-1fe4-40fe-b188-e67392572616" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80015f40-7827-4e40-b687-206279e88ff1" type="checkbox" ><label for="80015f40-7827-4e40-b687-206279e88ff1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-041fdb51-6468-4643-9af3-b117668d894e {color: black;background-color: white;}#sk-041fdb51-6468-4643-9af3-b117668d894e pre{padding: 0;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-toggleable {background-color: white;}#sk-041fdb51-6468-4643-9af3-b117668d894e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-041fdb51-6468-4643-9af3-b117668d894e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-041fdb51-6468-4643-9af3-b117668d894e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-041fdb51-6468-4643-9af3-b117668d894e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-041fdb51-6468-4643-9af3-b117668d894e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-041fdb51-6468-4643-9af3-b117668d894e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-estimator:hover {background-color: #d4ebff;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-item {z-index: 1;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-parallel-item:only-child::after {width: 0;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-041fdb51-6468-4643-9af3-b117668d894e div.sk-text-repr-fallback {display: none;}</style><div id="sk-041fdb51-6468-4643-9af3-b117668d894e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bf898e6-662e-4e44-90ab-26a3fc47e425" type="checkbox" ><label for="2bf898e6-662e-4e44-90ab-26a3fc47e425" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37c40696-1f9b-4cfb-a3e9-ca28b14a5224" type="checkbox" ><label for="37c40696-1f9b-4cfb-a3e9-ca28b14a5224" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04bc310f-ac1b-47fd-b325-f6876c3cb8a3" type="checkbox" ><label for="04bc310f-ac1b-47fd-b325-f6876c3cb8a3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea {color: black;background-color: white;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea pre{padding: 0;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-toggleable {background-color: white;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-item {z-index: 1;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-parallel-item:only-child::after {width: 0;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-7dedbc6e-b9cb-43ac-bffa-e05da35487ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2a57d8a-4e80-400a-96d3-1dc91f3c0995" type="checkbox" ><label for="b2a57d8a-4e80-400a-96d3-1dc91f3c0995" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="364bbfc5-87cb-4b4a-bbc3-01ff267ba90e" type="checkbox" ><label for="364bbfc5-87cb-4b4a-bbc3-01ff267ba90e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70abaaa1-b65d-4466-a388-f3a09e150f14" type="checkbox" ><label for="70abaaa1-b65d-4466-a388-f3a09e150f14" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b01d3e4d-75b3-4875-9296-75515a7e63cf" type="checkbox" ><label for="b01d3e4d-75b3-4875-9296-75515a7e63cf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c484a41-099f-4c0d-9fe8-74cfbb5715f1" type="checkbox" ><label for="5c484a41-099f-4c0d-9fe8-74cfbb5715f1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46474b61-9bab-43b1-9cdb-fa25e29d116d" type="checkbox" ><label for="46474b61-9bab-43b1-9cdb-fa25e29d116d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66b9bde1-38ae-4b3a-b27f-a6cf989d252a" type="checkbox" ><label for="66b9bde1-38ae-4b3a-b27f-a6cf989d252a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="693d0399-7fad-4af9-9a34-b63d72ef7cc3" type="checkbox" ><label for="693d0399-7fad-4af9-9a34-b63d72ef7cc3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b390655-a186-4664-a9fe-831224b2c346" type="checkbox" ><label for="6b390655-a186-4664-a9fe-831224b2c346" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7b22501e-2788-4422-bc54-c13ae5c18539 {color: black;background-color: white;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 pre{padding: 0;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-toggleable {background-color: white;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-item {z-index: 1;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-parallel-item:only-child::after {width: 0;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7b22501e-2788-4422-bc54-c13ae5c18539 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7b22501e-2788-4422-bc54-c13ae5c18539" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="176a9629-d91b-4555-bbc9-7d98ac67f06f" type="checkbox" ><label for="176a9629-d91b-4555-bbc9-7d98ac67f06f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b998cf2-a41b-418f-9ad6-0dbddc954fa3" type="checkbox" ><label for="7b998cf2-a41b-418f-9ad6-0dbddc954fa3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db40e7ad-3859-48a9-bf0e-c36a6153a293" type="checkbox" ><label for="db40e7ad-3859-48a9-bf0e-c36a6153a293" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c7f4501-f41e-476b-bc9e-0a5d0dadaa64" type="checkbox" ><label for="4c7f4501-f41e-476b-bc9e-0a5d0dadaa64" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1dbcf7e-8bd7-4653-bc81-7ef80b3fa6d6" type="checkbox" ><label for="b1dbcf7e-8bd7-4653-bc81-7ef80b3fa6d6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e28c9cae-c6fe-4a91-b59e-57ac14022700" type="checkbox" ><label for="e28c9cae-c6fe-4a91-b59e-57ac14022700" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22d8a7b8-0bf5-492f-a416-4defac6951a0" type="checkbox" ><label for="22d8a7b8-0bf5-492f-a416-4defac6951a0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3235a438-3d55-445e-904c-9a10e0894e54" type="checkbox" ><label for="3235a438-3d55-445e-904c-9a10e0894e54" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03fb44e6-b758-40ff-ad77-b3875c007005" type="checkbox" ><label for="03fb44e6-b758-40ff-ad77-b3875c007005" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
