
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-44248717-7dc3-4c14-b03f-72b6c23c611b {color: black;background-color: white;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b pre{padding: 0;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-toggleable {background-color: white;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-estimator:hover {background-color: #d4ebff;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-item {z-index: 1;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-parallel-item:only-child::after {width: 0;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-44248717-7dc3-4c14-b03f-72b6c23c611b div.sk-text-repr-fallback {display: none;}</style><div id="sk-44248717-7dc3-4c14-b03f-72b6c23c611b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8192b00d-d4f0-41cc-8aa8-7b7c660c2e70" type="checkbox" ><label for="8192b00d-d4f0-41cc-8aa8-7b7c660c2e70" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42e7008b-7781-4e12-831b-50da2b8e3468" type="checkbox" ><label for="42e7008b-7781-4e12-831b-50da2b8e3468" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7f5d28b-594e-45ad-b50d-1b46301da0a0" type="checkbox" ><label for="b7f5d28b-594e-45ad-b50d-1b46301da0a0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5702b601-927c-4883-be0c-cde35ccd4edb {color: black;background-color: white;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb pre{padding: 0;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-toggleable {background-color: white;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-estimator:hover {background-color: #d4ebff;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-item {z-index: 1;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-parallel-item:only-child::after {width: 0;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5702b601-927c-4883-be0c-cde35ccd4edb div.sk-text-repr-fallback {display: none;}</style><div id="sk-5702b601-927c-4883-be0c-cde35ccd4edb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a15e311-cd76-4d62-b0e3-5777c4e45ee4" type="checkbox" ><label for="4a15e311-cd76-4d62-b0e3-5777c4e45ee4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d5383b8-b6a9-4445-8cd6-40c1ce167f27" type="checkbox" ><label for="3d5383b8-b6a9-4445-8cd6-40c1ce167f27" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="958e0e73-161a-4e75-97eb-3745ace778ee" type="checkbox" ><label for="958e0e73-161a-4e75-97eb-3745ace778ee" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df970253-46d6-4c56-8a84-4eecf91f708a" type="checkbox" ><label for="df970253-46d6-4c56-8a84-4eecf91f708a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 {color: black;background-color: white;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 pre{padding: 0;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-toggleable {background-color: white;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-estimator:hover {background-color: #d4ebff;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-item {z-index: 1;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-parallel-item:only-child::after {width: 0;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03 div.sk-text-repr-fallback {display: none;}</style><div id="sk-776f0c3e-b3d1-4cc6-b6ff-8e4d984e0d03" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="250cecc5-fd6f-44dc-88fa-7828641929cd" type="checkbox" ><label for="250cecc5-fd6f-44dc-88fa-7828641929cd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c7c40bc-33ee-46d6-9523-0a5b5e9d9ec7" type="checkbox" ><label for="1c7c40bc-33ee-46d6-9523-0a5b5e9d9ec7" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ea63e31-6883-4b79-98af-fc772e4bfb63" type="checkbox" ><label for="0ea63e31-6883-4b79-98af-fc772e4bfb63" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-27e4a116-1423-4046-a404-a2d000f2eced {color: black;background-color: white;}#sk-27e4a116-1423-4046-a404-a2d000f2eced pre{padding: 0;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-toggleable {background-color: white;}#sk-27e4a116-1423-4046-a404-a2d000f2eced label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-27e4a116-1423-4046-a404-a2d000f2eced label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-27e4a116-1423-4046-a404-a2d000f2eced label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-27e4a116-1423-4046-a404-a2d000f2eced input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-27e4a116-1423-4046-a404-a2d000f2eced input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-27e4a116-1423-4046-a404-a2d000f2eced input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-estimator:hover {background-color: #d4ebff;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-item {z-index: 1;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-parallel-item:only-child::after {width: 0;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-27e4a116-1423-4046-a404-a2d000f2eced div.sk-text-repr-fallback {display: none;}</style><div id="sk-27e4a116-1423-4046-a404-a2d000f2eced" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10e6936b-d702-4078-9a3e-2818bcee71e5" type="checkbox" ><label for="10e6936b-d702-4078-9a3e-2818bcee71e5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf6e0b0a-1b01-477c-bfd9-32590ddd9f7f" type="checkbox" ><label for="bf6e0b0a-1b01-477c-bfd9-32590ddd9f7f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16c2bd18-4f48-4b5d-98b7-39a02b691ff9" type="checkbox" ><label for="16c2bd18-4f48-4b5d-98b7-39a02b691ff9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd725966-08f5-4611-99dc-65f2536e0b6f" type="checkbox" ><label for="fd725966-08f5-4611-99dc-65f2536e0b6f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7d5f50e-41ea-4c2f-a3af-377d32c5a078" type="checkbox" ><label for="e7d5f50e-41ea-4c2f-a3af-377d32c5a078" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c57bd3e5-e6f5-41bd-b35d-4767f222a4e7" type="checkbox" ><label for="c57bd3e5-e6f5-41bd-b35d-4767f222a4e7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1838e06-76eb-4764-8127-41c4d31478e2" type="checkbox" ><label for="f1838e06-76eb-4764-8127-41c4d31478e2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f0fcf25-942d-44a4-8fd8-eda711e76620" type="checkbox" ><label for="6f0fcf25-942d-44a4-8fd8-eda711e76620" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f08a1eb-6ef6-4b24-8267-a84407cfb745" type="checkbox" ><label for="9f08a1eb-6ef6-4b24-8267-a84407cfb745" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d {color: black;background-color: white;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d pre{padding: 0;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-toggleable {background-color: white;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-estimator:hover {background-color: #d4ebff;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-item {z-index: 1;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-parallel-item:only-child::after {width: 0;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-909e4c9e-98a4-43d9-87da-0f21a971a93d div.sk-text-repr-fallback {display: none;}</style><div id="sk-909e4c9e-98a4-43d9-87da-0f21a971a93d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b9fac36-b586-455d-a3f3-10dd2df0c563" type="checkbox" ><label for="1b9fac36-b586-455d-a3f3-10dd2df0c563" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f7972a1-fe37-4e61-b0fa-56446cc13653" type="checkbox" ><label for="4f7972a1-fe37-4e61-b0fa-56446cc13653" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3da9dde-793a-42ed-ad58-bf13b1e499ea" type="checkbox" ><label for="c3da9dde-793a-42ed-ad58-bf13b1e499ea" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a4383e6-def5-4f94-a8e7-48d49fdf54af" type="checkbox" ><label for="5a4383e6-def5-4f94-a8e7-48d49fdf54af" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d857dea3-55a7-4186-bac7-79ba427cf9f0" type="checkbox" ><label for="d857dea3-55a7-4186-bac7-79ba427cf9f0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79392e56-3f6d-45d4-bcfd-73917d05125d" type="checkbox" ><label for="79392e56-3f6d-45d4-bcfd-73917d05125d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aed4914c-8281-446a-ad97-2f3f53eb95f0" type="checkbox" ><label for="aed4914c-8281-446a-ad97-2f3f53eb95f0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a8b5caa-c7b6-4d6c-addc-f3fe87b05e12" type="checkbox" ><label for="0a8b5caa-c7b6-4d6c-addc-f3fe87b05e12" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e107e4b-e903-40b4-815e-d174b8b70972" type="checkbox" ><label for="1e107e4b-e903-40b4-815e-d174b8b70972" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
