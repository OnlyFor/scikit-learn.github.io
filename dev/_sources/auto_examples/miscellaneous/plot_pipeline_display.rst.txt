
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b {color: black;background-color: white;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b pre{padding: 0;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-toggleable {background-color: white;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-estimator:hover {background-color: #d4ebff;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-item {z-index: 1;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-parallel-item:only-child::after {width: 0;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b div.sk-text-repr-fallback {display: none;}</style><div id="sk-d04aec99-3d09-4b67-ad97-e60842b9bb1b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48137b22-dd40-46cb-8c61-b3808abe0f13" type="checkbox" ><label for="48137b22-dd40-46cb-8c61-b3808abe0f13" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d750aaf-faf8-4f37-8c69-14ce39ad81bd" type="checkbox" ><label for="9d750aaf-faf8-4f37-8c69-14ce39ad81bd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dc94d11-e5ab-456b-8c8b-21646fc0439a" type="checkbox" ><label for="6dc94d11-e5ab-456b-8c8b-21646fc0439a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ed0859ff-eab4-4074-8742-f02c1941da87 {color: black;background-color: white;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 pre{padding: 0;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-toggleable {background-color: white;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-item {z-index: 1;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-parallel-item:only-child::after {width: 0;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ed0859ff-eab4-4074-8742-f02c1941da87 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ed0859ff-eab4-4074-8742-f02c1941da87" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99c9d86b-86c3-45e9-b8c3-91979c6b7581" type="checkbox" ><label for="99c9d86b-86c3-45e9-b8c3-91979c6b7581" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4961401f-d985-4613-9aa9-c143abbf8833" type="checkbox" ><label for="4961401f-d985-4613-9aa9-c143abbf8833" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88211ddd-b150-404f-8bb3-5c965309e6a8" type="checkbox" ><label for="88211ddd-b150-404f-8bb3-5c965309e6a8" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f52d33b9-e4f6-4b2c-b93c-58e558805b2f" type="checkbox" ><label for="f52d33b9-e4f6-4b2c-b93c-58e558805b2f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 {color: black;background-color: white;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 pre{padding: 0;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-toggleable {background-color: white;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-item {z-index: 1;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-parallel-item:only-child::after {width: 0;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d6e779dd-bcb2-46f6-aeb3-7e791d014d22" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b65c2e5b-ca00-498b-9ee9-99c638ee6530" type="checkbox" ><label for="b65c2e5b-ca00-498b-9ee9-99c638ee6530" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54a5a249-fd2f-4189-b019-af0b2bcddebe" type="checkbox" ><label for="54a5a249-fd2f-4189-b019-af0b2bcddebe" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f55fe99-af35-4ae6-96af-e3f0d0bf7f18" type="checkbox" ><label for="9f55fe99-af35-4ae6-96af-e3f0d0bf7f18" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-43975cf3-102c-4b61-a582-859d261968e9 {color: black;background-color: white;}#sk-43975cf3-102c-4b61-a582-859d261968e9 pre{padding: 0;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-toggleable {background-color: white;}#sk-43975cf3-102c-4b61-a582-859d261968e9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-43975cf3-102c-4b61-a582-859d261968e9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-43975cf3-102c-4b61-a582-859d261968e9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-43975cf3-102c-4b61-a582-859d261968e9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-43975cf3-102c-4b61-a582-859d261968e9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-43975cf3-102c-4b61-a582-859d261968e9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-item {z-index: 1;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-parallel-item:only-child::after {width: 0;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-43975cf3-102c-4b61-a582-859d261968e9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-43975cf3-102c-4b61-a582-859d261968e9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ade36ff8-9e37-4191-a4d8-30e3762ce271" type="checkbox" ><label for="ade36ff8-9e37-4191-a4d8-30e3762ce271" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="edb93583-fa23-4421-9480-6eccf377edd3" type="checkbox" ><label for="edb93583-fa23-4421-9480-6eccf377edd3" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6fee2aa-fc64-40f0-ae85-f719a7057bcb" type="checkbox" ><label for="f6fee2aa-fc64-40f0-ae85-f719a7057bcb" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46a40fef-fd80-4784-a10c-5600b92e0fad" type="checkbox" ><label for="46a40fef-fd80-4784-a10c-5600b92e0fad" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aad0d11d-c641-4c8b-ad8a-d82d6a074265" type="checkbox" ><label for="aad0d11d-c641-4c8b-ad8a-d82d6a074265" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="455dd660-94bc-4db8-b1dd-eaf2d0e8c282" type="checkbox" ><label for="455dd660-94bc-4db8-b1dd-eaf2d0e8c282" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9bc5faa-5886-470d-8a84-cd2949537e90" type="checkbox" ><label for="f9bc5faa-5886-470d-8a84-cd2949537e90" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4589d39-6fc1-4373-823d-36dedf99d571" type="checkbox" ><label for="b4589d39-6fc1-4373-823d-36dedf99d571" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="162a536d-263c-4356-a48c-1b5e5126ea0d" type="checkbox" ><label for="162a536d-263c-4356-a48c-1b5e5126ea0d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 {color: black;background-color: white;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 pre{padding: 0;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-toggleable {background-color: white;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-item {z-index: 1;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-parallel-item:only-child::after {width: 0;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9610b9b6-57ac-4cfe-bfa0-501aa6ef9b31" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccda214a-a425-4dab-be12-3b3e3034ca32" type="checkbox" ><label for="ccda214a-a425-4dab-be12-3b3e3034ca32" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a71f8795-0b84-424f-a889-148267ba73a4" type="checkbox" ><label for="a71f8795-0b84-424f-a889-148267ba73a4" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b27bce7f-8557-4ce8-ae3c-9b7556826d95" type="checkbox" ><label for="b27bce7f-8557-4ce8-ae3c-9b7556826d95" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a683d1b-b7c4-49e5-8299-421fbfeea84c" type="checkbox" ><label for="9a683d1b-b7c4-49e5-8299-421fbfeea84c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94d01dba-9c4a-44c4-b785-056b4be466ed" type="checkbox" ><label for="94d01dba-9c4a-44c4-b785-056b4be466ed" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d848cb7e-b1ac-429f-84df-c84e115fd6eb" type="checkbox" ><label for="d848cb7e-b1ac-429f-84df-c84e115fd6eb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e7c4d59-eb06-42c9-a8b4-366ca53f604b" type="checkbox" ><label for="0e7c4d59-eb06-42c9-a8b4-366ca53f604b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="181a8331-8e50-43a2-be97-0619ffb9b0bb" type="checkbox" ><label for="181a8331-8e50-43a2-be97-0619ffb9b0bb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f64dc1e5-fa1a-4203-bff5-f68d0cdffeae" type="checkbox" ><label for="f64dc1e5-fa1a-4203-bff5-f68d0cdffeae" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
