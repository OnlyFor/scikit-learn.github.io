
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 {color: black;background-color: white;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 pre{padding: 0;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-toggleable {background-color: white;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-item {z-index: 1;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-parallel-item:only-child::after {width: 0;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-025f42bd-3e68-4777-95a7-7ebdf038b5f0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1475b6d-c871-4dbc-93c1-d9c89aa714e1" type="checkbox" ><label for="c1475b6d-c871-4dbc-93c1-d9c89aa714e1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b37547e-9706-4dc8-b488-6b3962e45990" type="checkbox" ><label for="1b37547e-9706-4dc8-b488-6b3962e45990" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27f26ca4-c024-45a3-b790-d2373b4cb43b" type="checkbox" ><label for="27f26ca4-c024-45a3-b790-d2373b4cb43b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 {color: black;background-color: white;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 pre{padding: 0;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-toggleable {background-color: white;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-item {z-index: 1;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-parallel-item:only-child::after {width: 0;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d8cfa5ba-20a3-44f9-89a8-afd95f9f5bd1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66832e76-3cb1-42c7-ad7b-77a94e766a47" type="checkbox" ><label for="66832e76-3cb1-42c7-ad7b-77a94e766a47" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1dfefc4-b4c7-4bad-9d59-4f0e1754317d" type="checkbox" ><label for="b1dfefc4-b4c7-4bad-9d59-4f0e1754317d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6b40688-55da-4770-acc0-0843370eaadd" type="checkbox" ><label for="c6b40688-55da-4770-acc0-0843370eaadd" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64d8dc59-58b5-4500-82fe-081013b4fc38" type="checkbox" ><label for="64d8dc59-58b5-4500-82fe-081013b4fc38" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-229099c6-5338-4098-923e-197dc253ee83 {color: black;background-color: white;}#sk-229099c6-5338-4098-923e-197dc253ee83 pre{padding: 0;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-toggleable {background-color: white;}#sk-229099c6-5338-4098-923e-197dc253ee83 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-229099c6-5338-4098-923e-197dc253ee83 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-229099c6-5338-4098-923e-197dc253ee83 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-229099c6-5338-4098-923e-197dc253ee83 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-229099c6-5338-4098-923e-197dc253ee83 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-229099c6-5338-4098-923e-197dc253ee83 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-estimator:hover {background-color: #d4ebff;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-item {z-index: 1;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-parallel-item:only-child::after {width: 0;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-229099c6-5338-4098-923e-197dc253ee83 div.sk-text-repr-fallback {display: none;}</style><div id="sk-229099c6-5338-4098-923e-197dc253ee83" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="415249a1-41e4-4d39-83b9-7fe12b2151a2" type="checkbox" ><label for="415249a1-41e4-4d39-83b9-7fe12b2151a2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e543d8f7-d7dd-4fdb-8377-5f9f4e43ef81" type="checkbox" ><label for="e543d8f7-d7dd-4fdb-8377-5f9f4e43ef81" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71a3d19d-2a38-4787-844e-d9f829ef4fae" type="checkbox" ><label for="71a3d19d-2a38-4787-844e-d9f829ef4fae" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-16371110-03cd-429c-a165-887ee39b0654 {color: black;background-color: white;}#sk-16371110-03cd-429c-a165-887ee39b0654 pre{padding: 0;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-toggleable {background-color: white;}#sk-16371110-03cd-429c-a165-887ee39b0654 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-16371110-03cd-429c-a165-887ee39b0654 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-16371110-03cd-429c-a165-887ee39b0654 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-16371110-03cd-429c-a165-887ee39b0654 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-16371110-03cd-429c-a165-887ee39b0654 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16371110-03cd-429c-a165-887ee39b0654 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-estimator:hover {background-color: #d4ebff;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-item {z-index: 1;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-parallel-item:only-child::after {width: 0;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-16371110-03cd-429c-a165-887ee39b0654 div.sk-text-repr-fallback {display: none;}</style><div id="sk-16371110-03cd-429c-a165-887ee39b0654" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c50adb1-98b2-4038-84b4-590b60c03697" type="checkbox" ><label for="6c50adb1-98b2-4038-84b4-590b60c03697" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1446eee-4b8b-47f3-8b11-c7c4a950c307" type="checkbox" ><label for="d1446eee-4b8b-47f3-8b11-c7c4a950c307" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33ee73ce-a7ff-4165-9382-b6e741a23923" type="checkbox" ><label for="33ee73ce-a7ff-4165-9382-b6e741a23923" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e757c00f-65b1-468b-9cd1-7ee86c637e29" type="checkbox" ><label for="e757c00f-65b1-468b-9cd1-7ee86c637e29" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1de15c8-6e8b-4cbd-b579-e5e6cb19fb5c" type="checkbox" ><label for="b1de15c8-6e8b-4cbd-b579-e5e6cb19fb5c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="791fa350-4224-4c20-851f-932ea9158d9f" type="checkbox" ><label for="791fa350-4224-4c20-851f-932ea9158d9f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0801064-1476-42cf-bead-54ff07602bf6" type="checkbox" ><label for="c0801064-1476-42cf-bead-54ff07602bf6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df917f54-32ae-4e53-a8f3-904f9ad0e5cc" type="checkbox" ><label for="df917f54-32ae-4e53-a8f3-904f9ad0e5cc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c589f675-c602-42ff-8d67-120bdf181941" type="checkbox" ><label for="c589f675-c602-42ff-8d67-120bdf181941" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d {color: black;background-color: white;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d pre{padding: 0;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-toggleable {background-color: white;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-estimator:hover {background-color: #d4ebff;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-item {z-index: 1;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-parallel-item:only-child::after {width: 0;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d div.sk-text-repr-fallback {display: none;}</style><div id="sk-adc1cf6c-5d4f-41d9-861c-d97c1787205d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98d2d5a7-e55c-4d18-af74-6ca37bdf79e6" type="checkbox" ><label for="98d2d5a7-e55c-4d18-af74-6ca37bdf79e6" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1198c1f-eb23-416f-854d-db52975464fd" type="checkbox" ><label for="d1198c1f-eb23-416f-854d-db52975464fd" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0641cca5-a8ca-434e-b5e7-3b0730e17a9c" type="checkbox" ><label for="0641cca5-a8ca-434e-b5e7-3b0730e17a9c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e5e8a59-8aeb-4ed5-aaac-30b69ac63fc9" type="checkbox" ><label for="8e5e8a59-8aeb-4ed5-aaac-30b69ac63fc9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="add4cc9b-b79c-459e-98cd-33f51ea6ff2c" type="checkbox" ><label for="add4cc9b-b79c-459e-98cd-33f51ea6ff2c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be348c68-9923-4db6-a815-dde2d790aca5" type="checkbox" ><label for="be348c68-9923-4db6-a815-dde2d790aca5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92262d78-b477-4997-8e1a-74e1d4312612" type="checkbox" ><label for="92262d78-b477-4997-8e1a-74e1d4312612" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2e8b651-ef4f-4002-b124-950e5efc06e5" type="checkbox" ><label for="c2e8b651-ef4f-4002-b124-950e5efc06e5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7494420-6ef7-4592-a25a-d660414aec36" type="checkbox" ><label for="a7494420-6ef7-4592-a25a-d660414aec36" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
