
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b953846a-6851-4e94-ab87-aa12aaa90796 {color: black;background-color: white;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 pre{padding: 0;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-toggleable {background-color: white;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-item {z-index: 1;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-parallel-item:only-child::after {width: 0;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-container {display: inline-block;position: relative;}#sk-b953846a-6851-4e94-ab87-aa12aaa90796 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b953846a-6851-4e94-ab87-aa12aaa90796" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bc32228-adca-435b-9de1-22098de82d08" type="checkbox" ><label class="sk-toggleable__label" for="3bc32228-adca-435b-9de1-22098de82d08">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="275df4d9-430e-4fe4-aba3-4262b92121f6" type="checkbox" ><label class="sk-toggleable__label" for="275df4d9-430e-4fe4-aba3-4262b92121f6">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="163a35c3-2d4d-4a49-94c7-de429a063bce" type="checkbox" ><label class="sk-toggleable__label" for="163a35c3-2d4d-4a49-94c7-de429a063bce">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d1836422-c44b-4ad2-8dfc-29965e52951f {color: black;background-color: white;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f pre{padding: 0;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-toggleable {background-color: white;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-estimator:hover {background-color: #d4ebff;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-item {z-index: 1;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-parallel-item:only-child::after {width: 0;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-container {display: inline-block;position: relative;}#sk-d1836422-c44b-4ad2-8dfc-29965e52951f div.sk-text-repr-fallback {display: none;}</style><div id="sk-d1836422-c44b-4ad2-8dfc-29965e52951f" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d71eb49a-ae95-4c49-9f1a-0406c02d1f66" type="checkbox" ><label class="sk-toggleable__label" for="d71eb49a-ae95-4c49-9f1a-0406c02d1f66">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b327e3ed-6e1f-4ed7-a0c0-dbd79a3c4e2e" type="checkbox" ><label class="sk-toggleable__label" for="b327e3ed-6e1f-4ed7-a0c0-dbd79a3c4e2e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3abc52f-b71c-45f8-8b2f-a9efddd7e2e2" type="checkbox" ><label class="sk-toggleable__label" for="f3abc52f-b71c-45f8-8b2f-a9efddd7e2e2">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e531727-df63-44ee-a4a8-f460cece1c20" type="checkbox" ><label class="sk-toggleable__label" for="1e531727-df63-44ee-a4a8-f460cece1c20">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 {color: black;background-color: white;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 pre{padding: 0;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-toggleable {background-color: white;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-estimator:hover {background-color: #d4ebff;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-item {z-index: 1;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-parallel-item:only-child::after {width: 0;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-container {display: inline-block;position: relative;}#sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833 div.sk-text-repr-fallback {display: none;}</style><div id="sk-de8a6cc5-a433-45d7-8cc5-222e9eaa0833" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96827543-96db-4f95-9210-2b54da236743" type="checkbox" ><label class="sk-toggleable__label" for="96827543-96db-4f95-9210-2b54da236743">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5ebe954-c15c-4665-a3d5-ce149856013b" type="checkbox" ><label class="sk-toggleable__label" for="b5ebe954-c15c-4665-a3d5-ce149856013b">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ac1f3c2-58d0-4dd8-96df-8e1c45ec7a0d" type="checkbox" ><label class="sk-toggleable__label" for="0ac1f3c2-58d0-4dd8-96df-8e1c45ec7a0d">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e {color: black;background-color: white;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e pre{padding: 0;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-toggleable {background-color: white;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-estimator:hover {background-color: #d4ebff;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-item {z-index: 1;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-parallel-item:only-child::after {width: 0;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-container {display: inline-block;position: relative;}#sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e div.sk-text-repr-fallback {display: none;}</style><div id="sk-dfaa7c12-9046-4628-bfa5-f04d7190a94e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8778a12-a7c7-4d92-9b6c-e0f15dd144be" type="checkbox" ><label class="sk-toggleable__label" for="c8778a12-a7c7-4d92-9b6c-e0f15dd144be">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60fe236b-1415-4f91-a5d4-5ebe0bcc64ed" type="checkbox" ><label class="sk-toggleable__label" for="60fe236b-1415-4f91-a5d4-5ebe0bcc64ed">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="32a0989a-8292-4a65-8a10-64137890872f" type="checkbox" ><label class="sk-toggleable__label" for="32a0989a-8292-4a65-8a10-64137890872f">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6caf381f-38ee-4e82-93c8-e8eb73c0fa58" type="checkbox" ><label class="sk-toggleable__label" for="6caf381f-38ee-4e82-93c8-e8eb73c0fa58">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5b6f611-4d6f-449b-8d10-bfb33dbb6103" type="checkbox" ><label class="sk-toggleable__label" for="f5b6f611-4d6f-449b-8d10-bfb33dbb6103">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88b824e3-1da8-4569-88c1-052d435216f6" type="checkbox" ><label class="sk-toggleable__label" for="88b824e3-1da8-4569-88c1-052d435216f6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a42adb5d-90be-45d2-bdf1-083ab50af519" type="checkbox" ><label class="sk-toggleable__label" for="a42adb5d-90be-45d2-bdf1-083ab50af519">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a297d96-9b32-4ade-8e30-2bddb325a756" type="checkbox" ><label class="sk-toggleable__label" for="4a297d96-9b32-4ade-8e30-2bddb325a756">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8270d23-7be9-41e9-aa09-c861962bd547" type="checkbox" ><label class="sk-toggleable__label" for="b8270d23-7be9-41e9-aa09-c861962bd547">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e {color: black;background-color: white;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e pre{padding: 0;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-toggleable {background-color: white;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-estimator:hover {background-color: #d4ebff;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-item {z-index: 1;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-parallel-item:only-child::after {width: 0;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-container {display: inline-block;position: relative;}#sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e div.sk-text-repr-fallback {display: none;}</style><div id="sk-5fd15f84-5559-488d-ad89-d7ddc2036c6e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fa33d60-3392-4566-abca-0b67bbc2f88d" type="checkbox" ><label class="sk-toggleable__label" for="0fa33d60-3392-4566-abca-0b67bbc2f88d">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce580983-b5ed-465e-bfba-aee2da975033" type="checkbox" ><label class="sk-toggleable__label" for="ce580983-b5ed-465e-bfba-aee2da975033">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8434755-6f4a-440b-9ce1-0f376171828f" type="checkbox" ><label class="sk-toggleable__label" for="e8434755-6f4a-440b-9ce1-0f376171828f">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1940e261-6135-46ba-8253-a718007383fb" type="checkbox" ><label class="sk-toggleable__label" for="1940e261-6135-46ba-8253-a718007383fb">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="090df764-3759-4cc3-afa3-851ea15117f1" type="checkbox" ><label class="sk-toggleable__label" for="090df764-3759-4cc3-afa3-851ea15117f1">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20843b43-d79f-4084-9c20-f88cfbfd1d50" type="checkbox" ><label class="sk-toggleable__label" for="20843b43-d79f-4084-9c20-f88cfbfd1d50">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9abc87e9-8d30-42d8-b21c-6db57a75010f" type="checkbox" ><label class="sk-toggleable__label" for="9abc87e9-8d30-42d8-b21c-6db57a75010f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c340079a-5685-48f8-812b-1f979b6fc772" type="checkbox" ><label class="sk-toggleable__label" for="c340079a-5685-48f8-812b-1f979b6fc772">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84cf2321-964d-4381-904a-1670eedba3b6" type="checkbox" ><label class="sk-toggleable__label" for="84cf2321-964d-4381-904a-1670eedba3b6">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
