
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 {color: black;background-color: white;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 pre{padding: 0;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-toggleable {background-color: white;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-item {z-index: 1;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-parallel-item:only-child::after {width: 0;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c4490950-939a-4a07-a1a9-6aa635b1eab2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c4490950-939a-4a07-a1a9-6aa635b1eab2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="675734f8-7452-451d-83eb-435c767ba567" type="checkbox" ><label for="675734f8-7452-451d-83eb-435c767ba567" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4592d67b-179b-485c-8e49-7c265d1ed2dc" type="checkbox" ><label for="4592d67b-179b-485c-8e49-7c265d1ed2dc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf03156a-5b86-4c16-898e-c47e526d13aa" type="checkbox" ><label for="bf03156a-5b86-4c16-898e-c47e526d13aa" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 {color: black;background-color: white;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 pre{padding: 0;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-toggleable {background-color: white;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-estimator:hover {background-color: #d4ebff;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-item {z-index: 1;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-parallel-item:only-child::after {width: 0;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-460787e7-16f5-4e18-a7e7-b73e8fe83922 div.sk-text-repr-fallback {display: none;}</style><div id="sk-460787e7-16f5-4e18-a7e7-b73e8fe83922" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a726536-f5a6-4bf7-bbb9-b90dc3fbabf0" type="checkbox" ><label for="8a726536-f5a6-4bf7-bbb9-b90dc3fbabf0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01a83d10-d01f-491f-9fdf-710d66f09906" type="checkbox" ><label for="01a83d10-d01f-491f-9fdf-710d66f09906" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2650b79e-813a-4c80-9a04-0a06e37d00f2" type="checkbox" ><label for="2650b79e-813a-4c80-9a04-0a06e37d00f2" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02d87294-2ff4-4d66-9271-d0cb962397c7" type="checkbox" ><label for="02d87294-2ff4-4d66-9271-d0cb962397c7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a {color: black;background-color: white;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a pre{padding: 0;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-toggleable {background-color: white;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-estimator:hover {background-color: #d4ebff;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-item {z-index: 1;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-parallel-item:only-child::after {width: 0;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a div.sk-text-repr-fallback {display: none;}</style><div id="sk-dbe4b5f3-0147-40ee-a837-95dab4a79f4a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="609d9f6e-f0d9-4757-a0ca-559ad3a01da6" type="checkbox" ><label for="609d9f6e-f0d9-4757-a0ca-559ad3a01da6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf90a76f-d67b-407c-96f6-9865ac2093be" type="checkbox" ><label for="cf90a76f-d67b-407c-96f6-9865ac2093be" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="492d5cfb-fa4e-4f65-a102-319a427d0ec8" type="checkbox" ><label for="492d5cfb-fa4e-4f65-a102-319a427d0ec8" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e283257a-375a-4a52-98ec-dbdd8101368e {color: black;background-color: white;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e pre{padding: 0;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-toggleable {background-color: white;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-estimator:hover {background-color: #d4ebff;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-item {z-index: 1;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-parallel-item:only-child::after {width: 0;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e283257a-375a-4a52-98ec-dbdd8101368e div.sk-text-repr-fallback {display: none;}</style><div id="sk-e283257a-375a-4a52-98ec-dbdd8101368e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="021edd99-302e-4d07-8746-b33500b88ae1" type="checkbox" ><label for="021edd99-302e-4d07-8746-b33500b88ae1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2095b05e-ac4a-4fb2-8405-f4b4678e81e9" type="checkbox" ><label for="2095b05e-ac4a-4fb2-8405-f4b4678e81e9" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c2a21b4-353f-47f6-9d0b-14ae9f9a2ea8" type="checkbox" ><label for="9c2a21b4-353f-47f6-9d0b-14ae9f9a2ea8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e6c22f7-1155-49e0-b576-a7482ba77d97" type="checkbox" ><label for="7e6c22f7-1155-49e0-b576-a7482ba77d97" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a177ece3-449a-4dce-8e7c-5e15b2954a66" type="checkbox" ><label for="a177ece3-449a-4dce-8e7c-5e15b2954a66" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d44c0b5e-4964-4bfc-b13f-a2d7098ebe93" type="checkbox" ><label for="d44c0b5e-4964-4bfc-b13f-a2d7098ebe93" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae0f8079-83db-4765-a241-e92b3e930c94" type="checkbox" ><label for="ae0f8079-83db-4765-a241-e92b3e930c94" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2340a4dc-11cf-4b61-8c1f-bda9fe91bfa0" type="checkbox" ><label for="2340a4dc-11cf-4b61-8c1f-bda9fe91bfa0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49d2efb0-e13d-4fb3-8738-b8c0a73798ab" type="checkbox" ><label for="49d2efb0-e13d-4fb3-8738-b8c0a73798ab" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 {color: black;background-color: white;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 pre{padding: 0;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-toggleable {background-color: white;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-item {z-index: 1;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-parallel-item:only-child::after {width: 0;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a92539e1-9f32-4362-b1f0-3b253bf4bbd2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b787487-01f1-4ded-badb-c3e41db02f66" type="checkbox" ><label for="6b787487-01f1-4ded-badb-c3e41db02f66" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9f20d79-a60f-4da3-81cd-b5b7a4c39039" type="checkbox" ><label for="b9f20d79-a60f-4da3-81cd-b5b7a4c39039" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4c84700-1e53-4a6a-beb7-5aef3b2f43ca" type="checkbox" ><label for="f4c84700-1e53-4a6a-beb7-5aef3b2f43ca" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de5795f8-67b3-44fe-98c8-b250eb6b4095" type="checkbox" ><label for="de5795f8-67b3-44fe-98c8-b250eb6b4095" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b59db972-c68c-49f4-9e26-eb044c3ae867" type="checkbox" ><label for="b59db972-c68c-49f4-9e26-eb044c3ae867" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2cfdbfe-72c9-4646-b612-79029e41e94e" type="checkbox" ><label for="b2cfdbfe-72c9-4646-b612-79029e41e94e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64315b40-6cad-43d7-bac6-8477d15b20a9" type="checkbox" ><label for="64315b40-6cad-43d7-bac6-8477d15b20a9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d758f63f-7564-4841-a68f-1d3854eb3540" type="checkbox" ><label for="d758f63f-7564-4841-a68f-1d3854eb3540" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81a98dec-a5a5-47aa-8a06-4906cbb72a62" type="checkbox" ><label for="81a98dec-a5a5-47aa-8a06-4906cbb72a62" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
