
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 {color: black;background-color: white;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 pre{padding: 0;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-toggleable {background-color: white;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-item {z-index: 1;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-parallel-item:only-child::after {width: 0;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-c1f35d10-d9ef-4e0e-ba8d-299b8e2dd506" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ce14017-10ff-4f0e-8650-634e8fa5dcfc" type="checkbox" ><label class="sk-toggleable__label" for="5ce14017-10ff-4f0e-8650-634e8fa5dcfc">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ff93a7b-b10d-45e6-b365-a4f7b3fd63d7" type="checkbox" ><label class="sk-toggleable__label" for="7ff93a7b-b10d-45e6-b365-a4f7b3fd63d7">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="146e4e4f-6d5c-418e-91af-b9b76afa470e" type="checkbox" ><label class="sk-toggleable__label" for="146e4e4f-6d5c-418e-91af-b9b76afa470e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-59a0704c-d76b-489f-95d3-8e33304a605a {color: black;background-color: white;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a pre{padding: 0;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-toggleable {background-color: white;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-estimator:hover {background-color: #d4ebff;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-item {z-index: 1;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-parallel-item:only-child::after {width: 0;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-59a0704c-d76b-489f-95d3-8e33304a605a div.sk-container {display: inline-block;position: relative;}</style><div id="sk-59a0704c-d76b-489f-95d3-8e33304a605a" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab05e559-6621-456a-8477-11ecf4478a34" type="checkbox" ><label class="sk-toggleable__label" for="ab05e559-6621-456a-8477-11ecf4478a34">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6258d7c-3f09-4a93-83fe-e5445a69bd29" type="checkbox" ><label class="sk-toggleable__label" for="d6258d7c-3f09-4a93-83fe-e5445a69bd29">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11b7d3f1-6751-452f-9492-ec6cbf4d1009" type="checkbox" ><label class="sk-toggleable__label" for="11b7d3f1-6751-452f-9492-ec6cbf4d1009">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e94f7d80-8b83-4f9f-89d3-065278863c19" type="checkbox" ><label class="sk-toggleable__label" for="e94f7d80-8b83-4f9f-89d3-065278863c19">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-de09f6cc-a065-41c6-87a0-5612d858f428 {color: black;background-color: white;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 pre{padding: 0;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-toggleable {background-color: white;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-estimator:hover {background-color: #d4ebff;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-item {z-index: 1;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-parallel-item:only-child::after {width: 0;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-de09f6cc-a065-41c6-87a0-5612d858f428 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-de09f6cc-a065-41c6-87a0-5612d858f428" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92bdd10a-0354-4810-a0bd-2a26f65e2e63" type="checkbox" ><label class="sk-toggleable__label" for="92bdd10a-0354-4810-a0bd-2a26f65e2e63">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c351a5da-a908-42d9-ad02-90abf50f26f0" type="checkbox" ><label class="sk-toggleable__label" for="c351a5da-a908-42d9-ad02-90abf50f26f0">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb12a2ca-7a8f-4a9c-9c4d-82e3a1d86762" type="checkbox" ><label class="sk-toggleable__label" for="fb12a2ca-7a8f-4a9c-9c4d-82e3a1d86762">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb {color: black;background-color: white;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb pre{padding: 0;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-toggleable {background-color: white;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-estimator:hover {background-color: #d4ebff;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-item {z-index: 1;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-parallel-item:only-child::after {width: 0;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb div.sk-container {display: inline-block;position: relative;}</style><div id="sk-87a83c4d-6b47-4ea2-a28c-f9cccf90e3cb" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e5c701f-7fc7-4e38-b2c0-9ad01ce1b524" type="checkbox" ><label class="sk-toggleable__label" for="1e5c701f-7fc7-4e38-b2c0-9ad01ce1b524">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7694f0bb-be70-4937-bc94-1ba0836f86b0" type="checkbox" ><label class="sk-toggleable__label" for="7694f0bb-be70-4937-bc94-1ba0836f86b0">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0f45ae2-78d1-41ba-88d9-51bff4c693bc" type="checkbox" ><label class="sk-toggleable__label" for="d0f45ae2-78d1-41ba-88d9-51bff4c693bc">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85631662-3964-4127-a010-35344be7b2f7" type="checkbox" ><label class="sk-toggleable__label" for="85631662-3964-4127-a010-35344be7b2f7">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba6162d7-5b47-461d-a1a4-7b1451272b2a" type="checkbox" ><label class="sk-toggleable__label" for="ba6162d7-5b47-461d-a1a4-7b1451272b2a">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5443e92-6efa-49e7-952a-66dc4495806d" type="checkbox" ><label class="sk-toggleable__label" for="c5443e92-6efa-49e7-952a-66dc4495806d">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab3a08c0-8826-4ec3-8752-70bd8fc49406" type="checkbox" ><label class="sk-toggleable__label" for="ab3a08c0-8826-4ec3-8752-70bd8fc49406">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73af0cd2-f28d-45c3-b6ad-8f46d6563e53" type="checkbox" ><label class="sk-toggleable__label" for="73af0cd2-f28d-45c3-b6ad-8f46d6563e53">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="45f5af43-588c-4327-a4ee-2374b32cc008" type="checkbox" ><label class="sk-toggleable__label" for="45f5af43-588c-4327-a4ee-2374b32cc008">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6da198b3-1aec-4194-889e-f841a2525b72 {color: black;background-color: white;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 pre{padding: 0;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-toggleable {background-color: white;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-item {z-index: 1;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-parallel-item:only-child::after {width: 0;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6da198b3-1aec-4194-889e-f841a2525b72 div.sk-container {display: inline-block;position: relative;}</style><div id="sk-6da198b3-1aec-4194-889e-f841a2525b72" class"sk-top-container"><div class="sk-container"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e761b192-8e8b-4498-8f15-108b9af2693a" type="checkbox" ><label class="sk-toggleable__label" for="e761b192-8e8b-4498-8f15-108b9af2693a">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55a47e6a-ac5d-4bec-aa80-76d73e0685c5" type="checkbox" ><label class="sk-toggleable__label" for="55a47e6a-ac5d-4bec-aa80-76d73e0685c5">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a5dfa27-14a4-44a6-bc4c-3f24d0dd895f" type="checkbox" ><label class="sk-toggleable__label" for="4a5dfa27-14a4-44a6-bc4c-3f24d0dd895f">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e6f37ba-7868-4453-8de2-54c5ea8b4135" type="checkbox" ><label class="sk-toggleable__label" for="5e6f37ba-7868-4453-8de2-54c5ea8b4135">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ed7cdca-a2e8-44db-b4fd-4266d417e536" type="checkbox" ><label class="sk-toggleable__label" for="0ed7cdca-a2e8-44db-b4fd-4266d417e536">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="39a6a547-a8c3-4e2f-8512-cf2d26a7d479" type="checkbox" ><label class="sk-toggleable__label" for="39a6a547-a8c3-4e2f-8512-cf2d26a7d479">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1f46356-7ebb-4d1e-80b1-cdbca65b4239" type="checkbox" ><label class="sk-toggleable__label" for="e1f46356-7ebb-4d1e-80b1-cdbca65b4239">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3a62322-61d2-4102-8976-3862034920b5" type="checkbox" ><label class="sk-toggleable__label" for="b3a62322-61d2-4102-8976-3862034920b5">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c97e2265-0825-4a69-8977-67dc98d42497" type="checkbox" ><label class="sk-toggleable__label" for="c97e2265-0825-4a69-8977-67dc98d42497">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.087 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
