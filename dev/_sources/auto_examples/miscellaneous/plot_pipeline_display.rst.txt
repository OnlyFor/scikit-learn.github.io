
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ff62cee8-aa80-4b59-bb88-60007d011263 {color: black;background-color: white;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 pre{padding: 0;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-toggleable {background-color: white;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-item {z-index: 1;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-parallel-item:only-child::after {width: 0;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ff62cee8-aa80-4b59-bb88-60007d011263 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ff62cee8-aa80-4b59-bb88-60007d011263" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e23158c-f0ee-4c3d-a1f7-11901412636c" type="checkbox" ><label for="2e23158c-f0ee-4c3d-a1f7-11901412636c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="349faa5f-67f7-48dd-851f-77aa17311174" type="checkbox" ><label for="349faa5f-67f7-48dd-851f-77aa17311174" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f0f010d-708c-4cd6-b60f-c1b5b1ed1253" type="checkbox" ><label for="4f0f010d-708c-4cd6-b60f-c1b5b1ed1253" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 {color: black;background-color: white;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 pre{padding: 0;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-toggleable {background-color: white;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-item {z-index: 1;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-parallel-item:only-child::after {width: 0;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8edb42e2-5288-47bc-ac53-24ceccce0ef5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96e4593d-49ce-423d-a93c-bc7aee65a3c1" type="checkbox" ><label for="96e4593d-49ce-423d-a93c-bc7aee65a3c1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9a1662f-a382-4552-a024-8eb3cfe0eb65" type="checkbox" ><label for="f9a1662f-a382-4552-a024-8eb3cfe0eb65" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a73e5ba1-dee4-4a2a-8da5-7611b12df9f1" type="checkbox" ><label for="a73e5ba1-dee4-4a2a-8da5-7611b12df9f1" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90916397-cfde-4b47-9d3c-348b76e8775f" type="checkbox" ><label for="90916397-cfde-4b47-9d3c-348b76e8775f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c {color: black;background-color: white;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c pre{padding: 0;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-toggleable {background-color: white;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-estimator:hover {background-color: #d4ebff;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-item {z-index: 1;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-parallel-item:only-child::after {width: 0;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c div.sk-text-repr-fallback {display: none;}</style><div id="sk-e735ee28-c414-43d4-9c1d-8bcd32ea398c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82048874-8650-4ff8-9915-28b7df02e61e" type="checkbox" ><label for="82048874-8650-4ff8-9915-28b7df02e61e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a04c880-2d4b-47ef-a430-af4265130da0" type="checkbox" ><label for="2a04c880-2d4b-47ef-a430-af4265130da0" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6fdd5e4-f27a-4a18-b749-2aea95f7275a" type="checkbox" ><label for="d6fdd5e4-f27a-4a18-b749-2aea95f7275a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-84446021-aa17-4f7c-8128-497e13d873a2 {color: black;background-color: white;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 pre{padding: 0;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-toggleable {background-color: white;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-item {z-index: 1;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-parallel-item:only-child::after {width: 0;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-84446021-aa17-4f7c-8128-497e13d873a2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-84446021-aa17-4f7c-8128-497e13d873a2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3af1b16a-9244-4e01-a2f4-c8b3ae0e7e0b" type="checkbox" ><label for="3af1b16a-9244-4e01-a2f4-c8b3ae0e7e0b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fca28cb-2aba-4045-a1ab-e70f8922424d" type="checkbox" ><label for="3fca28cb-2aba-4045-a1ab-e70f8922424d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68c611ba-c98c-44ae-b7d1-44fabbfadc65" type="checkbox" ><label for="68c611ba-c98c-44ae-b7d1-44fabbfadc65" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa5dbc80-b27b-4592-be3b-ebef3252fec8" type="checkbox" ><label for="fa5dbc80-b27b-4592-be3b-ebef3252fec8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c12bfa16-aa4a-4258-9dba-b9ac312a265d" type="checkbox" ><label for="c12bfa16-aa4a-4258-9dba-b9ac312a265d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e08b460d-de12-4f49-8b2f-449e8d8ad1a9" type="checkbox" ><label for="e08b460d-de12-4f49-8b2f-449e8d8ad1a9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e0033ae-ea3f-4f69-b8d7-e961043d6111" type="checkbox" ><label for="6e0033ae-ea3f-4f69-b8d7-e961043d6111" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="731c5062-c879-40e2-a032-2e5f7c146dea" type="checkbox" ><label for="731c5062-c879-40e2-a032-2e5f7c146dea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0c2a25a-140d-4552-a52e-a15ea6f53496" type="checkbox" ><label for="b0c2a25a-140d-4552-a52e-a15ea6f53496" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c {color: black;background-color: white;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c pre{padding: 0;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-toggleable {background-color: white;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-estimator:hover {background-color: #d4ebff;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-item {z-index: 1;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-parallel-item:only-child::after {width: 0;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c div.sk-text-repr-fallback {display: none;}</style><div id="sk-72b509ef-aeee-431d-89c3-6a13d75fbd5c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab5863f9-634a-4bb5-89f3-9a1332ae5329" type="checkbox" ><label for="ab5863f9-634a-4bb5-89f3-9a1332ae5329" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ecf969c-7bab-46d2-b627-8ad5be0cbd72" type="checkbox" ><label for="2ecf969c-7bab-46d2-b627-8ad5be0cbd72" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="143fa3e5-2e60-4025-9bcd-4797a59d708d" type="checkbox" ><label for="143fa3e5-2e60-4025-9bcd-4797a59d708d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02d8458d-a0ed-4789-9093-146ce2a78916" type="checkbox" ><label for="02d8458d-a0ed-4789-9093-146ce2a78916" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04085849-1235-45f4-ab7d-5cd610abf36d" type="checkbox" ><label for="04085849-1235-45f4-ab7d-5cd610abf36d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc7a27f1-7a9a-4dbb-9038-b19a71882d7f" type="checkbox" ><label for="dc7a27f1-7a9a-4dbb-9038-b19a71882d7f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4288d610-47da-4a9b-a2cc-83547d575864" type="checkbox" ><label for="4288d610-47da-4a9b-a2cc-83547d575864" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad037e00-7e51-4d1a-815c-d150fecb604e" type="checkbox" ><label for="ad037e00-7e51-4d1a-815c-d150fecb604e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2276be65-fe68-4716-afb4-52f243e9295f" type="checkbox" ><label for="2276be65-fe68-4716-afb4-52f243e9295f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
