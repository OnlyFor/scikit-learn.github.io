
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6d996f0d-0192-4401-9193-ee3a16ec881f {color: black;background-color: white;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f pre{padding: 0;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-toggleable {background-color: white;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-estimator:hover {background-color: #d4ebff;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-item {z-index: 1;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-parallel-item:only-child::after {width: 0;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6d996f0d-0192-4401-9193-ee3a16ec881f div.sk-text-repr-fallback {display: none;}</style><div id="sk-6d996f0d-0192-4401-9193-ee3a16ec881f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efc14b4a-5874-490b-8f93-683d700fc10c" type="checkbox" ><label for="efc14b4a-5874-490b-8f93-683d700fc10c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="675eac5c-0886-49eb-89ae-12dbabbc50d7" type="checkbox" ><label for="675eac5c-0886-49eb-89ae-12dbabbc50d7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a77cba01-79ed-4aaf-b52b-90c278cf2fa8" type="checkbox" ><label for="a77cba01-79ed-4aaf-b52b-90c278cf2fa8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8e769381-7eb4-453f-bd4d-0a9105194996 {color: black;background-color: white;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 pre{padding: 0;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-toggleable {background-color: white;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-item {z-index: 1;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-parallel-item:only-child::after {width: 0;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8e769381-7eb4-453f-bd4d-0a9105194996 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8e769381-7eb4-453f-bd4d-0a9105194996" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f8385f9-497b-4f58-b857-95eb2ef820d5" type="checkbox" ><label for="8f8385f9-497b-4f58-b857-95eb2ef820d5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02029422-3b7c-49e0-9b65-db2f038a16a6" type="checkbox" ><label for="02029422-3b7c-49e0-9b65-db2f038a16a6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c5f33b5-da29-4868-8d71-bea63f52cf66" type="checkbox" ><label for="0c5f33b5-da29-4868-8d71-bea63f52cf66" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="778900ae-fd2f-42f3-a9c8-5536abc3e52e" type="checkbox" ><label for="778900ae-fd2f-42f3-a9c8-5536abc3e52e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 {color: black;background-color: white;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 pre{padding: 0;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-toggleable {background-color: white;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-item {z-index: 1;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-parallel-item:only-child::after {width: 0;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2dbff260-e24a-4e33-b86e-54b6ad21e6f7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="929cb2e3-fe2b-4b58-9da3-bd7459fac47a" type="checkbox" ><label for="929cb2e3-fe2b-4b58-9da3-bd7459fac47a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7a61c6b5-dcc2-49de-86ba-e7adf70d13c3" type="checkbox" ><label for="7a61c6b5-dcc2-49de-86ba-e7adf70d13c3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16da602f-2c4d-4578-a7be-e8595181c0fd" type="checkbox" ><label for="16da602f-2c4d-4578-a7be-e8595181c0fd" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-92b803db-5bf6-44af-851b-8bfacc448402 {color: black;background-color: white;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 pre{padding: 0;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-toggleable {background-color: white;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-estimator:hover {background-color: #d4ebff;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-item {z-index: 1;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-parallel-item:only-child::after {width: 0;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-92b803db-5bf6-44af-851b-8bfacc448402 div.sk-text-repr-fallback {display: none;}</style><div id="sk-92b803db-5bf6-44af-851b-8bfacc448402" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a1909f1-cca8-46cc-abbe-033363c143b7" type="checkbox" ><label for="6a1909f1-cca8-46cc-abbe-033363c143b7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1053e4f5-6e42-4c6b-b077-51850c3effd4" type="checkbox" ><label for="1053e4f5-6e42-4c6b-b077-51850c3effd4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="155755cd-1611-40ad-80c5-ac2ed37e995a" type="checkbox" ><label for="155755cd-1611-40ad-80c5-ac2ed37e995a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00e64f99-1f37-4c71-8cdd-9a80557944da" type="checkbox" ><label for="00e64f99-1f37-4c71-8cdd-9a80557944da" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa6b8af8-3662-4b5d-89fa-22d6842c08d4" type="checkbox" ><label for="aa6b8af8-3662-4b5d-89fa-22d6842c08d4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a040b16-ceab-4550-905e-90279dc81039" type="checkbox" ><label for="5a040b16-ceab-4550-905e-90279dc81039" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bb8b686-f1b9-4f35-a92a-9cc7ded1380d" type="checkbox" ><label for="8bb8b686-f1b9-4f35-a92a-9cc7ded1380d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95838a3b-db92-4b92-8d5e-106251dbc4b1" type="checkbox" ><label for="95838a3b-db92-4b92-8d5e-106251dbc4b1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5c949f6-a491-4d02-9fdf-7bbc02e85b7d" type="checkbox" ><label for="d5c949f6-a491-4d02-9fdf-7bbc02e85b7d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 {color: black;background-color: white;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 pre{padding: 0;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-toggleable {background-color: white;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-item {z-index: 1;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-35ed38a0-b28e-4e78-872e-65994c7027d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-35ed38a0-b28e-4e78-872e-65994c7027d7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94e3b31c-dd4c-47bb-b605-200e9e24a332" type="checkbox" ><label for="94e3b31c-dd4c-47bb-b605-200e9e24a332" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f56ed479-45ce-436f-95ac-257bfad88230" type="checkbox" ><label for="f56ed479-45ce-436f-95ac-257bfad88230" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4678813-1432-41b9-89a4-7631dfa96650" type="checkbox" ><label for="f4678813-1432-41b9-89a4-7631dfa96650" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48c5c6b3-d2ef-4135-9d4f-b55db7ed2afc" type="checkbox" ><label for="48c5c6b3-d2ef-4135-9d4f-b55db7ed2afc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59817bc7-0779-4af0-b25b-1e7b3297ca4d" type="checkbox" ><label for="59817bc7-0779-4af0-b25b-1e7b3297ca4d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="121488e6-6354-4705-bf63-2737608ad5be" type="checkbox" ><label for="121488e6-6354-4705-bf63-2737608ad5be" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b29169f3-74a9-417c-bad2-35b72e1bbcab" type="checkbox" ><label for="b29169f3-74a9-417c-bad2-35b72e1bbcab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40d5d35a-acfb-4e42-9c25-6944f9f47e7f" type="checkbox" ><label for="40d5d35a-acfb-4e42-9c25-6944f9f47e7f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5c26d4c-8e0a-4d06-9b03-09adc179ce99" type="checkbox" ><label for="c5c26d4c-8e0a-4d06-9b03-09adc179ce99" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.095 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
