
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 {color: black;background-color: white;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 pre{padding: 0;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-toggleable {background-color: white;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-item {z-index: 1;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-parallel-item:only-child::after {width: 0;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8872ce58-b574-442a-aa8c-aef54afa51f4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8872ce58-b574-442a-aa8c-aef54afa51f4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18f34d3d-5e6e-45f7-a1e4-1f39b54682d6" type="checkbox" ><label for="18f34d3d-5e6e-45f7-a1e4-1f39b54682d6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7641349d-ecd9-42a8-9784-21e9eb30715a" type="checkbox" ><label for="7641349d-ecd9-42a8-9784-21e9eb30715a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fbd45ff-7c24-4416-a9e3-d9addd0992f9" type="checkbox" ><label for="1fbd45ff-7c24-4416-a9e3-d9addd0992f9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c84fc991-480d-4472-a0df-9989e7e6e97b {color: black;background-color: white;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b pre{padding: 0;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-toggleable {background-color: white;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-estimator:hover {background-color: #d4ebff;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-item {z-index: 1;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-parallel-item:only-child::after {width: 0;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c84fc991-480d-4472-a0df-9989e7e6e97b div.sk-text-repr-fallback {display: none;}</style><div id="sk-c84fc991-480d-4472-a0df-9989e7e6e97b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f83ef1db-411b-48ee-98f4-cf9a833b9b3a" type="checkbox" ><label for="f83ef1db-411b-48ee-98f4-cf9a833b9b3a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbada1da-601c-4891-aa15-201d7c83326f" type="checkbox" ><label for="cbada1da-601c-4891-aa15-201d7c83326f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="619d2d2e-e98a-4b43-8f05-5478fadd256b" type="checkbox" ><label for="619d2d2e-e98a-4b43-8f05-5478fadd256b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4e32fa7-7aaa-4b6e-8b4c-eaa9dd5ad022" type="checkbox" ><label for="d4e32fa7-7aaa-4b6e-8b4c-eaa9dd5ad022" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9efaca53-7849-458b-9674-bfa6ef946e44 {color: black;background-color: white;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 pre{padding: 0;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-toggleable {background-color: white;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-item {z-index: 1;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-parallel-item:only-child::after {width: 0;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9efaca53-7849-458b-9674-bfa6ef946e44 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9efaca53-7849-458b-9674-bfa6ef946e44" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="532210b4-2d5c-4d78-b0cc-6a749cc2f701" type="checkbox" ><label for="532210b4-2d5c-4d78-b0cc-6a749cc2f701" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54214569-9395-4404-9d01-df807fe12d22" type="checkbox" ><label for="54214569-9395-4404-9d01-df807fe12d22" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ab3cdf0-9701-441b-8a9b-e20ffe0a3e0f" type="checkbox" ><label for="1ab3cdf0-9701-441b-8a9b-e20ffe0a3e0f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-54050a3d-ceba-40de-b030-6b77408e677a {color: black;background-color: white;}#sk-54050a3d-ceba-40de-b030-6b77408e677a pre{padding: 0;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-toggleable {background-color: white;}#sk-54050a3d-ceba-40de-b030-6b77408e677a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-54050a3d-ceba-40de-b030-6b77408e677a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-54050a3d-ceba-40de-b030-6b77408e677a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-54050a3d-ceba-40de-b030-6b77408e677a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-54050a3d-ceba-40de-b030-6b77408e677a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-54050a3d-ceba-40de-b030-6b77408e677a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-estimator:hover {background-color: #d4ebff;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-item {z-index: 1;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-parallel-item:only-child::after {width: 0;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-54050a3d-ceba-40de-b030-6b77408e677a div.sk-text-repr-fallback {display: none;}</style><div id="sk-54050a3d-ceba-40de-b030-6b77408e677a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0017bc7f-3d62-4ecc-a4da-33048b68d1e9" type="checkbox" ><label for="0017bc7f-3d62-4ecc-a4da-33048b68d1e9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee2fc5a4-8f25-43aa-b67f-09c3de109b58" type="checkbox" ><label for="ee2fc5a4-8f25-43aa-b67f-09c3de109b58" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffce1a9e-c9d9-4297-bad8-314a97c1ae0f" type="checkbox" ><label for="ffce1a9e-c9d9-4297-bad8-314a97c1ae0f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b889fd05-66be-48d5-9735-340e8061fa90" type="checkbox" ><label for="b889fd05-66be-48d5-9735-340e8061fa90" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a29684f2-3dbb-4425-a098-7a0aaccc6da1" type="checkbox" ><label for="a29684f2-3dbb-4425-a098-7a0aaccc6da1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64873b08-1bf3-44d9-bced-22b3621ffe59" type="checkbox" ><label for="64873b08-1bf3-44d9-bced-22b3621ffe59" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ba5812b-0772-4483-899e-874f5933e676" type="checkbox" ><label for="9ba5812b-0772-4483-899e-874f5933e676" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="544ae054-71da-4870-bc3f-a1da639b22cf" type="checkbox" ><label for="544ae054-71da-4870-bc3f-a1da639b22cf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="688f5024-1b58-4580-a8ec-0cf67bd2d9b0" type="checkbox" ><label for="688f5024-1b58-4580-a8ec-0cf67bd2d9b0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 {color: black;background-color: white;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 pre{padding: 0;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-toggleable {background-color: white;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-item {z-index: 1;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-parallel-item:only-child::after {width: 0;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e8059cb1-cec1-43d3-be6b-93ba67acd080 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e8059cb1-cec1-43d3-be6b-93ba67acd080" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0a5b802-2eed-4783-beaa-740b76ce1b45" type="checkbox" ><label for="e0a5b802-2eed-4783-beaa-740b76ce1b45" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb59955f-6638-4532-ad33-a8a0ab452629" type="checkbox" ><label for="eb59955f-6638-4532-ad33-a8a0ab452629" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cefa7d52-051e-4a19-9426-f4f2eee06115" type="checkbox" ><label for="cefa7d52-051e-4a19-9426-f4f2eee06115" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cbe243d-78d4-4fe3-b804-d3ee13ecca8f" type="checkbox" ><label for="5cbe243d-78d4-4fe3-b804-d3ee13ecca8f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d54499ea-1a2e-420f-89d3-ac511ddc4006" type="checkbox" ><label for="d54499ea-1a2e-420f-89d3-ac511ddc4006" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="702c77b4-41cc-4220-8c6c-2bf7dbe7af50" type="checkbox" ><label for="702c77b4-41cc-4220-8c6c-2bf7dbe7af50" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="980a4ac2-b6e0-49ce-9e85-1193e738a8f7" type="checkbox" ><label for="980a4ac2-b6e0-49ce-9e85-1193e738a8f7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="156d4c88-f6b1-4d05-be13-c3366a0fe88e" type="checkbox" ><label for="156d4c88-f6b1-4d05-be13-c3366a0fe88e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c4ca8b1-c6f0-4091-8215-0e1cfe5ec6ba" type="checkbox" ><label for="3c4ca8b1-c6f0-4091-8215-0e1cfe5ec6ba" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
