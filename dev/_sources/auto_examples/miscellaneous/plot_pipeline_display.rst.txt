
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 {color: black;background-color: white;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 pre{padding: 0;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-toggleable {background-color: white;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-item {z-index: 1;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-parallel-item:only-child::after {width: 0;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8650befb-7f36-4b45-9795-1dc4781bebf0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8650befb-7f36-4b45-9795-1dc4781bebf0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dec88daa-c086-4136-997b-bf0d4144479a" type="checkbox" ><label for="dec88daa-c086-4136-997b-bf0d4144479a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e14ab8bc-7d90-418e-a0aa-dc96977ef728" type="checkbox" ><label for="e14ab8bc-7d90-418e-a0aa-dc96977ef728" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12063820-81de-4e98-b33c-2648a5698f5e" type="checkbox" ><label for="12063820-81de-4e98-b33c-2648a5698f5e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-40f11286-eabe-4222-934a-c6ad6515956f {color: black;background-color: white;}#sk-40f11286-eabe-4222-934a-c6ad6515956f pre{padding: 0;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-toggleable {background-color: white;}#sk-40f11286-eabe-4222-934a-c6ad6515956f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-40f11286-eabe-4222-934a-c6ad6515956f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-40f11286-eabe-4222-934a-c6ad6515956f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-40f11286-eabe-4222-934a-c6ad6515956f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-40f11286-eabe-4222-934a-c6ad6515956f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40f11286-eabe-4222-934a-c6ad6515956f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-estimator:hover {background-color: #d4ebff;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-item {z-index: 1;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-parallel-item:only-child::after {width: 0;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-40f11286-eabe-4222-934a-c6ad6515956f div.sk-text-repr-fallback {display: none;}</style><div id="sk-40f11286-eabe-4222-934a-c6ad6515956f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07324bcf-7d3c-4e32-acb7-7992375b4845" type="checkbox" ><label for="07324bcf-7d3c-4e32-acb7-7992375b4845" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7ea5a15-aaf1-44f1-8105-4b23fa1f4030" type="checkbox" ><label for="b7ea5a15-aaf1-44f1-8105-4b23fa1f4030" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1924308-3d26-4b68-b9a1-95e437effe4e" type="checkbox" ><label for="d1924308-3d26-4b68-b9a1-95e437effe4e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62e5d42d-790d-4f5c-b647-fe49d60e06e1" type="checkbox" ><label for="62e5d42d-790d-4f5c-b647-fe49d60e06e1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc {color: black;background-color: white;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc pre{padding: 0;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-toggleable {background-color: white;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-estimator:hover {background-color: #d4ebff;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-item {z-index: 1;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-parallel-item:only-child::after {width: 0;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc div.sk-text-repr-fallback {display: none;}</style><div id="sk-4664aa26-6b8f-4bf4-b792-0b7a4c59ebcc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11bb4d95-be79-4b55-b775-08a4875ab290" type="checkbox" ><label for="11bb4d95-be79-4b55-b775-08a4875ab290" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d438471c-ee5d-497d-8374-7ead7dfe5aad" type="checkbox" ><label for="d438471c-ee5d-497d-8374-7ead7dfe5aad" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30c7a6a1-4ff2-4221-a9d2-af56b3992d80" type="checkbox" ><label for="30c7a6a1-4ff2-4221-a9d2-af56b3992d80" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 {color: black;background-color: white;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 pre{padding: 0;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-toggleable {background-color: white;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-item {z-index: 1;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-parallel-item:only-child::after {width: 0;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d41d4d85-586c-4db9-a2b4-c017b0217791 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d41d4d85-586c-4db9-a2b4-c017b0217791" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bba5a6b6-5c90-4de2-a5ce-b38988cc6da3" type="checkbox" ><label for="bba5a6b6-5c90-4de2-a5ce-b38988cc6da3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1581f31b-8235-41d4-a0c5-bf4ea2c0bf08" type="checkbox" ><label for="1581f31b-8235-41d4-a0c5-bf4ea2c0bf08" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="522bc886-df9e-4188-99e8-b147beb3486b" type="checkbox" ><label for="522bc886-df9e-4188-99e8-b147beb3486b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d44e26c-a93d-4c37-92fc-9db94d43ca77" type="checkbox" ><label for="3d44e26c-a93d-4c37-92fc-9db94d43ca77" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6932ccc6-d7f0-40a6-921d-e13778d7bdba" type="checkbox" ><label for="6932ccc6-d7f0-40a6-921d-e13778d7bdba" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="552477f1-d499-45f6-a087-dcce1ef5b62d" type="checkbox" ><label for="552477f1-d499-45f6-a087-dcce1ef5b62d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06cee447-653b-46f2-a045-2103e87063de" type="checkbox" ><label for="06cee447-653b-46f2-a045-2103e87063de" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a573d18f-fba9-4e34-8eeb-a7498f6c45cd" type="checkbox" ><label for="a573d18f-fba9-4e34-8eeb-a7498f6c45cd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c32c55b-83b0-450b-9736-338e7a1b71ae" type="checkbox" ><label for="4c32c55b-83b0-450b-9736-338e7a1b71ae" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e {color: black;background-color: white;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e pre{padding: 0;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-toggleable {background-color: white;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-estimator:hover {background-color: #d4ebff;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-item {z-index: 1;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-parallel-item:only-child::after {width: 0;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e8f342bc-9b35-4c8d-8194-291216e62e5e div.sk-text-repr-fallback {display: none;}</style><div id="sk-e8f342bc-9b35-4c8d-8194-291216e62e5e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c57feef-657b-4437-a5e4-cc5c50528630" type="checkbox" ><label for="2c57feef-657b-4437-a5e4-cc5c50528630" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2b96ae5-cb78-4e5b-a8c5-e205e9e0a1cb" type="checkbox" ><label for="b2b96ae5-cb78-4e5b-a8c5-e205e9e0a1cb" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03aad978-5b2a-44e3-b808-2b2a1b389080" type="checkbox" ><label for="03aad978-5b2a-44e3-b808-2b2a1b389080" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="292c8424-b04f-4a3a-81b2-c92a545683b8" type="checkbox" ><label for="292c8424-b04f-4a3a-81b2-c92a545683b8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42bcd262-0e34-4931-85c5-96447725017f" type="checkbox" ><label for="42bcd262-0e34-4931-85c5-96447725017f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0d0a50e-edbc-4cac-9ccb-86f54f3f78bb" type="checkbox" ><label for="f0d0a50e-edbc-4cac-9ccb-86f54f3f78bb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c2c90cf-f963-46e8-80e5-7377532a5ec8" type="checkbox" ><label for="8c2c90cf-f963-46e8-80e5-7377532a5ec8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ae3a98e-faab-4abf-9580-12b662997d02" type="checkbox" ><label for="9ae3a98e-faab-4abf-9580-12b662997d02" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ebad082-4dfd-4583-a219-43eeeb7e4795" type="checkbox" ><label for="8ebad082-4dfd-4583-a219-43eeeb7e4795" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
