
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-822f704e-cf95-4f29-a705-1ca8e1351683 {color: black;background-color: white;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 pre{padding: 0;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-toggleable {background-color: white;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-estimator:hover {background-color: #d4ebff;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-item {z-index: 1;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-parallel-item:only-child::after {width: 0;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-container {display: inline-block;position: relative;}#sk-822f704e-cf95-4f29-a705-1ca8e1351683 div.sk-text-repr-fallback {display: none;}</style><div id="sk-822f704e-cf95-4f29-a705-1ca8e1351683" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c6932b0-babb-48a1-af09-9afb10079c2d" type="checkbox" ><label class="sk-toggleable__label" for="2c6932b0-babb-48a1-af09-9afb10079c2d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8cab398-52f2-4bba-b471-682bffca8b72" type="checkbox" ><label class="sk-toggleable__label" for="f8cab398-52f2-4bba-b471-682bffca8b72">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5687ce0c-a983-467a-a629-644857cbb585" type="checkbox" ><label class="sk-toggleable__label" for="5687ce0c-a983-467a-a629-644857cbb585">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 {color: black;background-color: white;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 pre{padding: 0;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-toggleable {background-color: white;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-item {z-index: 1;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-parallel-item:only-child::after {width: 0;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-container {display: inline-block;position: relative;}#sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-465ec720-e8c0-499f-b3d2-50a33a6a22f0" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d41753b8-7fc6-4ddc-a9cb-db2cd5ad5636" type="checkbox" ><label class="sk-toggleable__label" for="d41753b8-7fc6-4ddc-a9cb-db2cd5ad5636">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="678daf9f-c7a7-45f8-add0-43b94dfe1237" type="checkbox" ><label class="sk-toggleable__label" for="678daf9f-c7a7-45f8-add0-43b94dfe1237">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2969d0f9-8944-4d93-ba4b-43792133487d" type="checkbox" ><label class="sk-toggleable__label" for="2969d0f9-8944-4d93-ba4b-43792133487d">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa1a472f-e0de-446a-937a-4405d68882ca" type="checkbox" ><label class="sk-toggleable__label" for="aa1a472f-e0de-446a-937a-4405d68882ca">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b {color: black;background-color: white;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b pre{padding: 0;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-toggleable {background-color: white;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-estimator:hover {background-color: #d4ebff;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-item {z-index: 1;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-parallel-item:only-child::after {width: 0;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-container {display: inline-block;position: relative;}#sk-c16d68d0-c63a-413c-979c-dd445ea91f6b div.sk-text-repr-fallback {display: none;}</style><div id="sk-c16d68d0-c63a-413c-979c-dd445ea91f6b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c817a490-b053-4f22-806c-3cf8406edf48" type="checkbox" ><label class="sk-toggleable__label" for="c817a490-b053-4f22-806c-3cf8406edf48">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ece5b10-e075-40f6-bc13-0803226c7e63" type="checkbox" ><label class="sk-toggleable__label" for="3ece5b10-e075-40f6-bc13-0803226c7e63">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5766d593-c500-4116-be7b-115465c6c4fb" type="checkbox" ><label class="sk-toggleable__label" for="5766d593-c500-4116-be7b-115465c6c4fb">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 {color: black;background-color: white;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 pre{padding: 0;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-toggleable {background-color: white;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-item {z-index: 1;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-parallel-item:only-child::after {width: 0;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-container {display: inline-block;position: relative;}#sk-c34d14fa-9897-46a6-a7bc-f383a5328117 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c34d14fa-9897-46a6-a7bc-f383a5328117" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f1520e1-b426-4cbf-a4ce-d1c1ae550085" type="checkbox" ><label class="sk-toggleable__label" for="2f1520e1-b426-4cbf-a4ce-d1c1ae550085">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8a7c59f-437f-411b-8fde-f304573ccca7" type="checkbox" ><label class="sk-toggleable__label" for="a8a7c59f-437f-411b-8fde-f304573ccca7">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08b8697c-0c94-4281-8b92-a25f2792c703" type="checkbox" ><label class="sk-toggleable__label" for="08b8697c-0c94-4281-8b92-a25f2792c703">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="369d464b-3ff8-433b-ac4c-496636ff6b2a" type="checkbox" ><label class="sk-toggleable__label" for="369d464b-3ff8-433b-ac4c-496636ff6b2a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f7bf224-3c38-4fda-a82e-7346f05f83db" type="checkbox" ><label class="sk-toggleable__label" for="2f7bf224-3c38-4fda-a82e-7346f05f83db">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b944543-7f73-4c1a-b1cc-d4baab39f1f6" type="checkbox" ><label class="sk-toggleable__label" for="9b944543-7f73-4c1a-b1cc-d4baab39f1f6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="042d869c-509e-47cc-8ddc-f7b53b77ef31" type="checkbox" ><label class="sk-toggleable__label" for="042d869c-509e-47cc-8ddc-f7b53b77ef31">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56d635fe-e163-49ca-91b0-0755aaf8705b" type="checkbox" ><label class="sk-toggleable__label" for="56d635fe-e163-49ca-91b0-0755aaf8705b">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c57a302-27cf-4921-acc2-edd8c42489d1" type="checkbox" ><label class="sk-toggleable__label" for="0c57a302-27cf-4921-acc2-edd8c42489d1">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-334f181e-bf00-4819-8a8f-888bba660931 {color: black;background-color: white;}#sk-334f181e-bf00-4819-8a8f-888bba660931 pre{padding: 0;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-toggleable {background-color: white;}#sk-334f181e-bf00-4819-8a8f-888bba660931 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-334f181e-bf00-4819-8a8f-888bba660931 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-334f181e-bf00-4819-8a8f-888bba660931 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-estimator:hover {background-color: #d4ebff;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-item {z-index: 1;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-parallel-item:only-child::after {width: 0;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-container {display: inline-block;position: relative;}#sk-334f181e-bf00-4819-8a8f-888bba660931 div.sk-text-repr-fallback {display: none;}</style><div id="sk-334f181e-bf00-4819-8a8f-888bba660931" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5207b5ea-66f6-495c-bf39-77949c69396b" type="checkbox" ><label class="sk-toggleable__label" for="5207b5ea-66f6-495c-bf39-77949c69396b">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac6a49a6-fdf6-4904-9672-11c3aef8c99b" type="checkbox" ><label class="sk-toggleable__label" for="ac6a49a6-fdf6-4904-9672-11c3aef8c99b">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2eeaa68e-f21f-40cb-89df-fc964623e94e" type="checkbox" ><label class="sk-toggleable__label" for="2eeaa68e-f21f-40cb-89df-fc964623e94e">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1764738-3dfa-4cc0-a85f-432c487ba43d" type="checkbox" ><label class="sk-toggleable__label" for="d1764738-3dfa-4cc0-a85f-432c487ba43d">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="490772eb-c598-45bc-93da-4684765debb3" type="checkbox" ><label class="sk-toggleable__label" for="490772eb-c598-45bc-93da-4684765debb3">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9abb6b5-cd6f-4933-a937-167e17e043b2" type="checkbox" ><label class="sk-toggleable__label" for="d9abb6b5-cd6f-4933-a937-167e17e043b2">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e70805a-f6fe-47ad-8df7-5b00ee364f43" type="checkbox" ><label class="sk-toggleable__label" for="7e70805a-f6fe-47ad-8df7-5b00ee364f43">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="304e82c4-70c5-4ea0-8b95-34d51d780a75" type="checkbox" ><label class="sk-toggleable__label" for="304e82c4-70c5-4ea0-8b95-34d51d780a75">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05864c3c-b498-459c-b5e2-bd70b8d68cb4" type="checkbox" ><label class="sk-toggleable__label" for="05864c3c-b498-459c-b5e2-bd70b8d68cb4">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.119 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
