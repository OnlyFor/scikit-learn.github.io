
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-271667c8-702a-43a5-a447-62ff9d54cde1 {color: black;background-color: white;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 pre{padding: 0;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-toggleable {background-color: white;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-item {z-index: 1;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-parallel-item:only-child::after {width: 0;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-271667c8-702a-43a5-a447-62ff9d54cde1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-271667c8-702a-43a5-a447-62ff9d54cde1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5095628-eb6b-4d7f-bc95-0ec2807ace66" type="checkbox" ><label for="b5095628-eb6b-4d7f-bc95-0ec2807ace66" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="931c5ef0-9f63-408c-8461-508ba4df81a0" type="checkbox" ><label for="931c5ef0-9f63-408c-8461-508ba4df81a0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="283d1131-a2af-443e-b662-9ff96e68565c" type="checkbox" ><label for="283d1131-a2af-443e-b662-9ff96e68565c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c {color: black;background-color: white;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c pre{padding: 0;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-toggleable {background-color: white;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-estimator:hover {background-color: #d4ebff;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-item {z-index: 1;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-parallel-item:only-child::after {width: 0;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c div.sk-text-repr-fallback {display: none;}</style><div id="sk-b6f77d68-2125-4bf7-8a03-0b38e3e2715c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00cdd9ff-69c0-4c7e-a489-6221f1b5aa5e" type="checkbox" ><label for="00cdd9ff-69c0-4c7e-a489-6221f1b5aa5e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89d3f411-6656-435d-926f-d001af24b1a6" type="checkbox" ><label for="89d3f411-6656-435d-926f-d001af24b1a6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cc31441-f0f2-4bd7-9ac4-05daa0b4cd88" type="checkbox" ><label for="7cc31441-f0f2-4bd7-9ac4-05daa0b4cd88" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33b224fb-f586-4a82-bc19-d619629d8303" type="checkbox" ><label for="33b224fb-f586-4a82-bc19-d619629d8303" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 {color: black;background-color: white;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 pre{padding: 0;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-toggleable {background-color: white;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-estimator:hover {background-color: #d4ebff;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-item {z-index: 1;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-parallel-item:only-child::after {width: 0;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-538f6837-3643-4b8e-a0ba-2c6717b72c20 div.sk-text-repr-fallback {display: none;}</style><div id="sk-538f6837-3643-4b8e-a0ba-2c6717b72c20" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5229f99f-bd9a-43eb-9fac-1eee85e73f67" type="checkbox" ><label for="5229f99f-bd9a-43eb-9fac-1eee85e73f67" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0ea7d4a-b821-4e43-8af6-70489930b909" type="checkbox" ><label for="e0ea7d4a-b821-4e43-8af6-70489930b909" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="918d9893-6fd1-4366-956e-9eb28b7e3880" type="checkbox" ><label for="918d9893-6fd1-4366-956e-9eb28b7e3880" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b {color: black;background-color: white;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b pre{padding: 0;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-toggleable {background-color: white;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-estimator:hover {background-color: #d4ebff;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-item {z-index: 1;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-parallel-item:only-child::after {width: 0;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8bf61d18-058d-4755-97d8-3140a3b38b0b div.sk-text-repr-fallback {display: none;}</style><div id="sk-8bf61d18-058d-4755-97d8-3140a3b38b0b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d0d2c91-d89f-4d29-b47b-4cd67d7bb72a" type="checkbox" ><label for="3d0d2c91-d89f-4d29-b47b-4cd67d7bb72a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef778641-abb1-423d-9885-29ab0f047907" type="checkbox" ><label for="ef778641-abb1-423d-9885-29ab0f047907" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3af11cbd-bb19-4f3a-91a6-186f2a9a5253" type="checkbox" ><label for="3af11cbd-bb19-4f3a-91a6-186f2a9a5253" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="474262fd-58c2-4eb8-8f55-2fcbbdec5ee6" type="checkbox" ><label for="474262fd-58c2-4eb8-8f55-2fcbbdec5ee6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="890c6218-0fd9-4dea-8916-21e35df04f2d" type="checkbox" ><label for="890c6218-0fd9-4dea-8916-21e35df04f2d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11940ded-13eb-4b2f-b3d7-5db69c0f54a8" type="checkbox" ><label for="11940ded-13eb-4b2f-b3d7-5db69c0f54a8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f284a02-bf04-4a64-9e17-1b95d891496f" type="checkbox" ><label for="3f284a02-bf04-4a64-9e17-1b95d891496f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b4fd066-a228-45b7-91e8-bf138edbbe9b" type="checkbox" ><label for="5b4fd066-a228-45b7-91e8-bf138edbbe9b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58fc463a-cbcd-4430-992c-8fbeec065aa2" type="checkbox" ><label for="58fc463a-cbcd-4430-992c-8fbeec065aa2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 {color: black;background-color: white;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 pre{padding: 0;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-toggleable {background-color: white;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-item {z-index: 1;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-parallel-item:only-child::after {width: 0;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e3707e0e-d8b2-4eee-8ec0-abae8e3a7bd1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6cb3c6f0-69af-452a-ad52-805f4de42f5a" type="checkbox" ><label for="6cb3c6f0-69af-452a-ad52-805f4de42f5a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f40c7980-c7be-4d29-b35a-496294e00031" type="checkbox" ><label for="f40c7980-c7be-4d29-b35a-496294e00031" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca0d0d41-4761-443d-9a38-edac3d2cafb1" type="checkbox" ><label for="ca0d0d41-4761-443d-9a38-edac3d2cafb1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8db1c407-68c2-48e1-8134-21e29819e27d" type="checkbox" ><label for="8db1c407-68c2-48e1-8134-21e29819e27d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31b4eb07-210c-4d5d-b5cd-23dacbb4424a" type="checkbox" ><label for="31b4eb07-210c-4d5d-b5cd-23dacbb4424a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6848a456-7dec-4349-903c-964003a29e66" type="checkbox" ><label for="6848a456-7dec-4349-903c-964003a29e66" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50123621-7e9d-4d70-92a5-3847f18ddabc" type="checkbox" ><label for="50123621-7e9d-4d70-92a5-3847f18ddabc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff3d5a3b-1f76-45c1-8fb2-2358b1e67a80" type="checkbox" ><label for="ff3d5a3b-1f76-45c1-8fb2-2358b1e67a80" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6322972c-b0a4-4f9f-a307-508f8dd27077" type="checkbox" ><label for="6322972c-b0a4-4f9f-a307-508f8dd27077" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
