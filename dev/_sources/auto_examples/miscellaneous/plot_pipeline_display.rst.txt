
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 {color: black;background-color: white;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 pre{padding: 0;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-toggleable {background-color: white;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-item {z-index: 1;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-parallel-item:only-child::after {width: 0;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6ec8a521-c00c-4292-8029-22e91a5b4ff1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8117992-b8ea-4d93-bf81-892332433356" type="checkbox" ><label for="a8117992-b8ea-4d93-bf81-892332433356" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6605ce8f-8e76-48c2-8de4-32ad939fbdb7" type="checkbox" ><label for="6605ce8f-8e76-48c2-8de4-32ad939fbdb7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfa6d0a3-ef2d-4368-bf9e-fdedda17dc26" type="checkbox" ><label for="dfa6d0a3-ef2d-4368-bf9e-fdedda17dc26" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-df6d584c-0d85-43a9-af60-4462229f92ad {color: black;background-color: white;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad pre{padding: 0;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-toggleable {background-color: white;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-estimator:hover {background-color: #d4ebff;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-item {z-index: 1;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-parallel-item:only-child::after {width: 0;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-df6d584c-0d85-43a9-af60-4462229f92ad div.sk-text-repr-fallback {display: none;}</style><div id="sk-df6d584c-0d85-43a9-af60-4462229f92ad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a284410-1e96-42f0-9878-dcd2c53d507b" type="checkbox" ><label for="1a284410-1e96-42f0-9878-dcd2c53d507b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ddf6a2f4-3025-4453-833d-c2338d2a2e18" type="checkbox" ><label for="ddf6a2f4-3025-4453-833d-c2338d2a2e18" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc96d829-e152-4a99-b0de-112097a7bde7" type="checkbox" ><label for="dc96d829-e152-4a99-b0de-112097a7bde7" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ba2440d-55e9-4755-b7ad-9cc0223180a3" type="checkbox" ><label for="3ba2440d-55e9-4755-b7ad-9cc0223180a3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 {color: black;background-color: white;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 pre{padding: 0;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-toggleable {background-color: white;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-item {z-index: 1;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-parallel-item:only-child::after {width: 0;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-011cf3e4-93d1-4290-b0ca-bbb79b0f27e8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88bfea8d-f9a0-45d1-9871-ae0de0dc4e9c" type="checkbox" ><label for="88bfea8d-f9a0-45d1-9871-ae0de0dc4e9c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ae1940d-49cb-4c01-8736-f7bf57bce728" type="checkbox" ><label for="3ae1940d-49cb-4c01-8736-f7bf57bce728" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffac6871-351b-4283-a0c7-80e8af5577d7" type="checkbox" ><label for="ffac6871-351b-4283-a0c7-80e8af5577d7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 {color: black;background-color: white;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 pre{padding: 0;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-toggleable {background-color: white;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-estimator:hover {background-color: #d4ebff;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-item {z-index: 1;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-parallel-item:only-child::after {width: 0;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483 div.sk-text-repr-fallback {display: none;}</style><div id="sk-37fa9e5e-2d3c-4be1-a339-c1e575f46483" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f40061d-9629-4122-950c-3d041d1d2266" type="checkbox" ><label for="3f40061d-9629-4122-950c-3d041d1d2266" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="285802c2-19e1-4114-8bcf-82f412ac0005" type="checkbox" ><label for="285802c2-19e1-4114-8bcf-82f412ac0005" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e62253e-4dc8-4610-ae9c-293cbc9a62c1" type="checkbox" ><label for="2e62253e-4dc8-4610-ae9c-293cbc9a62c1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9705c2ff-c0a3-4537-bc58-acb28d6b03c0" type="checkbox" ><label for="9705c2ff-c0a3-4537-bc58-acb28d6b03c0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="967fa8f3-8c9b-483d-b1d4-f380ea0efd0f" type="checkbox" ><label for="967fa8f3-8c9b-483d-b1d4-f380ea0efd0f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2b5c7690-a940-43f8-853d-4c048423f985" type="checkbox" ><label for="2b5c7690-a940-43f8-853d-4c048423f985" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f33ff3c1-b9bc-4027-94e1-a542872aea39" type="checkbox" ><label for="f33ff3c1-b9bc-4027-94e1-a542872aea39" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2618fa19-a255-4620-888f-120dae1c89c9" type="checkbox" ><label for="2618fa19-a255-4620-888f-120dae1c89c9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eea99cd3-0580-4c66-9c3d-115a0fcc64c8" type="checkbox" ><label for="eea99cd3-0580-4c66-9c3d-115a0fcc64c8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd {color: black;background-color: white;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd pre{padding: 0;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-toggleable {background-color: white;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-estimator:hover {background-color: #d4ebff;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-item {z-index: 1;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-parallel-item:only-child::after {width: 0;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd div.sk-text-repr-fallback {display: none;}</style><div id="sk-071e3a8c-66ec-4c28-ace5-2cf36b7be8bd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b558ab5-9cb3-499c-ae12-82b5a6aa7764" type="checkbox" ><label for="1b558ab5-9cb3-499c-ae12-82b5a6aa7764" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15f92024-aa3b-41ad-90d7-3758a29176a6" type="checkbox" ><label for="15f92024-aa3b-41ad-90d7-3758a29176a6" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc58bf23-4a6d-4564-997c-96451d56f4f5" type="checkbox" ><label for="dc58bf23-4a6d-4564-997c-96451d56f4f5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="259c738a-130d-4fc0-a421-8f1b96171323" type="checkbox" ><label for="259c738a-130d-4fc0-a421-8f1b96171323" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0df8e657-e8b1-4b10-927e-3d9c7a3ec5f3" type="checkbox" ><label for="0df8e657-e8b1-4b10-927e-3d9c7a3ec5f3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fe417a4-6318-4eec-9085-3d9a3cdc68dd" type="checkbox" ><label for="2fe417a4-6318-4eec-9085-3d9a3cdc68dd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da6decdb-3b17-486c-915e-fa6a7f1e45fc" type="checkbox" ><label for="da6decdb-3b17-486c-915e-fa6a7f1e45fc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d505dd4f-3367-420a-9f45-0b8ca42b6134" type="checkbox" ><label for="d505dd4f-3367-420a-9f45-0b8ca42b6134" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="53d7f6a5-e7ac-4f7f-bcd0-df679f85120c" type="checkbox" ><label for="53d7f6a5-e7ac-4f7f-bcd0-df679f85120c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
