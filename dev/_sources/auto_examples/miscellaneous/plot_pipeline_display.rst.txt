
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 {color: black;background-color: white;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 pre{padding: 0;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-toggleable {background-color: white;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-item {z-index: 1;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-parallel-item:only-child::after {width: 0;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f3ecd6b3-3098-4ca7-a550-eaecc8543744" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dbf08ca-0da1-4f5a-ab81-eab1aafaef93" type="checkbox" ><label for="4dbf08ca-0da1-4f5a-ab81-eab1aafaef93" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d4cfcb7-0f6e-4cba-9ac8-24b197acdb4c" type="checkbox" ><label for="6d4cfcb7-0f6e-4cba-9ac8-24b197acdb4c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f921859e-3267-41e1-8130-847a791b506e" type="checkbox" ><label for="f921859e-3267-41e1-8130-847a791b506e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b {color: black;background-color: white;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b pre{padding: 0;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-toggleable {background-color: white;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-estimator:hover {background-color: #d4ebff;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-item {z-index: 1;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-parallel-item:only-child::after {width: 0;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b div.sk-text-repr-fallback {display: none;}</style><div id="sk-4b0d91f3-1633-47a5-b8ae-0e6aa1e23b9b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2eee7998-aad0-4395-92fc-c3cdc55d686a" type="checkbox" ><label for="2eee7998-aad0-4395-92fc-c3cdc55d686a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c1db6ee-1119-4c38-a548-3ac02b3d5520" type="checkbox" ><label for="6c1db6ee-1119-4c38-a548-3ac02b3d5520" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0afb746a-8b07-4b27-b579-f6554d6c13d7" type="checkbox" ><label for="0afb746a-8b07-4b27-b579-f6554d6c13d7" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ce24588-a130-4b6c-b136-942cbc271977" type="checkbox" ><label for="7ce24588-a130-4b6c-b136-942cbc271977" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 {color: black;background-color: white;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 pre{padding: 0;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-toggleable {background-color: white;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-item {z-index: 1;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-parallel-item:only-child::after {width: 0;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4b9d0755-1183-4050-94ea-e9b4753a5ae3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb853897-2929-45a0-86ac-cfc5a970a086" type="checkbox" ><label for="bb853897-2929-45a0-86ac-cfc5a970a086" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bfa364b-d617-4fcb-8a43-524c242ed390" type="checkbox" ><label for="9bfa364b-d617-4fcb-8a43-524c242ed390" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aef74c6a-fa7d-4035-a6f6-d4937477cfaa" type="checkbox" ><label for="aef74c6a-fa7d-4035-a6f6-d4937477cfaa" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-66821081-1e74-4ecb-90ee-6290d142e5be {color: black;background-color: white;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be pre{padding: 0;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-toggleable {background-color: white;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-estimator:hover {background-color: #d4ebff;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-item {z-index: 1;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-parallel-item:only-child::after {width: 0;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-66821081-1e74-4ecb-90ee-6290d142e5be div.sk-text-repr-fallback {display: none;}</style><div id="sk-66821081-1e74-4ecb-90ee-6290d142e5be" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27521584-fa31-4449-8e10-19f1ba1779b3" type="checkbox" ><label for="27521584-fa31-4449-8e10-19f1ba1779b3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79134093-5a21-460a-8dd5-a0200bd8f9f6" type="checkbox" ><label for="79134093-5a21-460a-8dd5-a0200bd8f9f6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fe51869-d994-45f4-b704-992b0a63a259" type="checkbox" ><label for="2fe51869-d994-45f4-b704-992b0a63a259" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0cdce34-6373-4874-a816-20269478b766" type="checkbox" ><label for="d0cdce34-6373-4874-a816-20269478b766" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fca2556-2a6f-4385-a951-02dcff62319a" type="checkbox" ><label for="7fca2556-2a6f-4385-a951-02dcff62319a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61f43078-c42e-4320-a60e-d18ed9923c2c" type="checkbox" ><label for="61f43078-c42e-4320-a60e-d18ed9923c2c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66004ebe-55f6-46f4-8044-5d06bcb4fcdb" type="checkbox" ><label for="66004ebe-55f6-46f4-8044-5d06bcb4fcdb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d50b95d-52a1-4e39-a2d9-230095bd536c" type="checkbox" ><label for="8d50b95d-52a1-4e39-a2d9-230095bd536c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82279699-e057-4a54-9786-64d83010876b" type="checkbox" ><label for="82279699-e057-4a54-9786-64d83010876b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf {color: black;background-color: white;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf pre{padding: 0;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-toggleable {background-color: white;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-item {z-index: 1;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-parallel-item:only-child::after {width: 0;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0d1a573-3150-4fe9-8c01-2cf0e3dea3bf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ffda428-a916-4af4-8c48-700d3711c5e5" type="checkbox" ><label for="3ffda428-a916-4af4-8c48-700d3711c5e5" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="788a3c60-53de-4ca3-932b-bd9f032c63ad" type="checkbox" ><label for="788a3c60-53de-4ca3-932b-bd9f032c63ad" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c45e84b-1a7a-4c8b-a9e5-bc3f450eef54" type="checkbox" ><label for="2c45e84b-1a7a-4c8b-a9e5-bc3f450eef54" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48711750-a55b-41d0-88b1-e8fdf08555d8" type="checkbox" ><label for="48711750-a55b-41d0-88b1-e8fdf08555d8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35ca45c4-3fad-4fe6-8bbe-7846b5aefbe5" type="checkbox" ><label for="35ca45c4-3fad-4fe6-8bbe-7846b5aefbe5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afcf085d-ba8d-4ed1-8025-3faec1efed0d" type="checkbox" ><label for="afcf085d-ba8d-4ed1-8025-3faec1efed0d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f27fa23-64a5-4758-84fb-34e5197298ff" type="checkbox" ><label for="1f27fa23-64a5-4758-84fb-34e5197298ff" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9010405a-67cf-4776-b717-0465b2bc25bc" type="checkbox" ><label for="9010405a-67cf-4776-b717-0465b2bc25bc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e777db5-c32a-4295-aa66-a3289fc7b78c" type="checkbox" ><label for="4e777db5-c32a-4295-aa66-a3289fc7b78c" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
