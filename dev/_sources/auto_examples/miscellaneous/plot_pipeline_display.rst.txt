
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 {color: black;background-color: white;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 pre{padding: 0;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-toggleable {background-color: white;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-item {z-index: 1;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-parallel-item:only-child::after {width: 0;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2f692478-2aa1-43a4-a6d0-3112e8d67b38" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa27a7af-66e8-49ba-acb8-1c30d7b0dbc2" type="checkbox" ><label for="aa27a7af-66e8-49ba-acb8-1c30d7b0dbc2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecfba72e-4416-4208-a159-e14c21bc08ee" type="checkbox" ><label for="ecfba72e-4416-4208-a159-e14c21bc08ee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d1f2e50-0304-4113-a399-b6a900059339" type="checkbox" ><label for="3d1f2e50-0304-4113-a399-b6a900059339" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-70c88f6c-045f-4965-927b-0d2c37246dfd {color: black;background-color: white;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd pre{padding: 0;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-toggleable {background-color: white;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-estimator:hover {background-color: #d4ebff;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-item {z-index: 1;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-parallel-item:only-child::after {width: 0;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-70c88f6c-045f-4965-927b-0d2c37246dfd div.sk-text-repr-fallback {display: none;}</style><div id="sk-70c88f6c-045f-4965-927b-0d2c37246dfd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="328d0f5a-3bf4-43ce-8f79-21329587440d" type="checkbox" ><label for="328d0f5a-3bf4-43ce-8f79-21329587440d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c88e924f-f0e6-4ad2-9c07-9f1bf4345942" type="checkbox" ><label for="c88e924f-f0e6-4ad2-9c07-9f1bf4345942" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dacad131-a1fc-4996-b68a-4c31d6bf9113" type="checkbox" ><label for="dacad131-a1fc-4996-b68a-4c31d6bf9113" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="752695af-dbf7-4fcc-8d34-fa268df56099" type="checkbox" ><label for="752695af-dbf7-4fcc-8d34-fa268df56099" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a {color: black;background-color: white;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a pre{padding: 0;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-toggleable {background-color: white;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-estimator:hover {background-color: #d4ebff;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-item {z-index: 1;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-parallel-item:only-child::after {width: 0;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a div.sk-text-repr-fallback {display: none;}</style><div id="sk-f4984ef8-a4a9-45f3-b419-421c2c8abb0a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22051810-09dc-46b4-8fd0-bad2cfd8b49d" type="checkbox" ><label for="22051810-09dc-46b4-8fd0-bad2cfd8b49d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="237ba46d-28bf-4343-8544-761b03377f9d" type="checkbox" ><label for="237ba46d-28bf-4343-8544-761b03377f9d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="124f1e51-3908-48ef-815f-61f324d36388" type="checkbox" ><label for="124f1e51-3908-48ef-815f-61f324d36388" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f {color: black;background-color: white;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f pre{padding: 0;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-toggleable {background-color: white;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-estimator:hover {background-color: #d4ebff;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-item {z-index: 1;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-parallel-item:only-child::after {width: 0;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f div.sk-text-repr-fallback {display: none;}</style><div id="sk-1b8bb2c1-bad3-443e-b3fe-87a0e340726f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4812deb3-a225-4558-9d4c-708639884ab1" type="checkbox" ><label for="4812deb3-a225-4558-9d4c-708639884ab1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d101d9a9-84d8-4353-ab7a-de31d84b764a" type="checkbox" ><label for="d101d9a9-84d8-4353-ab7a-de31d84b764a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79e30125-b6fc-42af-bb0b-ffb514217232" type="checkbox" ><label for="79e30125-b6fc-42af-bb0b-ffb514217232" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00e87b9a-95b3-48b3-8f80-4cbc626cb6ad" type="checkbox" ><label for="00e87b9a-95b3-48b3-8f80-4cbc626cb6ad" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce84c4f1-9494-4fb1-8098-9d35d69f3c6a" type="checkbox" ><label for="ce84c4f1-9494-4fb1-8098-9d35d69f3c6a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c7c63c9-6ec0-40a9-ad0e-66036e5e438c" type="checkbox" ><label for="8c7c63c9-6ec0-40a9-ad0e-66036e5e438c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c31f995-e9f5-4356-8671-4f6334860d3e" type="checkbox" ><label for="2c31f995-e9f5-4356-8671-4f6334860d3e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d496781d-f622-4adb-8acd-e27443371139" type="checkbox" ><label for="d496781d-f622-4adb-8acd-e27443371139" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa0cf73d-e16d-4799-bcb7-7416843d2cf0" type="checkbox" ><label for="fa0cf73d-e16d-4799-bcb7-7416843d2cf0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d {color: black;background-color: white;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d pre{padding: 0;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-toggleable {background-color: white;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-estimator:hover {background-color: #d4ebff;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-item {z-index: 1;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-parallel-item:only-child::after {width: 0;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d div.sk-text-repr-fallback {display: none;}</style><div id="sk-6113307a-967a-4bda-bdcd-7a3861dfbe4d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87065a37-7c8a-4c08-a16f-8bfa1ebfb5d0" type="checkbox" ><label for="87065a37-7c8a-4c08-a16f-8bfa1ebfb5d0" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d312cf4b-3d57-46d3-8108-0083b9273b8d" type="checkbox" ><label for="d312cf4b-3d57-46d3-8108-0083b9273b8d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3e44748-317b-4e11-a417-f5e8ef950d1c" type="checkbox" ><label for="b3e44748-317b-4e11-a417-f5e8ef950d1c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e97c3ec2-0dbc-4e3d-8d6b-0d0381954aea" type="checkbox" ><label for="e97c3ec2-0dbc-4e3d-8d6b-0d0381954aea" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67cc146f-881b-4cbe-aa37-9cd7d2aa138e" type="checkbox" ><label for="67cc146f-881b-4cbe-aa37-9cd7d2aa138e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14858a69-dabf-4991-8505-6577f92f5381" type="checkbox" ><label for="14858a69-dabf-4991-8505-6577f92f5381" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e36884e0-409d-483a-bbf6-05eaa4c61e42" type="checkbox" ><label for="e36884e0-409d-483a-bbf6-05eaa4c61e42" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d364ed7-0623-418b-a0f6-73e236823c50" type="checkbox" ><label for="0d364ed7-0623-418b-a0f6-73e236823c50" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="362d4941-5f20-4948-a030-49ba7d15bb3a" type="checkbox" ><label for="362d4941-5f20-4948-a030-49ba7d15bb3a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
