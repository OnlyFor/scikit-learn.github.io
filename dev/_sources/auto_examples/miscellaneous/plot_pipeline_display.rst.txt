
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 {color: black;background-color: white;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 pre{padding: 0;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-toggleable {background-color: white;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-estimator:hover {background-color: #d4ebff;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-item {z-index: 1;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-parallel-item:only-child::after {width: 0;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309 div.sk-text-repr-fallback {display: none;}</style><div id="sk-32f1848b-0fa1-41f4-aac2-0ca82bf76309" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db735a29-5436-4a45-a164-5eef3bd82dd4" type="checkbox" ><label for="db735a29-5436-4a45-a164-5eef3bd82dd4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d4613bb-89be-40b0-85ce-21bc52505fa8" type="checkbox" ><label for="4d4613bb-89be-40b0-85ce-21bc52505fa8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4f4610c-e56b-40c8-abec-ef8fd6520abc" type="checkbox" ><label for="e4f4610c-e56b-40c8-abec-ef8fd6520abc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 {color: black;background-color: white;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 pre{padding: 0;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-toggleable {background-color: white;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-item {z-index: 1;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-parallel-item:only-child::after {width: 0;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2981f6fc-eb21-44a8-850d-85b55d620b52 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2981f6fc-eb21-44a8-850d-85b55d620b52" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2b7e902-7a38-4663-8037-6a3fffc8575f" type="checkbox" ><label for="d2b7e902-7a38-4663-8037-6a3fffc8575f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="892330f5-fd4b-4c3b-b46d-57e6be1226d3" type="checkbox" ><label for="892330f5-fd4b-4c3b-b46d-57e6be1226d3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3624579-a87b-4484-8d7b-f198806adc88" type="checkbox" ><label for="c3624579-a87b-4484-8d7b-f198806adc88" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fa5f1be-0997-4567-92d0-da32f591244e" type="checkbox" ><label for="7fa5f1be-0997-4567-92d0-da32f591244e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d {color: black;background-color: white;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d pre{padding: 0;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-toggleable {background-color: white;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-estimator:hover {background-color: #d4ebff;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-item {z-index: 1;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-parallel-item:only-child::after {width: 0;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-20d48350-48d5-44ce-aa14-06bc29d9f10d div.sk-text-repr-fallback {display: none;}</style><div id="sk-20d48350-48d5-44ce-aa14-06bc29d9f10d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aeb58924-8879-43c2-903f-667473715285" type="checkbox" ><label for="aeb58924-8879-43c2-903f-667473715285" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c870d9a7-599c-4bce-9847-3f9ff349eef5" type="checkbox" ><label for="c870d9a7-599c-4bce-9847-3f9ff349eef5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19838740-7aed-4af3-9ae2-9ce935c1db9f" type="checkbox" ><label for="19838740-7aed-4af3-9ae2-9ce935c1db9f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 {color: black;background-color: white;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 pre{padding: 0;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-toggleable {background-color: white;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-item {z-index: 1;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-parallel-item:only-child::after {width: 0;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-365c4cc6-b6ac-48f7-a42b-8e404cae9ba9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e79ad98-9041-4966-9c2a-22dddf2b945d" type="checkbox" ><label for="7e79ad98-9041-4966-9c2a-22dddf2b945d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bb7dab3-4a39-42df-bdec-3ecee0ca7c7c" type="checkbox" ><label for="8bb7dab3-4a39-42df-bdec-3ecee0ca7c7c" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6df0adf7-349a-4160-ae2a-2bdb60d47342" type="checkbox" ><label for="6df0adf7-349a-4160-ae2a-2bdb60d47342" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d8967e5-90e3-466f-aba7-a59ea280e453" type="checkbox" ><label for="2d8967e5-90e3-466f-aba7-a59ea280e453" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35994cdd-d70f-40ea-bbb7-4568a3451331" type="checkbox" ><label for="35994cdd-d70f-40ea-bbb7-4568a3451331" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3379eea-1714-4074-83d1-df2560ca54e1" type="checkbox" ><label for="a3379eea-1714-4074-83d1-df2560ca54e1" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83e2a77d-3531-4b07-8c10-8c82e1748312" type="checkbox" ><label for="83e2a77d-3531-4b07-8c10-8c82e1748312" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4ca41b8-2ac5-435c-8efb-31001f2ca20a" type="checkbox" ><label for="c4ca41b8-2ac5-435c-8efb-31001f2ca20a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf4974ee-43e0-4510-bef4-b21975c39276" type="checkbox" ><label for="cf4974ee-43e0-4510-bef4-b21975c39276" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 {color: black;background-color: white;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 pre{padding: 0;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-toggleable {background-color: white;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-item {z-index: 1;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-parallel-item:only-child::after {width: 0;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b892d356-7e5c-45d7-8649-f9162f47b4a8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b892d356-7e5c-45d7-8649-f9162f47b4a8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2189091-6663-47d6-94b2-451d3a80461b" type="checkbox" ><label for="c2189091-6663-47d6-94b2-451d3a80461b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76a1c10d-b921-4c2c-a2a3-ad33e4b7498b" type="checkbox" ><label for="76a1c10d-b921-4c2c-a2a3-ad33e4b7498b" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="037c4dd4-cb46-4e17-b789-9b6c7d05f67f" type="checkbox" ><label for="037c4dd4-cb46-4e17-b789-9b6c7d05f67f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad028414-ff44-4ac6-9f34-d73a728a2a3d" type="checkbox" ><label for="ad028414-ff44-4ac6-9f34-d73a728a2a3d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad217a81-6cd1-4e73-814f-5d4601ab4fe8" type="checkbox" ><label for="ad217a81-6cd1-4e73-814f-5d4601ab4fe8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18797d11-df43-4f30-a794-9303a28c7361" type="checkbox" ><label for="18797d11-df43-4f30-a794-9303a28c7361" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7ba1f5c-7259-4a2d-b2df-70ae00d5a91d" type="checkbox" ><label for="e7ba1f5c-7259-4a2d-b2df-70ae00d5a91d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b5344f7-5969-4ae2-8b80-d785565bf030" type="checkbox" ><label for="1b5344f7-5969-4ae2-8b80-d785565bf030" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea5eb6d6-d3df-4bf5-811c-372d9fc593b3" type="checkbox" ><label for="ea5eb6d6-d3df-4bf5-811c-372d9fc593b3" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
