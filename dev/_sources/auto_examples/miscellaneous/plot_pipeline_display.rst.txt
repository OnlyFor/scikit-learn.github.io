
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-aa4930b2-157a-49da-9c3b-f929219ad69b {color: black;background-color: white;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b pre{padding: 0;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-toggleable {background-color: white;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-estimator:hover {background-color: #d4ebff;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-item {z-index: 1;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-parallel-item:only-child::after {width: 0;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-aa4930b2-157a-49da-9c3b-f929219ad69b div.sk-text-repr-fallback {display: none;}</style><div id="sk-aa4930b2-157a-49da-9c3b-f929219ad69b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ccdd29b-a8f2-491c-adf4-ca63a24978b1" type="checkbox" ><label for="4ccdd29b-a8f2-491c-adf4-ca63a24978b1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6300f8f0-2873-455f-bf70-5b285336bbd3" type="checkbox" ><label for="6300f8f0-2873-455f-bf70-5b285336bbd3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02889a0d-51f5-42dc-88a4-bd8c1041a0c9" type="checkbox" ><label for="02889a0d-51f5-42dc-88a4-bd8c1041a0c9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 {color: black;background-color: white;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 pre{padding: 0;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-toggleable {background-color: white;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-estimator:hover {background-color: #d4ebff;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-item {z-index: 1;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-parallel-item:only-child::after {width: 0;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-89e7471b-4036-4cf1-b0ba-675ef9db6016 div.sk-text-repr-fallback {display: none;}</style><div id="sk-89e7471b-4036-4cf1-b0ba-675ef9db6016" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b654e428-e760-4d4c-b60f-db76d02257e2" type="checkbox" ><label for="b654e428-e760-4d4c-b60f-db76d02257e2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="592f8e23-072c-40ec-a9ad-3abe7f921b19" type="checkbox" ><label for="592f8e23-072c-40ec-a9ad-3abe7f921b19" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9e73ce3-4c3c-4612-abe1-b4b407451ac3" type="checkbox" ><label for="f9e73ce3-4c3c-4612-abe1-b4b407451ac3" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e6f4aac-8081-4968-9d39-73f8fd852845" type="checkbox" ><label for="7e6f4aac-8081-4968-9d39-73f8fd852845" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 {color: black;background-color: white;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 pre{padding: 0;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-toggleable {background-color: white;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-estimator:hover {background-color: #d4ebff;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-item {z-index: 1;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-parallel-item:only-child::after {width: 0;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-af1a78ee-8a0a-4997-bfba-9ba45b579780 div.sk-text-repr-fallback {display: none;}</style><div id="sk-af1a78ee-8a0a-4997-bfba-9ba45b579780" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ec18ae9-4351-4e11-a4bc-557ff6f9a3a2" type="checkbox" ><label for="8ec18ae9-4351-4e11-a4bc-557ff6f9a3a2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78e101cd-2d8d-45f4-bfc8-03d8ccd05939" type="checkbox" ><label for="78e101cd-2d8d-45f4-bfc8-03d8ccd05939" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a06d29eb-06f4-43d8-bc5c-c50ee45b042c" type="checkbox" ><label for="a06d29eb-06f4-43d8-bc5c-c50ee45b042c" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 {color: black;background-color: white;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 pre{padding: 0;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-toggleable {background-color: white;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-item {z-index: 1;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-parallel-item:only-child::after {width: 0;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-de8045bc-a0ce-427e-aafe-508f6f8b4be5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="907dff09-d0c9-4e8b-8b80-6ff7c85576ac" type="checkbox" ><label for="907dff09-d0c9-4e8b-8b80-6ff7c85576ac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ffcb8af2-7860-4d92-be6e-cf52c4be0b9a" type="checkbox" ><label for="ffcb8af2-7860-4d92-be6e-cf52c4be0b9a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bba2b0b-761b-4515-a6fd-ce4a23f4f476" type="checkbox" ><label for="2bba2b0b-761b-4515-a6fd-ce4a23f4f476" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d7eabf0-c894-4380-8fd7-43ee2b156d2d" type="checkbox" ><label for="5d7eabf0-c894-4380-8fd7-43ee2b156d2d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9cee232-818e-4cf8-b909-933e7c5f918c" type="checkbox" ><label for="d9cee232-818e-4cf8-b909-933e7c5f918c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72eb734e-fd7e-4450-bc34-8c85bf9cd97f" type="checkbox" ><label for="72eb734e-fd7e-4450-bc34-8c85bf9cd97f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64fddde8-64d7-48a4-ba2a-c9b28906141b" type="checkbox" ><label for="64fddde8-64d7-48a4-ba2a-c9b28906141b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05d97ae8-1f09-472f-a004-e24bf46368ea" type="checkbox" ><label for="05d97ae8-1f09-472f-a004-e24bf46368ea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3232600f-4c16-4c43-a1fa-aec95edede26" type="checkbox" ><label for="3232600f-4c16-4c43-a1fa-aec95edede26" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 {color: black;background-color: white;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 pre{padding: 0;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-toggleable {background-color: white;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-item {z-index: 1;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-parallel-item:only-child::after {width: 0;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1e9b96e1-b16e-42ac-b255-e217d9304ea2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="131b730b-5e1b-44d3-bb32-04e9d1b72f9b" type="checkbox" ><label for="131b730b-5e1b-44d3-bb32-04e9d1b72f9b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3057cf20-9245-4c4f-afdd-934bf93bf077" type="checkbox" ><label for="3057cf20-9245-4c4f-afdd-934bf93bf077" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5a6adc8-8b82-463a-9dd5-bfe0fcc4289d" type="checkbox" ><label for="c5a6adc8-8b82-463a-9dd5-bfe0fcc4289d" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aca75caa-0d05-4263-9096-f8376388a06c" type="checkbox" ><label for="aca75caa-0d05-4263-9096-f8376388a06c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34b132ae-aa05-4017-b460-902c918ea76b" type="checkbox" ><label for="34b132ae-aa05-4017-b460-902c918ea76b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5c412d4-cfb6-4dd0-a68c-aec4a2ccafc6" type="checkbox" ><label for="f5c412d4-cfb6-4dd0-a68c-aec4a2ccafc6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86174d46-10aa-423e-bbac-62cd55f3d297" type="checkbox" ><label for="86174d46-10aa-423e-bbac-62cd55f3d297" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="210f5aa9-258f-45d4-8c19-7996f0a50dcc" type="checkbox" ><label for="210f5aa9-258f-45d4-8c19-7996f0a50dcc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d95f2e3-29fc-4736-b3dc-ec04ca3d0f83" type="checkbox" ><label for="6d95f2e3-29fc-4736-b3dc-ec04ca3d0f83" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
