
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-15e3a1e6-5d46-422b-9274-9adea1488988 {color: black;background-color: white;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 pre{padding: 0;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-toggleable {background-color: white;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-estimator:hover {background-color: #d4ebff;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-item {z-index: 1;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-parallel-item:only-child::after {width: 0;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-15e3a1e6-5d46-422b-9274-9adea1488988 div.sk-text-repr-fallback {display: none;}</style><div id="sk-15e3a1e6-5d46-422b-9274-9adea1488988" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="051a11a1-bab6-4cc0-bc8a-8b7272fa0edc" type="checkbox" ><label for="051a11a1-bab6-4cc0-bc8a-8b7272fa0edc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="735103ef-0c0c-4482-a9b8-085db30d4f2f" type="checkbox" ><label for="735103ef-0c0c-4482-a9b8-085db30d4f2f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de0d0bcd-aa85-4841-afc9-ca0a19e3a1fc" type="checkbox" ><label for="de0d0bcd-aa85-4841-afc9-ca0a19e3a1fc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9228ccc0-07ae-4790-a908-d801b1306760 {color: black;background-color: white;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 pre{padding: 0;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-toggleable {background-color: white;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-item {z-index: 1;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-parallel-item:only-child::after {width: 0;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9228ccc0-07ae-4790-a908-d801b1306760 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9228ccc0-07ae-4790-a908-d801b1306760" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27d5e9be-386d-4b0d-90bd-4f2bcc7cc430" type="checkbox" ><label for="27d5e9be-386d-4b0d-90bd-4f2bcc7cc430" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="962d001e-f56b-40ff-829d-47159415d368" type="checkbox" ><label for="962d001e-f56b-40ff-829d-47159415d368" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee279471-96a5-4db5-9edc-45940c21c45b" type="checkbox" ><label for="ee279471-96a5-4db5-9edc-45940c21c45b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9af9c226-05d1-4ff0-83fc-55a7d6d97f7c" type="checkbox" ><label for="9af9c226-05d1-4ff0-83fc-55a7d6d97f7c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0916a0c7-3635-4527-af8b-cc838fa8255a {color: black;background-color: white;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a pre{padding: 0;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-toggleable {background-color: white;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-estimator:hover {background-color: #d4ebff;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-item {z-index: 1;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-parallel-item:only-child::after {width: 0;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0916a0c7-3635-4527-af8b-cc838fa8255a div.sk-text-repr-fallback {display: none;}</style><div id="sk-0916a0c7-3635-4527-af8b-cc838fa8255a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70d5f4bd-e0bd-45fd-9ed6-e6120d01c8d1" type="checkbox" ><label for="70d5f4bd-e0bd-45fd-9ed6-e6120d01c8d1" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38fef616-e55c-44c6-953f-2d3843c940fd" type="checkbox" ><label for="38fef616-e55c-44c6-953f-2d3843c940fd" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67170bca-439e-42fe-8621-2d4b0aaed6de" type="checkbox" ><label for="67170bca-439e-42fe-8621-2d4b0aaed6de" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-efc9b460-599e-4166-9626-629264e6e201 {color: black;background-color: white;}#sk-efc9b460-599e-4166-9626-629264e6e201 pre{padding: 0;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-toggleable {background-color: white;}#sk-efc9b460-599e-4166-9626-629264e6e201 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-efc9b460-599e-4166-9626-629264e6e201 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-efc9b460-599e-4166-9626-629264e6e201 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-efc9b460-599e-4166-9626-629264e6e201 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-efc9b460-599e-4166-9626-629264e6e201 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-efc9b460-599e-4166-9626-629264e6e201 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-estimator:hover {background-color: #d4ebff;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-item {z-index: 1;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-parallel-item:only-child::after {width: 0;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-efc9b460-599e-4166-9626-629264e6e201 div.sk-text-repr-fallback {display: none;}</style><div id="sk-efc9b460-599e-4166-9626-629264e6e201" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="551d8729-87dc-4840-8e8a-ca3f062d2f37" type="checkbox" ><label for="551d8729-87dc-4840-8e8a-ca3f062d2f37" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f90e0377-b41e-43d8-8b9f-501e832978ce" type="checkbox" ><label for="f90e0377-b41e-43d8-8b9f-501e832978ce" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c178d207-3bca-4c26-821e-8272b2089664" type="checkbox" ><label for="c178d207-3bca-4c26-821e-8272b2089664" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="401769f2-2b58-434a-a9e8-bbdacb11d3d4" type="checkbox" ><label for="401769f2-2b58-434a-a9e8-bbdacb11d3d4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fc6b453-0f16-4796-b525-20a4919fb9d9" type="checkbox" ><label for="4fc6b453-0f16-4796-b525-20a4919fb9d9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97d73434-c15c-4043-a095-f0f32bd45ae8" type="checkbox" ><label for="97d73434-c15c-4043-a095-f0f32bd45ae8" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33e4b5bc-5e3f-4c1b-9891-61e8ad453ebc" type="checkbox" ><label for="33e4b5bc-5e3f-4c1b-9891-61e8ad453ebc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e2e1786-a80b-42df-8627-6e38ca9942b2" type="checkbox" ><label for="6e2e1786-a80b-42df-8627-6e38ca9942b2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3279863c-985b-4571-8bea-9fbbfa8b7cc9" type="checkbox" ><label for="3279863c-985b-4571-8bea-9fbbfa8b7cc9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de {color: black;background-color: white;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de pre{padding: 0;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-toggleable {background-color: white;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-estimator:hover {background-color: #d4ebff;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-item {z-index: 1;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-parallel-item:only-child::after {width: 0;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de div.sk-text-repr-fallback {display: none;}</style><div id="sk-4a3af7cc-3ffa-4880-a79e-0f42f8c135de" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1db67adc-2958-46e8-9d79-04e20ab55389" type="checkbox" ><label for="1db67adc-2958-46e8-9d79-04e20ab55389" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95bee9ab-6955-4daf-a962-0acccb933eff" type="checkbox" ><label for="95bee9ab-6955-4daf-a962-0acccb933eff" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1411954-c2b6-4c40-8ff5-922f622a4ae6" type="checkbox" ><label for="c1411954-c2b6-4c40-8ff5-922f622a4ae6" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15fb98f1-791d-4024-bd83-7e9196b95c87" type="checkbox" ><label for="15fb98f1-791d-4024-bd83-7e9196b95c87" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="231be700-b98c-4c42-be2c-9e8a4c255fbe" type="checkbox" ><label for="231be700-b98c-4c42-be2c-9e8a4c255fbe" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a14081e-8865-4284-87a1-a98fa63c8f9a" type="checkbox" ><label for="5a14081e-8865-4284-87a1-a98fa63c8f9a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="604344d6-04b8-462c-b285-ce7bc3be0545" type="checkbox" ><label for="604344d6-04b8-462c-b285-ce7bc3be0545" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4f55052-1a8e-4587-882d-d10beaf08f1b" type="checkbox" ><label for="e4f55052-1a8e-4587-882d-d10beaf08f1b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22ee7354-489e-4dca-8134-7bac98f1a564" type="checkbox" ><label for="22ee7354-489e-4dca-8134-7bac98f1a564" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
