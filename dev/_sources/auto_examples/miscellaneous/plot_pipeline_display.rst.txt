
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-32026d8b-5575-4d09-a049-82378795df93 {color: black;background-color: white;}#sk-32026d8b-5575-4d09-a049-82378795df93 pre{padding: 0;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-toggleable {background-color: white;}#sk-32026d8b-5575-4d09-a049-82378795df93 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-32026d8b-5575-4d09-a049-82378795df93 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-32026d8b-5575-4d09-a049-82378795df93 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-32026d8b-5575-4d09-a049-82378795df93 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-32026d8b-5575-4d09-a049-82378795df93 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32026d8b-5575-4d09-a049-82378795df93 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-estimator:hover {background-color: #d4ebff;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-item {z-index: 1;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-parallel-item:only-child::after {width: 0;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-32026d8b-5575-4d09-a049-82378795df93 div.sk-text-repr-fallback {display: none;}</style><div id="sk-32026d8b-5575-4d09-a049-82378795df93" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f26e0ec5-4f6a-4e67-9c43-91dc70fd01cb" type="checkbox" ><label for="f26e0ec5-4f6a-4e67-9c43-91dc70fd01cb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b27c87e4-355c-4d50-a469-047aaad9c7d1" type="checkbox" ><label for="b27c87e4-355c-4d50-a469-047aaad9c7d1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f21198e3-6df0-4293-b89c-b38e43b31e42" type="checkbox" ><label for="f21198e3-6df0-4293-b89c-b38e43b31e42" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifier step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a {color: black;background-color: white;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a pre{padding: 0;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-toggleable {background-color: white;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-estimator:hover {background-color: #d4ebff;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-item {z-index: 1;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-parallel-item:only-child::after {width: 0;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a div.sk-text-repr-fallback {display: none;}</style><div id="sk-b29f8d08-4cd4-48c8-b171-bcd98885c51a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18ed4540-ba11-4703-adae-a99d39294b13" type="checkbox" ><label for="18ed4540-ba11-4703-adae-a99d39294b13" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a112860-100b-4f32-a272-46fee3b106b2" type="checkbox" ><label for="0a112860-100b-4f32-a272-46fee3b106b2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c8d4b88-1b06-431e-b6e6-68ff0db08491" type="checkbox" ><label for="6c8d4b88-1b06-431e-b6e6-68ff0db08491" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a120135-c4e4-4a2b-9891-918de2c6dbc3" type="checkbox" ><label for="4a120135-c4e4-4a2b-9891-918de2c6dbc3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd {color: black;background-color: white;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd pre{padding: 0;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-toggleable {background-color: white;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-estimator:hover {background-color: #d4ebff;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-item {z-index: 1;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-parallel-item:only-child::after {width: 0;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd div.sk-text-repr-fallback {display: none;}</style><div id="sk-0e4ed6d1-12e4-4fa1-8467-c22f08ffd8dd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ad13682-703b-431f-a6b7-40b586c0981a" type="checkbox" ><label for="7ad13682-703b-431f-a6b7-40b586c0981a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fc6f5bf-6f9f-449e-b663-c1f87ba6e38a" type="checkbox" ><label for="7fc6f5bf-6f9f-449e-b663-c1f87ba6e38a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b231cbb-8249-4000-8f25-b8b423bdd26a" type="checkbox" ><label for="6b231cbb-8249-4000-8f25-b8b423bdd26a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce {color: black;background-color: white;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce pre{padding: 0;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-toggleable {background-color: white;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-estimator:hover {background-color: #d4ebff;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-item {z-index: 1;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-parallel-item:only-child::after {width: 0;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce div.sk-text-repr-fallback {display: none;}</style><div id="sk-d414e72d-cfd1-4d7f-9002-52ef3041b2ce" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c9d9e08-6c69-4f9b-97db-caec5da571f0" type="checkbox" ><label for="6c9d9e08-6c69-4f9b-97db-caec5da571f0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fc74b52-07ba-458e-bdd5-8d4de4d8de79" type="checkbox" ><label for="1fc74b52-07ba-458e-bdd5-8d4de4d8de79" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="657d8b15-7086-44e1-a0b6-e048edccda0f" type="checkbox" ><label for="657d8b15-7086-44e1-a0b6-e048edccda0f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70593e26-eca2-4345-ae6b-5ea56dbc35f6" type="checkbox" ><label for="70593e26-eca2-4345-ae6b-5ea56dbc35f6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="618fc195-4e47-442c-a2e5-dc8ca9966484" type="checkbox" ><label for="618fc195-4e47-442c-a2e5-dc8ca9966484" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="709c75a2-498f-4e40-a297-51211e50bbbd" type="checkbox" ><label for="709c75a2-498f-4e40-a297-51211e50bbbd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5691b472-0b00-4ff8-b190-27449cfd2115" type="checkbox" ><label for="5691b472-0b00-4ff8-b190-27449cfd2115" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04f19d7f-6ab9-4f05-a2bb-5a2f0aea0171" type="checkbox" ><label for="04f19d7f-6ab9-4f05-a2bb-5a2f0aea0171" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f88c8f80-1186-459a-b066-3ca48290ac0b" type="checkbox" ><label for="f88c8f80-1186-459a-b066-3ca48290ac0b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 {color: black;background-color: white;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 pre{padding: 0;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-toggleable {background-color: white;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-item {z-index: 1;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-parallel-item:only-child::after {width: 0;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a413a0c6-bb46-4bd5-a655-8d7a5223f3f8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf9b805d-030b-44c5-a638-38e97de43ea1" type="checkbox" ><label for="cf9b805d-030b-44c5-a638-38e97de43ea1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="831899b2-ed59-4abc-87a9-e8d5bd006714" type="checkbox" ><label for="831899b2-ed59-4abc-87a9-e8d5bd006714" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="efc9b957-22ff-431c-a982-087993b1ee7d" type="checkbox" ><label for="efc9b957-22ff-431c-a982-087993b1ee7d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="602f5679-72b0-46bc-ace1-560d1cfad178" type="checkbox" ><label for="602f5679-72b0-46bc-ace1-560d1cfad178" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0435f06b-7b7f-4442-8f5b-8639c8f16939" type="checkbox" ><label for="0435f06b-7b7f-4442-8f5b-8639c8f16939" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f873135e-fd4e-4361-a9e0-d3b878ced6ff" type="checkbox" ><label for="f873135e-fd4e-4361-a9e0-d3b878ced6ff" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d95dfc29-07bf-4be3-9cc7-0010298cebc9" type="checkbox" ><label for="d95dfc29-07bf-4be3-9cc7-0010298cebc9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68083213-b195-430f-b1b5-daffc2797172" type="checkbox" ><label for="68083213-b195-430f-b1b5-daffc2797172" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43dcd1ef-c0b8-41e0-90c6-4a31df68c41d" type="checkbox" ><label for="43dcd1ef-c0b8-41e0-90c6-4a31df68c41d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="728d30d0-268a-4c03-9353-ce7c7410519e" type="checkbox" ><label for="728d30d0-268a-4c03-9353-ce7c7410519e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.084 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
