
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c {color: black;background-color: white;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c pre{padding: 0;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-toggleable {background-color: white;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-estimator:hover {background-color: #d4ebff;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-item {z-index: 1;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-parallel-item:only-child::after {width: 0;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-af59ba76-7137-4acc-8feb-38d2c7042c8c div.sk-text-repr-fallback {display: none;}</style><div id="sk-af59ba76-7137-4acc-8feb-38d2c7042c8c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b213bc88-079f-42f5-8e6a-155b12632a9f" type="checkbox" ><label class="sk-toggleable__label" for="b213bc88-079f-42f5-8e6a-155b12632a9f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3fb29254-5897-44a3-81f8-d75b2f4bb139" type="checkbox" ><label class="sk-toggleable__label" for="3fb29254-5897-44a3-81f8-d75b2f4bb139">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eef82cad-cb50-48cd-9a9b-de2a62d3014e" type="checkbox" ><label class="sk-toggleable__label" for="eef82cad-cb50-48cd-9a9b-de2a62d3014e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5724327a-4e49-409b-b626-492d9d9d680a {color: black;background-color: white;}#sk-5724327a-4e49-409b-b626-492d9d9d680a pre{padding: 0;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-toggleable {background-color: white;}#sk-5724327a-4e49-409b-b626-492d9d9d680a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5724327a-4e49-409b-b626-492d9d9d680a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5724327a-4e49-409b-b626-492d9d9d680a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-estimator:hover {background-color: #d4ebff;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-item {z-index: 1;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-parallel-item:only-child::after {width: 0;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5724327a-4e49-409b-b626-492d9d9d680a div.sk-text-repr-fallback {display: none;}</style><div id="sk-5724327a-4e49-409b-b626-492d9d9d680a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bae8cc33-e51b-41ab-86d7-ae18a1a65dec" type="checkbox" ><label class="sk-toggleable__label" for="bae8cc33-e51b-41ab-86d7-ae18a1a65dec">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="267a0214-9daf-4848-8acd-46c3da258a75" type="checkbox" ><label class="sk-toggleable__label" for="267a0214-9daf-4848-8acd-46c3da258a75">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="438126e1-f450-4348-8669-625a36297d58" type="checkbox" ><label class="sk-toggleable__label" for="438126e1-f450-4348-8669-625a36297d58">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e0d1ca1-ec14-4981-aa54-a19cc2657fdd" type="checkbox" ><label class="sk-toggleable__label" for="6e0d1ca1-ec14-4981-aa54-a19cc2657fdd">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 {color: black;background-color: white;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 pre{padding: 0;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-toggleable {background-color: white;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-item {z-index: 1;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-parallel-item:only-child::after {width: 0;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-39374ba5-cacd-4b95-b28b-1d9347292db4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-39374ba5-cacd-4b95-b28b-1d9347292db4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb51c436-5036-4450-a16e-287d7a73f1e6" type="checkbox" ><label class="sk-toggleable__label" for="eb51c436-5036-4450-a16e-287d7a73f1e6">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc4056fe-e4db-4fdb-8344-5ff6c3f5ae04" type="checkbox" ><label class="sk-toggleable__label" for="cc4056fe-e4db-4fdb-8344-5ff6c3f5ae04">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25f472bb-0cc9-4707-92b6-6cc058a87208" type="checkbox" ><label class="sk-toggleable__label" for="25f472bb-0cc9-4707-92b6-6cc058a87208">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 {color: black;background-color: white;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 pre{padding: 0;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-toggleable {background-color: white;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-item {z-index: 1;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8dc1c923-adff-4d0e-80cc-c607482061c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8dc1c923-adff-4d0e-80cc-c607482061c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a019aaf-4e95-4fcd-9a00-0ca8d4b56bf8" type="checkbox" ><label class="sk-toggleable__label" for="4a019aaf-4e95-4fcd-9a00-0ca8d4b56bf8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="154abd49-6184-4e1e-8bae-e64bc9395b1d" type="checkbox" ><label class="sk-toggleable__label" for="154abd49-6184-4e1e-8bae-e64bc9395b1d">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97121a60-3024-44d1-8ca0-43516e56dbbc" type="checkbox" ><label class="sk-toggleable__label" for="97121a60-3024-44d1-8ca0-43516e56dbbc">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5dc7a3f-d45b-469c-9951-c67f23c2139f" type="checkbox" ><label class="sk-toggleable__label" for="c5dc7a3f-d45b-469c-9951-c67f23c2139f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="181215d4-701b-4cda-afdd-a6e153adf59a" type="checkbox" ><label class="sk-toggleable__label" for="181215d4-701b-4cda-afdd-a6e153adf59a">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acf6744e-a4a3-47b0-bd45-9eeb26a6aa71" type="checkbox" ><label class="sk-toggleable__label" for="acf6744e-a4a3-47b0-bd45-9eeb26a6aa71">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69910847-e188-465b-9e6c-1b8b3ce50870" type="checkbox" ><label class="sk-toggleable__label" for="69910847-e188-465b-9e6c-1b8b3ce50870">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b625631-7bcb-4926-bee6-e88ece15b881" type="checkbox" ><label class="sk-toggleable__label" for="4b625631-7bcb-4926-bee6-e88ece15b881">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2fb3b67-e201-4077-8acb-325e465080f7" type="checkbox" ><label class="sk-toggleable__label" for="d2fb3b67-e201-4077-8acb-325e465080f7">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 {color: black;background-color: white;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 pre{padding: 0;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-toggleable {background-color: white;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-item {z-index: 1;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-parallel-item:only-child::after {width: 0;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org.  See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d415f643-9f36-49d4-bce6-eb7cfb8e2514" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2454742-4f5f-41ac-9f13-0b6f83214517" type="checkbox" ><label class="sk-toggleable__label" for="a2454742-4f5f-41ac-9f13-0b6f83214517">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7dd4067-e818-4ebf-8b13-6945eb740caf" type="checkbox" ><label class="sk-toggleable__label" for="a7dd4067-e818-4ebf-8b13-6945eb740caf">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="780ad089-bd26-4c01-b90c-6c34f2925dfc" type="checkbox" ><label class="sk-toggleable__label" for="780ad089-bd26-4c01-b90c-6c34f2925dfc">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7fe2382-ef86-47e9-af9b-8354c25a06e3" type="checkbox" ><label class="sk-toggleable__label" for="b7fe2382-ef86-47e9-af9b-8354c25a06e3">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60da6f45-0d70-4fc1-8ed6-62c0d5c9ffa0" type="checkbox" ><label class="sk-toggleable__label" for="60da6f45-0d70-4fc1-8ed6-62c0d5c9ffa0">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6efb5bb3-188f-499e-a102-9bd91ea8ccc5" type="checkbox" ><label class="sk-toggleable__label" for="6efb5bb3-188f-499e-a102-9bd91ea8ccc5">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="729f3c44-7301-406a-8a3b-c311c9a5e24a" type="checkbox" ><label class="sk-toggleable__label" for="729f3c44-7301-406a-8a3b-c311c9a5e24a">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1bad212-ec98-4a35-89ef-3f403a20f96d" type="checkbox" ><label class="sk-toggleable__label" for="b1bad212-ec98-4a35-89ef-3f403a20f96d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9e5067f-65ff-4785-b9e9-7159e0ac9788" type="checkbox" ><label class="sk-toggleable__label" for="e9e5067f-65ff-4785-b9e9-7159e0ac9788">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.101 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
