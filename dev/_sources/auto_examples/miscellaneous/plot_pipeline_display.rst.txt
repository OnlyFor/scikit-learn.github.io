
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 {color: black;background-color: white;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 pre{padding: 0;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-toggleable {background-color: white;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-item {z-index: 1;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-parallel-item:only-child::after {width: 0;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d4c6b490-574b-4fba-aeed-14a4dcbc3a45" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dfb72a5e-1e71-4387-931a-b0dba8055ac5" type="checkbox" ><label for="dfb72a5e-1e71-4387-931a-b0dba8055ac5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9127563-3929-4f81-b030-0277c0d08ae2" type="checkbox" ><label for="b9127563-3929-4f81-b030-0277c0d08ae2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de09ac50-1e57-4743-b165-fc6ada594fe7" type="checkbox" ><label for="de09ac50-1e57-4743-b165-fc6ada594fe7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-284796a5-48aa-4725-95ef-4e49865600d5 {color: black;background-color: white;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 pre{padding: 0;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-toggleable {background-color: white;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-item {z-index: 1;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-parallel-item:only-child::after {width: 0;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-284796a5-48aa-4725-95ef-4e49865600d5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-284796a5-48aa-4725-95ef-4e49865600d5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bc4eed6-185c-453a-b64c-77d2a3023d83" type="checkbox" ><label for="5bc4eed6-185c-453a-b64c-77d2a3023d83" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd5192b0-1317-46c2-8882-476c74b6268c" type="checkbox" ><label for="cd5192b0-1317-46c2-8882-476c74b6268c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed5943fc-2e0e-4365-ad56-2bd302501548" type="checkbox" ><label for="ed5943fc-2e0e-4365-ad56-2bd302501548" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ca50021-51b9-4ee1-b8f9-35be547e0fba" type="checkbox" ><label for="2ca50021-51b9-4ee1-b8f9-35be547e0fba" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-42981678-0041-435d-b9d8-0a160fbb5cbc {color: black;background-color: white;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc pre{padding: 0;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-toggleable {background-color: white;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-estimator:hover {background-color: #d4ebff;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-item {z-index: 1;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-parallel-item:only-child::after {width: 0;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-42981678-0041-435d-b9d8-0a160fbb5cbc div.sk-text-repr-fallback {display: none;}</style><div id="sk-42981678-0041-435d-b9d8-0a160fbb5cbc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a2bbc5ef-64eb-4604-ae78-e71a6a60b354" type="checkbox" ><label for="a2bbc5ef-64eb-4604-ae78-e71a6a60b354" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="feab87b3-8e0d-4be0-a2d9-bd02ef1f82c6" type="checkbox" ><label for="feab87b3-8e0d-4be0-a2d9-bd02ef1f82c6" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0156423-56d5-43bb-8699-692079285409" type="checkbox" ><label for="a0156423-56d5-43bb-8699-692079285409" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 {color: black;background-color: white;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 pre{padding: 0;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-toggleable {background-color: white;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-item {z-index: 1;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-parallel-item:only-child::after {width: 0;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5bda742a-76dc-4691-90f4-2aa9de1da5a2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40147e2d-2e42-47b9-8a5e-feae25408cf0" type="checkbox" ><label for="40147e2d-2e42-47b9-8a5e-feae25408cf0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="152e8b1a-b5eb-4f5a-88c2-97d69334daee" type="checkbox" ><label for="152e8b1a-b5eb-4f5a-88c2-97d69334daee" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3014edad-a95e-43e8-93c5-8195c433a823" type="checkbox" ><label for="3014edad-a95e-43e8-93c5-8195c433a823" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0b5681e-d481-4341-a981-f81d89b34be2" type="checkbox" ><label for="e0b5681e-d481-4341-a981-f81d89b34be2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0193528-045f-4c0f-8a35-e403acfff60d" type="checkbox" ><label for="b0193528-045f-4c0f-8a35-e403acfff60d" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74a50bd9-acaf-4879-8f95-9a4065ec0798" type="checkbox" ><label for="74a50bd9-acaf-4879-8f95-9a4065ec0798" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f290838-c989-4749-ab40-8ccbbe374072" type="checkbox" ><label for="9f290838-c989-4749-ab40-8ccbbe374072" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="719c2e04-0814-47a2-b83c-d4cc0c46d4ab" type="checkbox" ><label for="719c2e04-0814-47a2-b83c-d4cc0c46d4ab" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8aa1df2c-53cc-46c7-b75d-15c4566e93ab" type="checkbox" ><label for="8aa1df2c-53cc-46c7-b75d-15c4566e93ab" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f5971bd3-60bf-4d00-8044-259aa379e92b {color: black;background-color: white;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b pre{padding: 0;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-toggleable {background-color: white;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-estimator:hover {background-color: #d4ebff;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-item {z-index: 1;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-parallel-item:only-child::after {width: 0;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f5971bd3-60bf-4d00-8044-259aa379e92b div.sk-text-repr-fallback {display: none;}</style><div id="sk-f5971bd3-60bf-4d00-8044-259aa379e92b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f983d26-a3cf-4c9d-ad4e-422e93fa2063" type="checkbox" ><label for="1f983d26-a3cf-4c9d-ad4e-422e93fa2063" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc216a28-1c66-4d0b-b200-fd93c00c636a" type="checkbox" ><label for="cc216a28-1c66-4d0b-b200-fd93c00c636a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="158b8ada-32d6-4fc6-ba42-59214067f60f" type="checkbox" ><label for="158b8ada-32d6-4fc6-ba42-59214067f60f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1db2d82-2db0-4898-995f-ff014252ed24" type="checkbox" ><label for="a1db2d82-2db0-4898-995f-ff014252ed24" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d70188f6-e535-4725-a3e6-2b9b28b070df" type="checkbox" ><label for="d70188f6-e535-4725-a3e6-2b9b28b070df" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90b10ec8-83e3-4771-9536-4758c0dae1df" type="checkbox" ><label for="90b10ec8-83e3-4771-9536-4758c0dae1df" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ff877ac-6816-45a1-81c4-bf04366e701d" type="checkbox" ><label for="0ff877ac-6816-45a1-81c4-bf04366e701d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d6ef5f5-d74a-4e2e-94eb-5b48d168d504" type="checkbox" ><label for="7d6ef5f5-d74a-4e2e-94eb-5b48d168d504" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5af99ca9-eb77-432f-8fa2-65038ae148e3" type="checkbox" ><label for="5af99ca9-eb77-432f-8fa2-65038ae148e3" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
