
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-730733c0-40c3-4e85-9347-32572520d757 {color: black;background-color: white;}#sk-730733c0-40c3-4e85-9347-32572520d757 pre{padding: 0;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-toggleable {background-color: white;}#sk-730733c0-40c3-4e85-9347-32572520d757 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-730733c0-40c3-4e85-9347-32572520d757 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-730733c0-40c3-4e85-9347-32572520d757 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-730733c0-40c3-4e85-9347-32572520d757 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-730733c0-40c3-4e85-9347-32572520d757 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-730733c0-40c3-4e85-9347-32572520d757 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-estimator:hover {background-color: #d4ebff;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-item {z-index: 1;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-parallel-item:only-child::after {width: 0;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-730733c0-40c3-4e85-9347-32572520d757 div.sk-text-repr-fallback {display: none;}</style><div id="sk-730733c0-40c3-4e85-9347-32572520d757" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7710dabe-5d66-4ca0-b5c7-401cc557406e" type="checkbox" ><label for="7710dabe-5d66-4ca0-b5c7-401cc557406e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f0280cc-fed6-4de9-b9fd-1dddb6f50be4" type="checkbox" ><label for="5f0280cc-fed6-4de9-b9fd-1dddb6f50be4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42ec2920-26e2-43d6-8953-98bc760a218a" type="checkbox" ><label for="42ec2920-26e2-43d6-8953-98bc760a218a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a {color: black;background-color: white;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a pre{padding: 0;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-toggleable {background-color: white;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-estimator:hover {background-color: #d4ebff;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-item {z-index: 1;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-parallel-item:only-child::after {width: 0;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a div.sk-text-repr-fallback {display: none;}</style><div id="sk-a7d164ef-b711-4d9f-b392-3c67e591ed3a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f2a28fa-ce5a-4948-8094-d203ba128b27" type="checkbox" ><label for="1f2a28fa-ce5a-4948-8094-d203ba128b27" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eeef4ae-6ea3-495a-862d-2d64d217bfee" type="checkbox" ><label for="0eeef4ae-6ea3-495a-862d-2d64d217bfee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="491b4c8a-ab5e-45c9-a3a1-bc9c1ad67c67" type="checkbox" ><label for="491b4c8a-ab5e-45c9-a3a1-bc9c1ad67c67" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9929e65a-36a7-4a72-9461-fa87cbb22255" type="checkbox" ><label for="9929e65a-36a7-4a72-9461-fa87cbb22255" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-69acc950-2aa6-497a-9e49-44231c5fd745 {color: black;background-color: white;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 pre{padding: 0;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-toggleable {background-color: white;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-estimator:hover {background-color: #d4ebff;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-item {z-index: 1;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-parallel-item:only-child::after {width: 0;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-69acc950-2aa6-497a-9e49-44231c5fd745 div.sk-text-repr-fallback {display: none;}</style><div id="sk-69acc950-2aa6-497a-9e49-44231c5fd745" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f97affb-def2-4137-a712-10ed8690c1eb" type="checkbox" ><label for="8f97affb-def2-4137-a712-10ed8690c1eb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="831e96b4-539a-4aeb-b329-67b8503355fe" type="checkbox" ><label for="831e96b4-539a-4aeb-b329-67b8503355fe" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69f94c70-b466-4cf8-a840-4a5dbbf784e1" type="checkbox" ><label for="69f94c70-b466-4cf8-a840-4a5dbbf784e1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2d6c68c0-6781-4a98-820d-172a923b8654 {color: black;background-color: white;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 pre{padding: 0;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-toggleable {background-color: white;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-item {z-index: 1;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-parallel-item:only-child::after {width: 0;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2d6c68c0-6781-4a98-820d-172a923b8654 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2d6c68c0-6781-4a98-820d-172a923b8654" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4b52481-1198-4834-a2f2-79c0650055fd" type="checkbox" ><label for="f4b52481-1198-4834-a2f2-79c0650055fd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="643528b5-e8ef-4b20-a1b5-ee526b23e6cf" type="checkbox" ><label for="643528b5-e8ef-4b20-a1b5-ee526b23e6cf" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36605ce9-2b65-4150-9655-dfeaa188564b" type="checkbox" ><label for="36605ce9-2b65-4150-9655-dfeaa188564b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04a6f97f-31e2-4c51-9121-bc9758e29384" type="checkbox" ><label for="04a6f97f-31e2-4c51-9121-bc9758e29384" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0d18d62-122d-4fe5-a71b-5062947bb79a" type="checkbox" ><label for="c0d18d62-122d-4fe5-a71b-5062947bb79a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b97f624-0a2c-4202-823d-45ab48bc2850" type="checkbox" ><label for="9b97f624-0a2c-4202-823d-45ab48bc2850" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ebcac7b-7f78-4e5c-b769-1101c6a93a47" type="checkbox" ><label for="6ebcac7b-7f78-4e5c-b769-1101c6a93a47" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e98058d-11b0-4171-8c44-69e984736921" type="checkbox" ><label for="1e98058d-11b0-4171-8c44-69e984736921" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e27b609-cfd4-41ec-b4c9-5d664d0c9d96" type="checkbox" ><label for="0e27b609-cfd4-41ec-b4c9-5d664d0c9d96" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc {color: black;background-color: white;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc pre{padding: 0;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-toggleable {background-color: white;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-estimator:hover {background-color: #d4ebff;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-item {z-index: 1;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-parallel-item:only-child::after {width: 0;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d5a76155-57b5-4e15-a53c-8f76681d01cc div.sk-text-repr-fallback {display: none;}</style><div id="sk-d5a76155-57b5-4e15-a53c-8f76681d01cc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97b0c8b5-5496-4a90-acad-045e6da728c2" type="checkbox" ><label for="97b0c8b5-5496-4a90-acad-045e6da728c2" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04287a50-b014-47ba-8561-fde7ca545fcb" type="checkbox" ><label for="04287a50-b014-47ba-8561-fde7ca545fcb" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9119048-1a65-47ae-b614-e3fa7be212ed" type="checkbox" ><label for="e9119048-1a65-47ae-b614-e3fa7be212ed" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01efbf6d-9246-4549-b87f-41644c0bd22c" type="checkbox" ><label for="01efbf6d-9246-4549-b87f-41644c0bd22c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2f83f03-c0e2-4b76-a7ad-cbd40e966fb3" type="checkbox" ><label for="c2f83f03-c0e2-4b76-a7ad-cbd40e966fb3" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d271a1d-e805-4f6e-9f44-cbedd3fbb8c9" type="checkbox" ><label for="1d271a1d-e805-4f6e-9f44-cbedd3fbb8c9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9c44cc8-a0f9-4faa-8791-161b14115e27" type="checkbox" ><label for="f9c44cc8-a0f9-4faa-8791-161b14115e27" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c83dc13-b5e7-4dfb-ad90-afc4935e92b0" type="checkbox" ><label for="0c83dc13-b5e7-4dfb-ad90-afc4935e92b0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb5116b0-d7d4-44fe-a376-a73cb60f9854" type="checkbox" ><label for="eb5116b0-d7d4-44fe-a376-a73cb60f9854" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
