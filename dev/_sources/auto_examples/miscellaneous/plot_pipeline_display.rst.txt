
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 {color: black;background-color: white;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 pre{padding: 0;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-toggleable {background-color: white;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-item {z-index: 1;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-parallel-item:only-child::after {width: 0;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-32e9615d-0876-4014-8ba3-4f1148aa87d2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-32e9615d-0876-4014-8ba3-4f1148aa87d2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d513c3e-06d1-4c9a-a08a-46f7f05bead2" type="checkbox" ><label for="2d513c3e-06d1-4c9a-a08a-46f7f05bead2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="769b01ce-d0bc-4c29-ba95-c4f70927c5ed" type="checkbox" ><label for="769b01ce-d0bc-4c29-ba95-c4f70927c5ed" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08a434b3-92e5-4b06-b207-8b900f0e322a" type="checkbox" ><label for="08a434b3-92e5-4b06-b207-8b900f0e322a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb {color: black;background-color: white;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb pre{padding: 0;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-toggleable {background-color: white;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-estimator:hover {background-color: #d4ebff;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-item {z-index: 1;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-parallel-item:only-child::after {width: 0;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb div.sk-text-repr-fallback {display: none;}</style><div id="sk-4cba9e7c-46f9-43e6-b1e9-40dc988b7aeb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15c80d55-d086-4199-8d18-c1a35ef76f67" type="checkbox" ><label for="15c80d55-d086-4199-8d18-c1a35ef76f67" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81d74a05-dd05-4b08-be59-2f106b6502fc" type="checkbox" ><label for="81d74a05-dd05-4b08-be59-2f106b6502fc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd014554-0ceb-44b0-998c-baa30ed7b4f9" type="checkbox" ><label for="fd014554-0ceb-44b0-998c-baa30ed7b4f9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acbd7587-d070-49fa-b802-870841cc43ba" type="checkbox" ><label for="acbd7587-d070-49fa-b802-870841cc43ba" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 {color: black;background-color: white;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 pre{padding: 0;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-toggleable {background-color: white;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-item {z-index: 1;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-parallel-item:only-child::after {width: 0;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b2343b92-8ddc-4dc4-ad2e-b12be337d946" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db90d8b8-5282-4bd8-bc17-5748834cbe35" type="checkbox" ><label for="db90d8b8-5282-4bd8-bc17-5748834cbe35" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eba56f9e-aa2f-4ea7-bb05-149e7df98f33" type="checkbox" ><label for="eba56f9e-aa2f-4ea7-bb05-149e7df98f33" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b94308f-7eae-4bff-a505-1b0a9db6cf0a" type="checkbox" ><label for="1b94308f-7eae-4bff-a505-1b0a9db6cf0a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 {color: black;background-color: white;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 pre{padding: 0;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-toggleable {background-color: white;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-estimator:hover {background-color: #d4ebff;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-item {z-index: 1;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-parallel-item:only-child::after {width: 0;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-27714c50-663c-47a5-9b0c-bddf2f34d399 div.sk-text-repr-fallback {display: none;}</style><div id="sk-27714c50-663c-47a5-9b0c-bddf2f34d399" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ede38c10-b5bf-4e6c-aabd-777dd674e60b" type="checkbox" ><label for="ede38c10-b5bf-4e6c-aabd-777dd674e60b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f92ab342-f89a-4ba9-9657-3576a5c5df92" type="checkbox" ><label for="f92ab342-f89a-4ba9-9657-3576a5c5df92" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87bf428d-2044-4d84-ab09-f9f337dac3bd" type="checkbox" ><label for="87bf428d-2044-4d84-ab09-f9f337dac3bd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f02eec9d-d290-49e9-a01f-653cb67ef686" type="checkbox" ><label for="f02eec9d-d290-49e9-a01f-653cb67ef686" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19c763f5-730a-4f62-a4ac-416c8ce18d5c" type="checkbox" ><label for="19c763f5-730a-4f62-a4ac-416c8ce18d5c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d09b0915-0a7f-433e-80f7-a41db98684b5" type="checkbox" ><label for="d09b0915-0a7f-433e-80f7-a41db98684b5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fe9d9f8-1b6e-4e34-9298-6b7b48d143a7" type="checkbox" ><label for="4fe9d9f8-1b6e-4e34-9298-6b7b48d143a7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68bc8629-b26f-4a07-aaea-d26de2fbbad6" type="checkbox" ><label for="68bc8629-b26f-4a07-aaea-d26de2fbbad6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d44a6c4b-c0a2-4df8-b19f-92b7c781704c" type="checkbox" ><label for="d44a6c4b-c0a2-4df8-b19f-92b7c781704c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 {color: black;background-color: white;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 pre{padding: 0;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-toggleable {background-color: white;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-item {z-index: 1;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-parallel-item:only-child::after {width: 0;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f7e5bb4b-5f4a-44d3-b128-824d62ff6104" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c99c6f6a-d4f2-4bce-9d3e-b135f7622cc1" type="checkbox" ><label for="c99c6f6a-d4f2-4bce-9d3e-b135f7622cc1" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e4bbb46-0a9e-4285-af9d-4610f28e6d45" type="checkbox" ><label for="4e4bbb46-0a9e-4285-af9d-4610f28e6d45" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8be6b8ee-cba1-4ec9-a226-2944afb7b6d7" type="checkbox" ><label for="8be6b8ee-cba1-4ec9-a226-2944afb7b6d7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="911b4b40-b204-443e-b41c-0d1cafd52017" type="checkbox" ><label for="911b4b40-b204-443e-b41c-0d1cafd52017" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d33fd77b-7cf0-4b7f-8e5f-20096511a909" type="checkbox" ><label for="d33fd77b-7cf0-4b7f-8e5f-20096511a909" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08aa9579-7440-49ad-95c3-6395d7d542f3" type="checkbox" ><label for="08aa9579-7440-49ad-95c3-6395d7d542f3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c853b07-bba0-412e-8997-2efe022c6a60" type="checkbox" ><label for="5c853b07-bba0-412e-8997-2efe022c6a60" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1333d62-f446-4ccb-a9c6-9c27c0a659ee" type="checkbox" ><label for="a1333d62-f446-4ccb-a9c6-9c27c0a659ee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="416b3a0d-45b0-4794-97ab-47c05e90d29a" type="checkbox" ><label for="416b3a0d-45b0-4794-97ab-47c05e90d29a" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
