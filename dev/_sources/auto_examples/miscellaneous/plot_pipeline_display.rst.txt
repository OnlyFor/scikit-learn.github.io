
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 {color: black;background-color: white;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 pre{padding: 0;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-toggleable {background-color: white;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-item {z-index: 1;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-parallel-item:only-child::after {width: 0;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cc2b7ea7-f460-4758-9c60-e33d31b7a387" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc8daad2-c556-4923-8643-8258c5c02b12" type="checkbox" ><label for="fc8daad2-c556-4923-8643-8258c5c02b12" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25348c31-5139-4fe3-af8f-fd4fe29669d9" type="checkbox" ><label for="25348c31-5139-4fe3-af8f-fd4fe29669d9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2080a2fb-ff6d-4eae-b9b2-87beca8b1a5a" type="checkbox" ><label for="2080a2fb-ff6d-4eae-b9b2-87beca8b1a5a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f {color: black;background-color: white;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f pre{padding: 0;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-toggleable {background-color: white;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-estimator:hover {background-color: #d4ebff;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-item {z-index: 1;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-parallel-item:only-child::after {width: 0;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f div.sk-text-repr-fallback {display: none;}</style><div id="sk-3582cdd5-28eb-4d14-a689-31f4612a7d5f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7076dc54-0055-4e71-9725-501f8371d570" type="checkbox" ><label for="7076dc54-0055-4e71-9725-501f8371d570" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8d8ba92-ee01-4ab5-abcb-a1c7314c4b4a" type="checkbox" ><label for="b8d8ba92-ee01-4ab5-abcb-a1c7314c4b4a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e66ed76-c681-4359-bfe8-7e306753986d" type="checkbox" ><label for="8e66ed76-c681-4359-bfe8-7e306753986d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40e3c326-2aab-4933-a8f2-3178c9a21713" type="checkbox" ><label for="40e3c326-2aab-4933-a8f2-3178c9a21713" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 {color: black;background-color: white;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 pre{padding: 0;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-toggleable {background-color: white;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-item {z-index: 1;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-parallel-item:only-child::after {width: 0;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a8cb7da6-6a38-468f-9094-bb9152b6f985 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a8cb7da6-6a38-468f-9094-bb9152b6f985" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14b1ae8f-0b70-4bff-899f-fca829f1ab9b" type="checkbox" ><label for="14b1ae8f-0b70-4bff-899f-fca829f1ab9b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da7143b2-3459-434b-b988-334b2d650776" type="checkbox" ><label for="da7143b2-3459-434b-b988-334b2d650776" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd374f68-77b7-4bf4-9a0f-28d281a26938" type="checkbox" ><label for="dd374f68-77b7-4bf4-9a0f-28d281a26938" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 {color: black;background-color: white;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 pre{padding: 0;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-toggleable {background-color: white;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-item {z-index: 1;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-parallel-item:only-child::after {width: 0;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-040f9b07-0f4d-41a5-86ba-67ca9fdff7c7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43188902-efd0-4740-94d3-ccf239f7568f" type="checkbox" ><label for="43188902-efd0-4740-94d3-ccf239f7568f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="088e4e9f-9dc5-4df2-a581-bdb59be8af24" type="checkbox" ><label for="088e4e9f-9dc5-4df2-a581-bdb59be8af24" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="367c7112-00a0-4389-9bbc-5b3231347195" type="checkbox" ><label for="367c7112-00a0-4389-9bbc-5b3231347195" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f50c5945-f373-4be6-8810-0b599da70c58" type="checkbox" ><label for="f50c5945-f373-4be6-8810-0b599da70c58" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdf6a1f0-ccb3-4a8e-8716-e4bcbf971387" type="checkbox" ><label for="fdf6a1f0-ccb3-4a8e-8716-e4bcbf971387" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7b87c9f-cc38-4a08-9448-be219e0eac26" type="checkbox" ><label for="a7b87c9f-cc38-4a08-9448-be219e0eac26" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="265fb27b-15e3-4fa6-8ff2-c9f84b1e60dd" type="checkbox" ><label for="265fb27b-15e3-4fa6-8ff2-c9f84b1e60dd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b0d29a6-d3cb-4369-8c05-737fbdbada85" type="checkbox" ><label for="7b0d29a6-d3cb-4369-8c05-737fbdbada85" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="84268fab-4ce5-4d15-a982-76948e0ebf78" type="checkbox" ><label for="84268fab-4ce5-4d15-a982-76948e0ebf78" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 {color: black;background-color: white;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 pre{padding: 0;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-toggleable {background-color: white;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-item {z-index: 1;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3a5494a8-a47b-45ea-a2e2-0396e28ee4d3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8c8cb88-efc6-41f2-9446-2bc7000d80d9" type="checkbox" ><label for="f8c8cb88-efc6-41f2-9446-2bc7000d80d9" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb1adc64-549a-4c96-bdfe-1c82932a4968" type="checkbox" ><label for="bb1adc64-549a-4c96-bdfe-1c82932a4968" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf5f332b-9f94-438e-a8e2-9cb236fa73e4" type="checkbox" ><label for="bf5f332b-9f94-438e-a8e2-9cb236fa73e4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e45ff1a-9797-4537-b555-71e7d99cadb7" type="checkbox" ><label for="0e45ff1a-9797-4537-b555-71e7d99cadb7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="00ca053a-355d-440a-8696-dc478a69f8ff" type="checkbox" ><label for="00ca053a-355d-440a-8696-dc478a69f8ff" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdcee484-563c-4a2a-a377-5a3ede714249" type="checkbox" ><label for="fdcee484-563c-4a2a-a377-5a3ede714249" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94a862f0-8925-462c-97e0-d0c610e03f84" type="checkbox" ><label for="94a862f0-8925-462c-97e0-d0c610e03f84" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ff27274-285c-4b53-af64-65fdaaec185b" type="checkbox" ><label for="2ff27274-285c-4b53-af64-65fdaaec185b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b4153c4-4774-417d-99e4-21b59e3bac98" type="checkbox" ><label for="4b4153c4-4774-417d-99e4-21b59e3bac98" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
