
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-15714597-92e4-4eb4-b158-17a40ba06b67 {color: black;background-color: white;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 pre{padding: 0;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-toggleable {background-color: white;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-estimator:hover {background-color: #d4ebff;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-item {z-index: 1;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-parallel-item:only-child::after {width: 0;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-15714597-92e4-4eb4-b158-17a40ba06b67 div.sk-text-repr-fallback {display: none;}</style><div id="sk-15714597-92e4-4eb4-b158-17a40ba06b67" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e53b4be0-34af-4915-aa31-2621f6ef0c67" type="checkbox" ><label for="e53b4be0-34af-4915-aa31-2621f6ef0c67" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ea52f4a-a7ba-4554-b640-969d06a81acb" type="checkbox" ><label for="1ea52f4a-a7ba-4554-b640-969d06a81acb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5496b0c-6e4a-416a-b2f9-fc79e2044afd" type="checkbox" ><label for="a5496b0c-6e4a-416a-b2f9-fc79e2044afd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 {color: black;background-color: white;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 pre{padding: 0;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-toggleable {background-color: white;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-item {z-index: 1;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-parallel-item:only-child::after {width: 0;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b5576c20-bcfd-4faf-bad7-3d2137f0e5a5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03bac7da-fc3f-4269-8f72-9e359d2f7a3a" type="checkbox" ><label for="03bac7da-fc3f-4269-8f72-9e359d2f7a3a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e62d699-0763-418a-b8ef-5f18a47f89ac" type="checkbox" ><label for="0e62d699-0763-418a-b8ef-5f18a47f89ac" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60c5b060-f8a8-4af9-bf37-18964a6a352d" type="checkbox" ><label for="60c5b060-f8a8-4af9-bf37-18964a6a352d" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd02413e-f12e-4bcf-bdeb-cea8ad6e323d" type="checkbox" ><label for="fd02413e-f12e-4bcf-bdeb-cea8ad6e323d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 {color: black;background-color: white;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 pre{padding: 0;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-toggleable {background-color: white;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-item {z-index: 1;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-parallel-item:only-child::after {width: 0;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d87284cd-e851-4783-bfc0-ba7ae00d84a1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="702e810d-bd7c-4b45-b71a-edbd6ed58979" type="checkbox" ><label for="702e810d-bd7c-4b45-b71a-edbd6ed58979" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fe990ad-850e-425b-8d34-6a58b6cf937a" type="checkbox" ><label for="0fe990ad-850e-425b-8d34-6a58b6cf937a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4093d516-7123-4ec4-ac16-bcab5b32e13e" type="checkbox" ><label for="4093d516-7123-4ec4-ac16-bcab5b32e13e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fb53d683-5f61-4819-8606-999275c9312e {color: black;background-color: white;}#sk-fb53d683-5f61-4819-8606-999275c9312e pre{padding: 0;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-toggleable {background-color: white;}#sk-fb53d683-5f61-4819-8606-999275c9312e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fb53d683-5f61-4819-8606-999275c9312e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fb53d683-5f61-4819-8606-999275c9312e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fb53d683-5f61-4819-8606-999275c9312e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fb53d683-5f61-4819-8606-999275c9312e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb53d683-5f61-4819-8606-999275c9312e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-estimator:hover {background-color: #d4ebff;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-item {z-index: 1;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-parallel-item:only-child::after {width: 0;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fb53d683-5f61-4819-8606-999275c9312e div.sk-text-repr-fallback {display: none;}</style><div id="sk-fb53d683-5f61-4819-8606-999275c9312e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee472ceb-8a6c-484d-bb6e-ae7d3a2fc2bb" type="checkbox" ><label for="ee472ceb-8a6c-484d-bb6e-ae7d3a2fc2bb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3108d38c-af4c-41f8-9bec-1ec99ec037d4" type="checkbox" ><label for="3108d38c-af4c-41f8-9bec-1ec99ec037d4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eadaef51-797d-4826-943f-50253cd9a17b" type="checkbox" ><label for="eadaef51-797d-4826-943f-50253cd9a17b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd476955-16df-48a7-b73c-93437665b4e4" type="checkbox" ><label for="fd476955-16df-48a7-b73c-93437665b4e4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6425316c-3b82-4445-988e-1babe84fa69b" type="checkbox" ><label for="6425316c-3b82-4445-988e-1babe84fa69b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="680b38da-ae84-4e8b-869c-0eb9456739ce" type="checkbox" ><label for="680b38da-ae84-4e8b-869c-0eb9456739ce" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ce7edd4-c207-4e9d-9f86-f318d5b708c9" type="checkbox" ><label for="6ce7edd4-c207-4e9d-9f86-f318d5b708c9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="051512fc-ce51-4432-b9c8-46a6a711d4bb" type="checkbox" ><label for="051512fc-ce51-4432-b9c8-46a6a711d4bb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="115d3047-b7d4-4cfe-94af-8988c6cdb643" type="checkbox" ><label for="115d3047-b7d4-4cfe-94af-8988c6cdb643" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-99f3ba30-f626-4de3-9862-6fe61cab1def {color: black;background-color: white;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def pre{padding: 0;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-toggleable {background-color: white;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-estimator:hover {background-color: #d4ebff;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-item {z-index: 1;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-parallel-item:only-child::after {width: 0;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-99f3ba30-f626-4de3-9862-6fe61cab1def div.sk-text-repr-fallback {display: none;}</style><div id="sk-99f3ba30-f626-4de3-9862-6fe61cab1def" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e4f8a1f-44df-43da-a21a-1cf7c0ebfb80" type="checkbox" ><label for="0e4f8a1f-44df-43da-a21a-1cf7c0ebfb80" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c39b5dc-2a91-4e37-b785-4fe394534a1d" type="checkbox" ><label for="1c39b5dc-2a91-4e37-b785-4fe394534a1d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80c0caf3-31e6-44c1-b7b9-3616fe3f48d7" type="checkbox" ><label for="80c0caf3-31e6-44c1-b7b9-3616fe3f48d7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="25ed6afa-e6c2-4ae4-befa-6e9c2b8696db" type="checkbox" ><label for="25ed6afa-e6c2-4ae4-befa-6e9c2b8696db" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fed1e434-f6b0-4b31-af3c-2776f32dc178" type="checkbox" ><label for="fed1e434-f6b0-4b31-af3c-2776f32dc178" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b52e6b6f-7788-459a-b427-1856b4a10d24" type="checkbox" ><label for="b52e6b6f-7788-459a-b427-1856b4a10d24" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80dd0aac-24b7-4809-b943-9a0cc0ce5c72" type="checkbox" ><label for="80dd0aac-24b7-4809-b943-9a0cc0ce5c72" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a3cc2c2-d763-4e30-8149-9cf2f9d37ac9" type="checkbox" ><label for="3a3cc2c2-d763-4e30-8149-9cf2f9d37ac9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40c24454-68b1-408f-8745-99bef1f06b34" type="checkbox" ><label for="40c24454-68b1-408f-8745-99bef1f06b34" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
