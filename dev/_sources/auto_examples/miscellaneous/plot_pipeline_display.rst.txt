
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 {color: black;background-color: white;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 pre{padding: 0;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-toggleable {background-color: white;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-item {z-index: 1;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-parallel-item:only-child::after {width: 0;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-container {display: inline-block;position: relative;}#sk-38da6d69-053a-4463-be96-cfa79b6de0a7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-38da6d69-053a-4463-be96-cfa79b6de0a7" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f17056ac-bf5a-4a13-92c4-04349a555297" type="checkbox" ><label class="sk-toggleable__label" for="f17056ac-bf5a-4a13-92c4-04349a555297">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed1efc6d-d8e9-4c77-bbcd-42f641020a67" type="checkbox" ><label class="sk-toggleable__label" for="ed1efc6d-d8e9-4c77-bbcd-42f641020a67">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19a831fd-0578-4fec-938b-81d3342b8ddd" type="checkbox" ><label class="sk-toggleable__label" for="19a831fd-0578-4fec-938b-81d3342b8ddd">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cda66247-14ff-4303-988c-c0489420796e {color: black;background-color: white;}#sk-cda66247-14ff-4303-988c-c0489420796e pre{padding: 0;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-toggleable {background-color: white;}#sk-cda66247-14ff-4303-988c-c0489420796e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cda66247-14ff-4303-988c-c0489420796e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cda66247-14ff-4303-988c-c0489420796e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-estimator:hover {background-color: #d4ebff;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-item {z-index: 1;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-parallel-item:only-child::after {width: 0;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-container {display: inline-block;position: relative;}#sk-cda66247-14ff-4303-988c-c0489420796e div.sk-text-repr-fallback {display: none;}</style><div id="sk-cda66247-14ff-4303-988c-c0489420796e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad3fd56c-54be-41bb-bde1-f5fde50f4eb1" type="checkbox" ><label class="sk-toggleable__label" for="ad3fd56c-54be-41bb-bde1-f5fde50f4eb1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eabe61c3-91cb-4440-a6ea-bfb3599ca802" type="checkbox" ><label class="sk-toggleable__label" for="eabe61c3-91cb-4440-a6ea-bfb3599ca802">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2903c5ad-a43c-4357-9f05-890fa107db3a" type="checkbox" ><label class="sk-toggleable__label" for="2903c5ad-a43c-4357-9f05-890fa107db3a">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b47407f-b9ae-47df-b798-15948676605a" type="checkbox" ><label class="sk-toggleable__label" for="3b47407f-b9ae-47df-b798-15948676605a">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd {color: black;background-color: white;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd pre{padding: 0;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-toggleable {background-color: white;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-estimator:hover {background-color: #d4ebff;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-item {z-index: 1;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-parallel-item:only-child::after {width: 0;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-container {display: inline-block;position: relative;}#sk-50b6b28b-435a-4c46-8c2b-61b775892dcd div.sk-text-repr-fallback {display: none;}</style><div id="sk-50b6b28b-435a-4c46-8c2b-61b775892dcd" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e167237-6023-434b-b302-228371697536" type="checkbox" ><label class="sk-toggleable__label" for="2e167237-6023-434b-b302-228371697536">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97ac34bd-2c7a-47fd-87b1-9f745eb1cb4b" type="checkbox" ><label class="sk-toggleable__label" for="97ac34bd-2c7a-47fd-87b1-9f745eb1cb4b">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c053553-11b1-4312-8c36-47f65115878f" type="checkbox" ><label class="sk-toggleable__label" for="9c053553-11b1-4312-8c36-47f65115878f">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 {color: black;background-color: white;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 pre{padding: 0;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-toggleable {background-color: white;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-item {z-index: 1;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-parallel-item:only-child::after {width: 0;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-container {display: inline-block;position: relative;}#sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-710e3dcf-3f23-4758-9a6e-b064a2c512e4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22ecc971-a878-4ee8-90a4-b5a1ba308803" type="checkbox" ><label class="sk-toggleable__label" for="22ecc971-a878-4ee8-90a4-b5a1ba308803">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6cc23bb-dafb-4be7-b120-47a94c7fcdce" type="checkbox" ><label class="sk-toggleable__label" for="a6cc23bb-dafb-4be7-b120-47a94c7fcdce">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56b239eb-c742-4ff5-98f1-51c49365870e" type="checkbox" ><label class="sk-toggleable__label" for="56b239eb-c742-4ff5-98f1-51c49365870e">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d562b5cf-f1d5-494b-87b0-4d3c0df8b379" type="checkbox" ><label class="sk-toggleable__label" for="d562b5cf-f1d5-494b-87b0-4d3c0df8b379">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ce85228-0973-49e6-b07b-cc671bd50868" type="checkbox" ><label class="sk-toggleable__label" for="2ce85228-0973-49e6-b07b-cc671bd50868">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16c74f52-24da-46b7-a686-f17d9715c31e" type="checkbox" ><label class="sk-toggleable__label" for="16c74f52-24da-46b7-a686-f17d9715c31e">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e528ab17-bf8c-4f02-b2e6-c2e89f7b7e74" type="checkbox" ><label class="sk-toggleable__label" for="e528ab17-bf8c-4f02-b2e6-c2e89f7b7e74">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb92b847-d909-4194-a1ad-583e636d9513" type="checkbox" ><label class="sk-toggleable__label" for="bb92b847-d909-4194-a1ad-583e636d9513">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="950fdc2e-4be3-4815-8c29-7f23ca4e3307" type="checkbox" ><label class="sk-toggleable__label" for="950fdc2e-4be3-4815-8c29-7f23ca4e3307">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 {color: black;background-color: white;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 pre{padding: 0;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-toggleable {background-color: white;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-item {z-index: 1;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-parallel-item:only-child::after {width: 0;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-container {display: inline-block;position: relative;}#sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0c85ed9d-e4ad-487d-881b-dc37d8cd7423" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b1acb61-0090-4115-a39c-6674aae8c763" type="checkbox" ><label class="sk-toggleable__label" for="4b1acb61-0090-4115-a39c-6674aae8c763">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5f0e852-6071-4492-aa68-700369030968" type="checkbox" ><label class="sk-toggleable__label" for="e5f0e852-6071-4492-aa68-700369030968">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01439957-bf45-4ebe-920b-e9a7871819a8" type="checkbox" ><label class="sk-toggleable__label" for="01439957-bf45-4ebe-920b-e9a7871819a8">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b99f3c3-a4c2-4293-90d9-8af960421c35" type="checkbox" ><label class="sk-toggleable__label" for="7b99f3c3-a4c2-4293-90d9-8af960421c35">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="24ed921a-3f6b-4a38-8872-ee04a6bc1779" type="checkbox" ><label class="sk-toggleable__label" for="24ed921a-3f6b-4a38-8872-ee04a6bc1779">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e709b106-e5ad-427d-bf59-cc28b4fb67dd" type="checkbox" ><label class="sk-toggleable__label" for="e709b106-e5ad-427d-bf59-cc28b4fb67dd">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c776525-c189-4479-9702-cd3195efd638" type="checkbox" ><label class="sk-toggleable__label" for="5c776525-c189-4479-9702-cd3195efd638">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="444e69b2-0fd7-4a00-9553-0ff23c222862" type="checkbox" ><label class="sk-toggleable__label" for="444e69b2-0fd7-4a00-9553-0ff23c222862">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72570d3e-8c89-4344-b8ec-502765d3ebac" type="checkbox" ><label class="sk-toggleable__label" for="72570d3e-8c89-4344-b8ec-502765d3ebac">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.100 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
