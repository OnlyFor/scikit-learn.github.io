
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 {color: black;background-color: white;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 pre{padding: 0;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-toggleable {background-color: white;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-item {z-index: 1;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-parallel-item:only-child::after {width: 0;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dd44955e-a65f-4cf3-8f60-ba3b266874c9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6317bd79-bda3-4471-a7f2-b37cc21d68c3" type="checkbox" ><label for="6317bd79-bda3-4471-a7f2-b37cc21d68c3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12dbe100-7d4c-4b3d-ba10-0dbb7ab280af" type="checkbox" ><label for="12dbe100-7d4c-4b3d-ba10-0dbb7ab280af" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="051f6491-ced4-4ba6-bcf3-e9bc676864e7" type="checkbox" ><label for="051f6491-ced4-4ba6-bcf3-e9bc676864e7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 {color: black;background-color: white;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 pre{padding: 0;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-toggleable {background-color: white;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-estimator:hover {background-color: #d4ebff;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-item {z-index: 1;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-parallel-item:only-child::after {width: 0;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-14f4d909-d9ad-4a8e-8b92-75846a480c14 div.sk-text-repr-fallback {display: none;}</style><div id="sk-14f4d909-d9ad-4a8e-8b92-75846a480c14" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cd011cf-ddb2-4224-8b19-a9f81720d86a" type="checkbox" ><label for="4cd011cf-ddb2-4224-8b19-a9f81720d86a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36b2be29-884b-4aef-9c26-5493aa2246ed" type="checkbox" ><label for="36b2be29-884b-4aef-9c26-5493aa2246ed" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c0d329a-b6a4-4532-931a-4f270bee89f2" type="checkbox" ><label for="4c0d329a-b6a4-4532-931a-4f270bee89f2" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37ae9e37-737d-43d5-8195-2fd4f28ff126" type="checkbox" ><label for="37ae9e37-737d-43d5-8195-2fd4f28ff126" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-25864879-19c5-42d2-9df7-08399b2a600d {color: black;background-color: white;}#sk-25864879-19c5-42d2-9df7-08399b2a600d pre{padding: 0;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-toggleable {background-color: white;}#sk-25864879-19c5-42d2-9df7-08399b2a600d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-25864879-19c5-42d2-9df7-08399b2a600d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-25864879-19c5-42d2-9df7-08399b2a600d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-25864879-19c5-42d2-9df7-08399b2a600d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-25864879-19c5-42d2-9df7-08399b2a600d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-25864879-19c5-42d2-9df7-08399b2a600d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-estimator:hover {background-color: #d4ebff;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-item {z-index: 1;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-parallel-item:only-child::after {width: 0;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-25864879-19c5-42d2-9df7-08399b2a600d div.sk-text-repr-fallback {display: none;}</style><div id="sk-25864879-19c5-42d2-9df7-08399b2a600d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="951120ff-09f4-43cb-89d1-86f23b56bbbc" type="checkbox" ><label for="951120ff-09f4-43cb-89d1-86f23b56bbbc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9abaab32-2ff0-4a76-b88b-f3db773f0d6d" type="checkbox" ><label for="9abaab32-2ff0-4a76-b88b-f3db773f0d6d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85531fcc-bc0d-4182-b7d5-26f9a1553c26" type="checkbox" ><label for="85531fcc-bc0d-4182-b7d5-26f9a1553c26" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a {color: black;background-color: white;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a pre{padding: 0;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-toggleable {background-color: white;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-estimator:hover {background-color: #d4ebff;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-item {z-index: 1;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-parallel-item:only-child::after {width: 0;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a div.sk-text-repr-fallback {display: none;}</style><div id="sk-a6e8ad72-19a8-49b1-8dc6-de5e56bfc18a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7642637e-95d6-472b-8d19-3ed3a69e4643" type="checkbox" ><label for="7642637e-95d6-472b-8d19-3ed3a69e4643" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="23b4dff7-4ad2-4346-b8e1-13cf45549844" type="checkbox" ><label for="23b4dff7-4ad2-4346-b8e1-13cf45549844" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79891060-2c1f-4a55-9488-07dcf226a83a" type="checkbox" ><label for="79891060-2c1f-4a55-9488-07dcf226a83a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c15947b2-8f40-48bb-8764-b480eea430ea" type="checkbox" ><label for="c15947b2-8f40-48bb-8764-b480eea430ea" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e809ac86-f267-4222-86ab-92dfc8169040" type="checkbox" ><label for="e809ac86-f267-4222-86ab-92dfc8169040" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cf49961-091c-4b63-8a0a-f57477608668" type="checkbox" ><label for="2cf49961-091c-4b63-8a0a-f57477608668" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f124cd6-4ab8-4e5f-a91b-835c0bb4bf9d" type="checkbox" ><label for="2f124cd6-4ab8-4e5f-a91b-835c0bb4bf9d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="49cdecca-a5a4-4ef0-8bc1-22d591984488" type="checkbox" ><label for="49cdecca-a5a4-4ef0-8bc1-22d591984488" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0262fc0d-2166-4342-a465-1ed70e18b39b" type="checkbox" ><label for="0262fc0d-2166-4342-a465-1ed70e18b39b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 {color: black;background-color: white;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 pre{padding: 0;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-toggleable {background-color: white;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-item {z-index: 1;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b60dc3e-5434-4c53-8646-52b4847373d3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b60dc3e-5434-4c53-8646-52b4847373d3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19a3451e-1af4-415f-bfc2-65f963f81cec" type="checkbox" ><label for="19a3451e-1af4-415f-bfc2-65f963f81cec" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3f3a3e5-111c-423b-bc5d-0962d96a2207" type="checkbox" ><label for="e3f3a3e5-111c-423b-bc5d-0962d96a2207" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34c91097-5203-4a89-aed7-38337ff126a4" type="checkbox" ><label for="34c91097-5203-4a89-aed7-38337ff126a4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e86160f-9563-42c6-8204-2198a744a610" type="checkbox" ><label for="0e86160f-9563-42c6-8204-2198a744a610" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0509ec68-c236-4f8b-a014-5ecbaa4097ac" type="checkbox" ><label for="0509ec68-c236-4f8b-a014-5ecbaa4097ac" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdf8c609-e826-4aa0-bcba-7dce21d16157" type="checkbox" ><label for="cdf8c609-e826-4aa0-bcba-7dce21d16157" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c191e1a3-a70a-4d42-a055-2f399d06476d" type="checkbox" ><label for="c191e1a3-a70a-4d42-a055-2f399d06476d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d00090f-8858-4e6d-b238-e56e61cec3e6" type="checkbox" ><label for="5d00090f-8858-4e6d-b238-e56e61cec3e6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48308dbd-2520-4caf-b1cf-7d0e69e1c014" type="checkbox" ><label for="48308dbd-2520-4caf-b1cf-7d0e69e1c014" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
