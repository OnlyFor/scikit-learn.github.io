
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 {color: black;background-color: white;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 pre{padding: 0;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-toggleable {background-color: white;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-item {z-index: 1;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5e4cc970-c1ed-4426-9f5d-f288ca77f5d3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd0ddf5f-19b3-40eb-927a-514af0caabde" type="checkbox" ><label for="dd0ddf5f-19b3-40eb-927a-514af0caabde" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c52c3976-057d-4819-a9bf-eb3df3cf39aa" type="checkbox" ><label for="c52c3976-057d-4819-a9bf-eb3df3cf39aa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29df84da-a48b-4bc8-bc98-a919e0446d54" type="checkbox" ><label for="29df84da-a48b-4bc8-bc98-a919e0446d54" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f {color: black;background-color: white;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f pre{padding: 0;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-toggleable {background-color: white;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-estimator:hover {background-color: #d4ebff;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-item {z-index: 1;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-parallel-item:only-child::after {width: 0;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f div.sk-text-repr-fallback {display: none;}</style><div id="sk-2b0bda6e-0f71-4ede-9823-0cb88a6a577f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb105419-ec9c-4ef9-992f-79926afe6da9" type="checkbox" ><label for="cb105419-ec9c-4ef9-992f-79926afe6da9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cbf2ea3-ba6d-4b15-8bf3-8b97520e05a6" type="checkbox" ><label for="5cbf2ea3-ba6d-4b15-8bf3-8b97520e05a6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69d9f7ef-f399-439b-bacb-6323f2aefddf" type="checkbox" ><label for="69d9f7ef-f399-439b-bacb-6323f2aefddf" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fabf0b2a-1d76-4a19-817c-b6932a4e4106" type="checkbox" ><label for="fabf0b2a-1d76-4a19-817c-b6932a4e4106" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c347bd23-8f10-4bcc-994f-077fde21fece {color: black;background-color: white;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece pre{padding: 0;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-toggleable {background-color: white;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-estimator:hover {background-color: #d4ebff;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-item {z-index: 1;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-parallel-item:only-child::after {width: 0;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c347bd23-8f10-4bcc-994f-077fde21fece div.sk-text-repr-fallback {display: none;}</style><div id="sk-c347bd23-8f10-4bcc-994f-077fde21fece" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29507797-bf5e-46af-88dd-e18789746766" type="checkbox" ><label for="29507797-bf5e-46af-88dd-e18789746766" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb8c51ce-8a5d-4c3d-adbb-5944784719c8" type="checkbox" ><label for="bb8c51ce-8a5d-4c3d-adbb-5944784719c8" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ddb6f63-23d1-44e3-8c12-15c9655d19c4" type="checkbox" ><label for="2ddb6f63-23d1-44e3-8c12-15c9655d19c4" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a {color: black;background-color: white;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a pre{padding: 0;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-toggleable {background-color: white;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-estimator:hover {background-color: #d4ebff;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-item {z-index: 1;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-parallel-item:only-child::after {width: 0;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a div.sk-text-repr-fallback {display: none;}</style><div id="sk-cf04f3a7-47d5-4fc2-9800-68e267a3cb2a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f91242d-a663-4144-be59-30063cfc8387" type="checkbox" ><label for="3f91242d-a663-4144-be59-30063cfc8387" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c36b2e0-b8f5-461b-a339-5f1d9610df58" type="checkbox" ><label for="3c36b2e0-b8f5-461b-a339-5f1d9610df58" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e729c0c-9459-456b-9e08-3753c5ba00e4" type="checkbox" ><label for="1e729c0c-9459-456b-9e08-3753c5ba00e4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c5ab703-e411-4f85-9551-e945c99acacc" type="checkbox" ><label for="2c5ab703-e411-4f85-9551-e945c99acacc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd446049-feff-4ead-8695-f8eef226add6" type="checkbox" ><label for="bd446049-feff-4ead-8695-f8eef226add6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a750b0c-c15c-40e9-8711-d73f00c3996f" type="checkbox" ><label for="2a750b0c-c15c-40e9-8711-d73f00c3996f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bee7df01-cf0d-4f8c-b919-5f009b31e45b" type="checkbox" ><label for="bee7df01-cf0d-4f8c-b919-5f009b31e45b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="270dba94-d20d-4081-9b63-92e4a3e6b4e1" type="checkbox" ><label for="270dba94-d20d-4081-9b63-92e4a3e6b4e1" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e1b6f36-a2d9-4b8e-acde-434381594d6c" type="checkbox" ><label for="3e1b6f36-a2d9-4b8e-acde-434381594d6c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 {color: black;background-color: white;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 pre{padding: 0;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-toggleable {background-color: white;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-item {z-index: 1;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-parallel-item:only-child::after {width: 0;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-82de6064-198b-4c12-93a3-bfa9dcd3c4b4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad6b9364-374d-4dd0-b124-8e840cb7a20f" type="checkbox" ><label for="ad6b9364-374d-4dd0-b124-8e840cb7a20f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7b9ce49-a1f7-42a9-be91-5f6ac59a10a1" type="checkbox" ><label for="a7b9ce49-a1f7-42a9-be91-5f6ac59a10a1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3e3ef90-cac9-4c88-a3a6-1435577b68bf" type="checkbox" ><label for="a3e3ef90-cac9-4c88-a3a6-1435577b68bf" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5834516-6010-409d-a891-26c68847af03" type="checkbox" ><label for="d5834516-6010-409d-a891-26c68847af03" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="581ef89e-a248-481a-85af-77ca7ae1a140" type="checkbox" ><label for="581ef89e-a248-481a-85af-77ca7ae1a140" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0aa20c16-7147-4ccc-a347-c298951d49d0" type="checkbox" ><label for="0aa20c16-7147-4ccc-a347-c298951d49d0" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06cefcb9-cd36-4f5a-8f86-17ff115e7dac" type="checkbox" ><label for="06cefcb9-cd36-4f5a-8f86-17ff115e7dac" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad7744d7-baf0-4447-9dd8-4c2dbec36bc5" type="checkbox" ><label for="ad7744d7-baf0-4447-9dd8-4c2dbec36bc5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3afea66-2608-466a-8264-1a5cb41709ab" type="checkbox" ><label for="b3afea66-2608-466a-8264-1a5cb41709ab" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
