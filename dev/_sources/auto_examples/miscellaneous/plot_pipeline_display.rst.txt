
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-196c5406-3f0c-4276-9af3-78004d29b065 {color: black;background-color: white;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 pre{padding: 0;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-toggleable {background-color: white;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-estimator:hover {background-color: #d4ebff;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-item {z-index: 1;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-parallel-item:only-child::after {width: 0;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-196c5406-3f0c-4276-9af3-78004d29b065 div.sk-text-repr-fallback {display: none;}</style><div id="sk-196c5406-3f0c-4276-9af3-78004d29b065" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cea39c5-e8f1-485d-9dff-8adf78469094" type="checkbox" ><label for="2cea39c5-e8f1-485d-9dff-8adf78469094" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57a85e6f-ed8f-4c47-b447-0a98d4486d62" type="checkbox" ><label for="57a85e6f-ed8f-4c47-b447-0a98d4486d62" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6311e76a-4ead-4429-b799-bee31c18c92a" type="checkbox" ><label for="6311e76a-4ead-4429-b799-bee31c18c92a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 {color: black;background-color: white;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 pre{padding: 0;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-toggleable {background-color: white;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-item {z-index: 1;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-parallel-item:only-child::after {width: 0;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7960ea2d-4302-4c29-bedb-0775d90d8570 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7960ea2d-4302-4c29-bedb-0775d90d8570" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="14d06680-d3ec-4685-8167-70eb4d5ff091" type="checkbox" ><label for="14d06680-d3ec-4685-8167-70eb4d5ff091" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce0b49ea-fcf2-4155-a186-335e4fe34b92" type="checkbox" ><label for="ce0b49ea-fcf2-4155-a186-335e4fe34b92" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70fa7f06-e45f-4c75-919a-27071441d2f5" type="checkbox" ><label for="70fa7f06-e45f-4c75-919a-27071441d2f5" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a570731-51ed-47c4-be26-ae456e2e78fe" type="checkbox" ><label for="1a570731-51ed-47c4-be26-ae456e2e78fe" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 {color: black;background-color: white;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 pre{padding: 0;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-toggleable {background-color: white;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-item {z-index: 1;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-parallel-item:only-child::after {width: 0;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c6fbb36a-5694-4dc3-8091-a47abebc8528 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c6fbb36a-5694-4dc3-8091-a47abebc8528" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c16b68f4-6a0b-40b7-84cc-a4607bb6ab8d" type="checkbox" ><label for="c16b68f4-6a0b-40b7-84cc-a4607bb6ab8d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2ee66c1-3058-4756-b425-e67edbbd906d" type="checkbox" ><label for="c2ee66c1-3058-4756-b425-e67edbbd906d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="10de0f7d-b017-4aa8-9aa2-b141446d9411" type="checkbox" ><label for="10de0f7d-b017-4aa8-9aa2-b141446d9411" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 {color: black;background-color: white;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 pre{padding: 0;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-toggleable {background-color: white;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-item {z-index: 1;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-parallel-item:only-child::after {width: 0;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e41db4f4-b51d-46f7-9eae-56a9abed4d01" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e64900fb-3c67-46af-89eb-5d583aa2a50e" type="checkbox" ><label for="e64900fb-3c67-46af-89eb-5d583aa2a50e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af1b84fa-142d-41b7-b957-6d3bc60a1576" type="checkbox" ><label for="af1b84fa-142d-41b7-b957-6d3bc60a1576" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff197ae5-8748-4594-931f-a869066e0161" type="checkbox" ><label for="ff197ae5-8748-4594-931f-a869066e0161" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56ac3837-2c71-4ea3-87a6-6d859df31514" type="checkbox" ><label for="56ac3837-2c71-4ea3-87a6-6d859df31514" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="316c319e-1288-4d0d-b613-4527fb14ebab" type="checkbox" ><label for="316c319e-1288-4d0d-b613-4527fb14ebab" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c20e184a-815b-4d77-975d-b37aee238571" type="checkbox" ><label for="c20e184a-815b-4d77-975d-b37aee238571" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc493f2c-a2bd-44ad-ba3a-f625c021b9f8" type="checkbox" ><label for="dc493f2c-a2bd-44ad-ba3a-f625c021b9f8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c8793e9-8946-4ab8-8ef1-c9fd4db38fa0" type="checkbox" ><label for="2c8793e9-8946-4ab8-8ef1-c9fd4db38fa0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="448f1d8c-8a09-4d0a-b286-563c399364cf" type="checkbox" ><label for="448f1d8c-8a09-4d0a-b286-563c399364cf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d {color: black;background-color: white;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d pre{padding: 0;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-toggleable {background-color: white;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-estimator:hover {background-color: #d4ebff;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-item {z-index: 1;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-parallel-item:only-child::after {width: 0;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d div.sk-text-repr-fallback {display: none;}</style><div id="sk-5d71419a-d71c-4a1b-8561-a676d5bd7d1d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6dfc966-20b8-4551-b7a1-98356675a4ef" type="checkbox" ><label for="e6dfc966-20b8-4551-b7a1-98356675a4ef" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d74e910b-b7b5-45a7-b6e9-19265ac9bc1a" type="checkbox" ><label for="d74e910b-b7b5-45a7-b6e9-19265ac9bc1a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0e69209-07a3-43b2-b67d-39d8edbec5bf" type="checkbox" ><label for="f0e69209-07a3-43b2-b67d-39d8edbec5bf" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b69c5463-48d0-4526-b0a9-7b5e242d5c11" type="checkbox" ><label for="b69c5463-48d0-4526-b0a9-7b5e242d5c11" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bb9f688-12fe-4ccb-8562-1da9b6af13db" type="checkbox" ><label for="3bb9f688-12fe-4ccb-8562-1da9b6af13db" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f99e3e96-3866-470b-8725-b3c75760c69c" type="checkbox" ><label for="f99e3e96-3866-470b-8725-b3c75760c69c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8bfee59-c36b-4283-8edb-0a7e3a32e190" type="checkbox" ><label for="c8bfee59-c36b-4283-8edb-0a7e3a32e190" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55772dbf-2289-4332-aedc-97ce4da06715" type="checkbox" ><label for="55772dbf-2289-4332-aedc-97ce4da06715" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c9b2e6d-36fe-4e54-b24a-9e132e896b94" type="checkbox" ><label for="1c9b2e6d-36fe-4e54-b24a-9e132e896b94" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.075 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
