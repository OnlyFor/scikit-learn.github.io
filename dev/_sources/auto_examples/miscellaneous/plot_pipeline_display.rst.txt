
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f {color: black;background-color: white;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f pre{padding: 0;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-toggleable {background-color: white;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-estimator:hover {background-color: #d4ebff;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-item {z-index: 1;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-parallel-item:only-child::after {width: 0;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f div.sk-text-repr-fallback {display: none;}</style><div id="sk-acdf91ff-be76-42c6-87a9-d8231ceeb18f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c7d32c7-bcf3-478d-8121-a97fbb05017e" type="checkbox" ><label for="6c7d32c7-bcf3-478d-8121-a97fbb05017e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19b7c3ac-313c-4bc0-90f8-c019d1c29e81" type="checkbox" ><label for="19b7c3ac-313c-4bc0-90f8-c019d1c29e81" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ff6e331-59f8-4b36-8784-72086858e4d3" type="checkbox" ><label for="6ff6e331-59f8-4b36-8784-72086858e4d3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a4aa244e-0981-4da8-968f-f7a807c860fd {color: black;background-color: white;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd pre{padding: 0;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-toggleable {background-color: white;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-item {z-index: 1;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-parallel-item:only-child::after {width: 0;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a4aa244e-0981-4da8-968f-f7a807c860fd div.sk-text-repr-fallback {display: none;}</style><div id="sk-a4aa244e-0981-4da8-968f-f7a807c860fd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2fa1ceb5-9192-4ca9-94c0-5e21b73d18db" type="checkbox" ><label for="2fa1ceb5-9192-4ca9-94c0-5e21b73d18db" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f6bd8a3-7b17-4bda-8ad8-baa7052898c0" type="checkbox" ><label for="4f6bd8a3-7b17-4bda-8ad8-baa7052898c0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54539b8f-8a48-423c-9a49-d836709e9406" type="checkbox" ><label for="54539b8f-8a48-423c-9a49-d836709e9406" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="94b03461-dc2d-4af1-8a67-3a216cbe0ecb" type="checkbox" ><label for="94b03461-dc2d-4af1-8a67-3a216cbe0ecb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 {color: black;background-color: white;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 pre{padding: 0;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-toggleable {background-color: white;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-estimator:hover {background-color: #d4ebff;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-item {z-index: 1;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-parallel-item:only-child::after {width: 0;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-abdd0df8-16ca-4e09-a3e7-36157be52121 div.sk-text-repr-fallback {display: none;}</style><div id="sk-abdd0df8-16ca-4e09-a3e7-36157be52121" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bcfd7f4-0178-45d0-8dbe-8fae0813a245" type="checkbox" ><label for="4bcfd7f4-0178-45d0-8dbe-8fae0813a245" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a5d7c04-e71b-491d-bada-2f10ec6eca97" type="checkbox" ><label for="6a5d7c04-e71b-491d-bada-2f10ec6eca97" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35650fb3-2a45-4b4b-91a2-3354d9370ce0" type="checkbox" ><label for="35650fb3-2a45-4b4b-91a2-3354d9370ce0" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 {color: black;background-color: white;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 pre{padding: 0;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-toggleable {background-color: white;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-item {z-index: 1;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-parallel-item:only-child::after {width: 0;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-356cb0db-d157-4bb9-bdbf-bb3a3ae96fe2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5da37c07-4764-4db3-9fee-b381793e0107" type="checkbox" ><label for="5da37c07-4764-4db3-9fee-b381793e0107" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c7b540c-4681-42c3-8a11-3b990cab1dcb" type="checkbox" ><label for="5c7b540c-4681-42c3-8a11-3b990cab1dcb" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55832ffe-5ae8-4317-be7c-8757304e555e" type="checkbox" ><label for="55832ffe-5ae8-4317-be7c-8757304e555e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4616abc5-9f98-4786-8ab5-aaea8e269e97" type="checkbox" ><label for="4616abc5-9f98-4786-8ab5-aaea8e269e97" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20f0c41d-bf93-41d5-ad53-c20567c13b0c" type="checkbox" ><label for="20f0c41d-bf93-41d5-ad53-c20567c13b0c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba7e3eec-7c57-4eb4-bf84-48e8bb176a1a" type="checkbox" ><label for="ba7e3eec-7c57-4eb4-bf84-48e8bb176a1a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46ac6615-b4c1-4e7f-ab26-8a77b1323e30" type="checkbox" ><label for="46ac6615-b4c1-4e7f-ab26-8a77b1323e30" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f67bc3b-c6a8-4e06-bd91-7dcaebdd9d4d" type="checkbox" ><label for="5f67bc3b-c6a8-4e06-bd91-7dcaebdd9d4d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8fc06a60-dc29-4dc5-8f60-7794dbbccff7" type="checkbox" ><label for="8fc06a60-dc29-4dc5-8f60-7794dbbccff7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 {color: black;background-color: white;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 pre{padding: 0;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-toggleable {background-color: white;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-estimator:hover {background-color: #d4ebff;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-item {z-index: 1;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-parallel-item:only-child::after {width: 0;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765 div.sk-text-repr-fallback {display: none;}</style><div id="sk-027a603d-f956-4d4e-bfb2-bcfbe2d16765" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a229b88-6bc7-4e1c-996a-e1a3dd3b276f" type="checkbox" ><label for="0a229b88-6bc7-4e1c-996a-e1a3dd3b276f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e741837c-539e-421e-82bb-4bb052686ee6" type="checkbox" ><label for="e741837c-539e-421e-82bb-4bb052686ee6" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e710f32-13b7-4a8c-bb47-5738438d5aad" type="checkbox" ><label for="8e710f32-13b7-4a8c-bb47-5738438d5aad" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1960b1f0-7cc0-4731-8baa-12b432fa46ab" type="checkbox" ><label for="1960b1f0-7cc0-4731-8baa-12b432fa46ab" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0e3731b-941e-4a3f-acfb-4dd21cd85ab0" type="checkbox" ><label for="a0e3731b-941e-4a3f-acfb-4dd21cd85ab0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="866b2c80-bc03-42d5-ba7f-614c0e462553" type="checkbox" ><label for="866b2c80-bc03-42d5-ba7f-614c0e462553" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67d14240-f61c-45e2-9a5c-96f972faabbb" type="checkbox" ><label for="67d14240-f61c-45e2-9a5c-96f972faabbb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0d4251c-283b-4591-be11-a26bd10f1b1c" type="checkbox" ><label for="d0d4251c-283b-4591-be11-a26bd10f1b1c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="beaf7433-4af3-4e7a-ac03-0e6e458c03bf" type="checkbox" ><label for="beaf7433-4af3-4e7a-ac03-0e6e458c03bf" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.079 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
