
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e {color: black;background-color: white;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e pre{padding: 0;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-toggleable {background-color: white;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-estimator:hover {background-color: #d4ebff;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-item {z-index: 1;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-parallel-item:only-child::after {width: 0;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1a750de2-0240-4eb2-ba3d-6217e58a257e div.sk-text-repr-fallback {display: none;}</style><div id="sk-1a750de2-0240-4eb2-ba3d-6217e58a257e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71e51f6e-0d13-46e3-8f0d-e9316904571d" type="checkbox" ><label for="71e51f6e-0d13-46e3-8f0d-e9316904571d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce53fee0-a41b-4ed3-9e7c-8162a654daec" type="checkbox" ><label for="ce53fee0-a41b-4ed3-9e7c-8162a654daec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc55254d-0b19-498e-92c9-4b832e4256ae" type="checkbox" ><label for="bc55254d-0b19-498e-92c9-4b832e4256ae" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 {color: black;background-color: white;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 pre{padding: 0;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-toggleable {background-color: white;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-estimator:hover {background-color: #d4ebff;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-item {z-index: 1;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-parallel-item:only-child::after {width: 0;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20 div.sk-text-repr-fallback {display: none;}</style><div id="sk-24f5a345-1d8b-40ee-a36c-e8a3f02c6e20" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c299f96f-5ac4-4398-b224-dcd7e270cf78" type="checkbox" ><label for="c299f96f-5ac4-4398-b224-dcd7e270cf78" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57eab1ed-8e87-4d81-9df5-d5e6fea05aee" type="checkbox" ><label for="57eab1ed-8e87-4d81-9df5-d5e6fea05aee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9c942e2-3a87-424c-8ef8-8ab177dac920" type="checkbox" ><label for="f9c942e2-3a87-424c-8ef8-8ab177dac920" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c436610e-8373-4eaf-ae8b-ea4d9b23cc01" type="checkbox" ><label for="c436610e-8373-4eaf-ae8b-ea4d9b23cc01" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 {color: black;background-color: white;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 pre{padding: 0;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-toggleable {background-color: white;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-estimator:hover {background-color: #d4ebff;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-item {z-index: 1;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-parallel-item:only-child::after {width: 0;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-034bed3d-5bce-434a-ae47-0c0b58d0e334 div.sk-text-repr-fallback {display: none;}</style><div id="sk-034bed3d-5bce-434a-ae47-0c0b58d0e334" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f8a462f-5237-49d6-acf7-62e14af9f2b7" type="checkbox" ><label for="3f8a462f-5237-49d6-acf7-62e14af9f2b7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="544eba14-afd9-42df-b8a4-5c9823581e5e" type="checkbox" ><label for="544eba14-afd9-42df-b8a4-5c9823581e5e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2306c45-2e1a-4ef1-bb04-5724769599c5" type="checkbox" ><label for="b2306c45-2e1a-4ef1-bb04-5724769599c5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc {color: black;background-color: white;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc pre{padding: 0;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-toggleable {background-color: white;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-estimator:hover {background-color: #d4ebff;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-item {z-index: 1;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-parallel-item:only-child::after {width: 0;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc div.sk-text-repr-fallback {display: none;}</style><div id="sk-b0b56eaa-9e4e-4faa-9702-83231db4aedc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02fc687b-786f-4124-8695-4e2f3e10a498" type="checkbox" ><label for="02fc687b-786f-4124-8695-4e2f3e10a498" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f91100f8-f930-43e2-a78b-c2ebe0c11258" type="checkbox" ><label for="f91100f8-f930-43e2-a78b-c2ebe0c11258" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d099fb5e-cc4c-4e0d-b879-d2c2c7cd999f" type="checkbox" ><label for="d099fb5e-cc4c-4e0d-b879-d2c2c7cd999f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1dba90c8-45c7-468e-b53b-57734d8d0b7f" type="checkbox" ><label for="1dba90c8-45c7-468e-b53b-57734d8d0b7f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe911439-4d99-4e55-a3c3-7afa5b085d44" type="checkbox" ><label for="fe911439-4d99-4e55-a3c3-7afa5b085d44" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ac3d43d-d2ce-4f32-afa4-678c6a960598" type="checkbox" ><label for="7ac3d43d-d2ce-4f32-afa4-678c6a960598" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11ec0866-4a37-488e-b625-b6581b58671b" type="checkbox" ><label for="11ec0866-4a37-488e-b625-b6581b58671b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acae41ce-13ed-40fa-ae91-74c17dec47d8" type="checkbox" ><label for="acae41ce-13ed-40fa-ae91-74c17dec47d8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ec65241-7757-4bbc-b5d4-6540a687c6a8" type="checkbox" ><label for="2ec65241-7757-4bbc-b5d4-6540a687c6a8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 {color: black;background-color: white;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 pre{padding: 0;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-toggleable {background-color: white;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-item {z-index: 1;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-parallel-item:only-child::after {width: 0;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-273e9fd6-5217-452c-9847-aa2dc056e7a0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-273e9fd6-5217-452c-9847-aa2dc056e7a0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="904a0f64-a0a4-4956-9e4e-7fc7ee0dc044" type="checkbox" ><label for="904a0f64-a0a4-4956-9e4e-7fc7ee0dc044" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d06eb98-e329-4998-8848-b407cba2927d" type="checkbox" ><label for="4d06eb98-e329-4998-8848-b407cba2927d" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f727b6d-65a8-44f0-a56b-0c90f68d3de2" type="checkbox" ><label for="9f727b6d-65a8-44f0-a56b-0c90f68d3de2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22d7aebc-d412-41a7-8e65-7e4a2f6fb880" type="checkbox" ><label for="22d7aebc-d412-41a7-8e65-7e4a2f6fb880" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="586c4165-8c0e-45a1-b455-398f2c205d27" type="checkbox" ><label for="586c4165-8c0e-45a1-b455-398f2c205d27" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="459f2e72-2d24-43e5-a4c6-c0f9882e3832" type="checkbox" ><label for="459f2e72-2d24-43e5-a4c6-c0f9882e3832" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83a4de83-968b-4646-855b-cc0286c2d85c" type="checkbox" ><label for="83a4de83-968b-4646-855b-cc0286c2d85c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fedc03f4-3d5e-498d-85d2-f4fb1ca945b4" type="checkbox" ><label for="fedc03f4-3d5e-498d-85d2-f4fb1ca945b4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d357a70-ce0e-4583-9158-1f7212de392b" type="checkbox" ><label for="2d357a70-ce0e-4583-9158-1f7212de392b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5009c905-f28c-407c-a8ee-f2ca681b0ba6" type="checkbox" ><label for="5009c905-f28c-407c-a8ee-f2ca681b0ba6" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.090 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
