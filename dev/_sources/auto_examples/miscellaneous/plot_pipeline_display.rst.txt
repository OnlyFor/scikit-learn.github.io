
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-096bd5c0-393a-47f4-8414-d1bddc449674 {color: black;background-color: white;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 pre{padding: 0;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-toggleable {background-color: white;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-estimator:hover {background-color: #d4ebff;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-item {z-index: 1;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-parallel-item:only-child::after {width: 0;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-container {display: inline-block;position: relative;}#sk-096bd5c0-393a-47f4-8414-d1bddc449674 div.sk-text-repr-fallback {display: none;}</style><div id="sk-096bd5c0-393a-47f4-8414-d1bddc449674" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="daf66114-de0c-46c4-adac-e14ec6034f8d" type="checkbox" ><label class="sk-toggleable__label" for="daf66114-de0c-46c4-adac-e14ec6034f8d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f41e17e-d56d-4d16-addf-f65d7616656f" type="checkbox" ><label class="sk-toggleable__label" for="7f41e17e-d56d-4d16-addf-f65d7616656f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64099629-4a1f-4083-ac75-20fd33dabaff" type="checkbox" ><label class="sk-toggleable__label" for="64099629-4a1f-4083-ac75-20fd33dabaff">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 {color: black;background-color: white;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 pre{padding: 0;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-toggleable {background-color: white;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-item {z-index: 1;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-parallel-item:only-child::after {width: 0;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-container {display: inline-block;position: relative;}#sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8ca0c64c-4c1b-4462-99ab-e93e012ae5b9" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3bf4e385-c6cf-4af5-8a26-f824fc8ddc5f" type="checkbox" ><label class="sk-toggleable__label" for="3bf4e385-c6cf-4af5-8a26-f824fc8ddc5f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4777acae-c122-4c06-ab4d-afe26c4d0220" type="checkbox" ><label class="sk-toggleable__label" for="4777acae-c122-4c06-ab4d-afe26c4d0220">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bef2902d-49b7-49ca-bf4a-a22e94449e89" type="checkbox" ><label class="sk-toggleable__label" for="bef2902d-49b7-49ca-bf4a-a22e94449e89">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa651e3a-e290-48f1-8e88-a1e016232146" type="checkbox" ><label class="sk-toggleable__label" for="fa651e3a-e290-48f1-8e88-a1e016232146">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 {color: black;background-color: white;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 pre{padding: 0;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-toggleable {background-color: white;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-item {z-index: 1;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-parallel-item:only-child::after {width: 0;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-container {display: inline-block;position: relative;}#sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f6ec7e93-07a8-4a82-91ba-5ffa5b164f46" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="793f5cc2-4fb0-4cf0-adc6-ef9824ec846e" type="checkbox" ><label class="sk-toggleable__label" for="793f5cc2-4fb0-4cf0-adc6-ef9824ec846e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="223d4b29-f00f-49ce-af8e-6a306ebe1bf1" type="checkbox" ><label class="sk-toggleable__label" for="223d4b29-f00f-49ce-af8e-6a306ebe1bf1">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c85fc5c-9b32-4094-811b-061e05607e4f" type="checkbox" ><label class="sk-toggleable__label" for="0c85fc5c-9b32-4094-811b-061e05607e4f">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 {color: black;background-color: white;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 pre{padding: 0;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-toggleable {background-color: white;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-item {z-index: 1;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-parallel-item:only-child::after {width: 0;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-container {display: inline-block;position: relative;}#sk-fad11abd-013e-483c-8e67-ca85a30c57c1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fad11abd-013e-483c-8e67-ca85a30c57c1" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b28b8a0f-c182-438e-acd1-33cf016a6755" type="checkbox" ><label class="sk-toggleable__label" for="b28b8a0f-c182-438e-acd1-33cf016a6755">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7ed44836-6aab-406e-afb9-f106d5932ef4" type="checkbox" ><label class="sk-toggleable__label" for="7ed44836-6aab-406e-afb9-f106d5932ef4">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0d5b892-5060-490b-9062-9dc25c82a026" type="checkbox" ><label class="sk-toggleable__label" for="e0d5b892-5060-490b-9062-9dc25c82a026">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3504c54-24ed-488c-b34b-d22ca03fc56e" type="checkbox" ><label class="sk-toggleable__label" for="b3504c54-24ed-488c-b34b-d22ca03fc56e">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76d58fc6-2337-4a33-a53f-253053140b12" type="checkbox" ><label class="sk-toggleable__label" for="76d58fc6-2337-4a33-a53f-253053140b12">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="953cde51-ecc9-484d-b0cc-69a75898a962" type="checkbox" ><label class="sk-toggleable__label" for="953cde51-ecc9-484d-b0cc-69a75898a962">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd716051-79d3-4d75-a66c-a97ebafa57bb" type="checkbox" ><label class="sk-toggleable__label" for="cd716051-79d3-4d75-a66c-a97ebafa57bb">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b305cf29-8822-4627-a93e-be2c36333d59" type="checkbox" ><label class="sk-toggleable__label" for="b305cf29-8822-4627-a93e-be2c36333d59">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8625349-6873-4b35-891e-75d6de72ef2c" type="checkbox" ><label class="sk-toggleable__label" for="e8625349-6873-4b35-891e-75d6de72ef2c">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0429f08a-b965-4434-8858-4b7412f87b93 {color: black;background-color: white;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 pre{padding: 0;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-toggleable {background-color: white;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-item {z-index: 1;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-parallel-item:only-child::after {width: 0;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-container {display: inline-block;position: relative;}#sk-0429f08a-b965-4434-8858-4b7412f87b93 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0429f08a-b965-4434-8858-4b7412f87b93" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ee3388d-e4c9-448b-8238-6bd35bf57ffc" type="checkbox" ><label class="sk-toggleable__label" for="9ee3388d-e4c9-448b-8238-6bd35bf57ffc">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c05791c-8462-4773-b7c4-a10c1bdf4289" type="checkbox" ><label class="sk-toggleable__label" for="9c05791c-8462-4773-b7c4-a10c1bdf4289">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1bcf1f7e-62bc-403b-9348-5c71357e4894" type="checkbox" ><label class="sk-toggleable__label" for="1bcf1f7e-62bc-403b-9348-5c71357e4894">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f390ab0e-6312-4709-88cb-39b3176589b0" type="checkbox" ><label class="sk-toggleable__label" for="f390ab0e-6312-4709-88cb-39b3176589b0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a87b319-9b19-4757-b21b-d49e0d0c1c32" type="checkbox" ><label class="sk-toggleable__label" for="9a87b319-9b19-4757-b21b-d49e0d0c1c32">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50f7d6dc-68d6-45ca-ab13-fc2c99ad1158" type="checkbox" ><label class="sk-toggleable__label" for="50f7d6dc-68d6-45ca-ab13-fc2c99ad1158">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74c039b3-0052-4a37-a43c-e10f8fa1e880" type="checkbox" ><label class="sk-toggleable__label" for="74c039b3-0052-4a37-a43c-e10f8fa1e880">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ea6f15a-4cec-43f6-a223-06d99d5ce3d9" type="checkbox" ><label class="sk-toggleable__label" for="6ea6f15a-4cec-43f6-a223-06d99d5ce3d9">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8091bfe-e5d6-4cb8-b4d7-1de498cd2232" type="checkbox" ><label class="sk-toggleable__label" for="d8091bfe-e5d6-4cb8-b4d7-1de498cd2232">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.130 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
