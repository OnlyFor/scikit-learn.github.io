
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c895de27-cf72-4a90-8add-b6344d192f78 {color: black;background-color: white;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 pre{padding: 0;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-toggleable {background-color: white;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-item {z-index: 1;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-parallel-item:only-child::after {width: 0;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c895de27-cf72-4a90-8add-b6344d192f78 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c895de27-cf72-4a90-8add-b6344d192f78" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fcc4f6b-bbb3-4ce5-bf17-d2b6dfcee29a" type="checkbox" ><label for="6fcc4f6b-bbb3-4ce5-bf17-d2b6dfcee29a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ed8833b-d727-48fb-8410-fe66f17f9900" type="checkbox" ><label for="3ed8833b-d727-48fb-8410-fe66f17f9900" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c30edfc-be9b-4159-9d99-bd43531a3710" type="checkbox" ><label for="8c30edfc-be9b-4159-9d99-bd43531a3710" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6ba68534-44fc-4abf-99cf-501a55cd585d {color: black;background-color: white;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d pre{padding: 0;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-toggleable {background-color: white;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-estimator:hover {background-color: #d4ebff;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-item {z-index: 1;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-parallel-item:only-child::after {width: 0;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6ba68534-44fc-4abf-99cf-501a55cd585d div.sk-text-repr-fallback {display: none;}</style><div id="sk-6ba68534-44fc-4abf-99cf-501a55cd585d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17ae3fda-894c-498e-853d-08ae3ee3e69f" type="checkbox" ><label for="17ae3fda-894c-498e-853d-08ae3ee3e69f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8029138b-bebb-412e-af3d-c5df426897fb" type="checkbox" ><label for="8029138b-bebb-412e-af3d-c5df426897fb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="60ff816f-c974-4bf7-862a-079729b95f04" type="checkbox" ><label for="60ff816f-c974-4bf7-862a-079729b95f04" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e2e1ae8-9783-4dd6-8387-8c11443f7b87" type="checkbox" ><label for="5e2e1ae8-9783-4dd6-8387-8c11443f7b87" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 {color: black;background-color: white;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 pre{padding: 0;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-toggleable {background-color: white;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-item {z-index: 1;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-parallel-item:only-child::after {width: 0;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b7ca0465-aee8-4618-a063-1386d4c731b3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b7ca0465-aee8-4618-a063-1386d4c731b3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59dc6645-ee7a-4d90-892a-e32d398ae5d7" type="checkbox" ><label for="59dc6645-ee7a-4d90-892a-e32d398ae5d7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4b070be-8e45-4bf9-b5c1-a55e830a34d9" type="checkbox" ><label for="b4b070be-8e45-4bf9-b5c1-a55e830a34d9" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcb1decc-44a8-4afa-a085-16cd82dbe4c3" type="checkbox" ><label for="dcb1decc-44a8-4afa-a085-16cd82dbe4c3" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb {color: black;background-color: white;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb pre{padding: 0;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-toggleable {background-color: white;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-estimator:hover {background-color: #d4ebff;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-item {z-index: 1;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-parallel-item:only-child::after {width: 0;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb div.sk-text-repr-fallback {display: none;}</style><div id="sk-9416a71b-654f-4f3f-9d2d-ee150f28f5cb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6830de46-c6df-429c-938e-2f6908e4032b" type="checkbox" ><label for="6830de46-c6df-429c-938e-2f6908e4032b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c20d3f7-e4c0-4ba1-93bf-4480f1caca4e" type="checkbox" ><label for="8c20d3f7-e4c0-4ba1-93bf-4480f1caca4e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5aa2774d-8d9c-46ae-bb6a-a5142191e9ce" type="checkbox" ><label for="5aa2774d-8d9c-46ae-bb6a-a5142191e9ce" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56e0f7a7-ae2d-4493-9fe2-a7c91fa3a7d2" type="checkbox" ><label for="56e0f7a7-ae2d-4493-9fe2-a7c91fa3a7d2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac12c003-6d31-4752-902d-fc66bfb96d45" type="checkbox" ><label for="ac12c003-6d31-4752-902d-fc66bfb96d45" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b1fb4a0-433d-4fe8-92de-426a2b2da7e2" type="checkbox" ><label for="6b1fb4a0-433d-4fe8-92de-426a2b2da7e2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d39214c8-0ab3-4b63-bc8e-a5b3e569cfcf" type="checkbox" ><label for="d39214c8-0ab3-4b63-bc8e-a5b3e569cfcf" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4512e306-bc2b-4f29-a319-c39fd06bd29a" type="checkbox" ><label for="4512e306-bc2b-4f29-a319-c39fd06bd29a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52439c7b-01bc-4bed-bf0b-b9dfb26b61bd" type="checkbox" ><label for="52439c7b-01bc-4bed-bf0b-b9dfb26b61bd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-27bbcff0-77d0-4de3-a072-9010bd972620 {color: black;background-color: white;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 pre{padding: 0;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-toggleable {background-color: white;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-estimator:hover {background-color: #d4ebff;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-item {z-index: 1;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-parallel-item:only-child::after {width: 0;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-27bbcff0-77d0-4de3-a072-9010bd972620 div.sk-text-repr-fallback {display: none;}</style><div id="sk-27bbcff0-77d0-4de3-a072-9010bd972620" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="783f171a-1294-446d-b5d2-d445d9c1c8f2" type="checkbox" ><label for="783f171a-1294-446d-b5d2-d445d9c1c8f2" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8c1a881-67f8-47e1-b17f-455ead333728" type="checkbox" ><label for="d8c1a881-67f8-47e1-b17f-455ead333728" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be85cae4-074f-44f5-99b7-06d1e1eac34e" type="checkbox" ><label for="be85cae4-074f-44f5-99b7-06d1e1eac34e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11434b3f-4935-4408-bffa-1dffaf5fca34" type="checkbox" ><label for="11434b3f-4935-4408-bffa-1dffaf5fca34" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3443a0b6-6a27-401d-808e-f54a3765b98e" type="checkbox" ><label for="3443a0b6-6a27-401d-808e-f54a3765b98e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65b71e78-7a19-4cc3-86eb-3fb9e2d59812" type="checkbox" ><label for="65b71e78-7a19-4cc3-86eb-3fb9e2d59812" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afcb7d70-a070-4428-a147-b1010e46bdc6" type="checkbox" ><label for="afcb7d70-a070-4428-a147-b1010e46bdc6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8f3726c-a91a-4c8d-8649-b12149aac916" type="checkbox" ><label for="b8f3726c-a91a-4c8d-8649-b12149aac916" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b8c10d0f-b016-454f-bf8f-e6fe3b1b1056" type="checkbox" ><label for="b8c10d0f-b016-454f-bf8f-e6fe3b1b1056" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.069 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
