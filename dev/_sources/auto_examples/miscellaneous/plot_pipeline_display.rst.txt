
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 {color: black;background-color: white;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 pre{padding: 0;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-toggleable {background-color: white;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-item {z-index: 1;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-parallel-item:only-child::after {width: 0;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-77cfcfcf-51b6-4a75-a16b-af2621bd2bf3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="644e88c3-e24f-4702-8329-9f81e004f7a7" type="checkbox" ><label for="644e88c3-e24f-4702-8329-9f81e004f7a7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1429f1bc-9dcf-4810-97fd-7bb7a936433f" type="checkbox" ><label for="1429f1bc-9dcf-4810-97fd-7bb7a936433f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64984b52-373a-4041-b774-1fb2719a1ae6" type="checkbox" ><label for="64984b52-373a-4041-b774-1fb2719a1ae6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e8575746-5964-4b74-b755-dd62710df631 {color: black;background-color: white;}#sk-e8575746-5964-4b74-b755-dd62710df631 pre{padding: 0;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-toggleable {background-color: white;}#sk-e8575746-5964-4b74-b755-dd62710df631 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e8575746-5964-4b74-b755-dd62710df631 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e8575746-5964-4b74-b755-dd62710df631 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e8575746-5964-4b74-b755-dd62710df631 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e8575746-5964-4b74-b755-dd62710df631 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8575746-5964-4b74-b755-dd62710df631 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-item {z-index: 1;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-parallel-item:only-child::after {width: 0;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e8575746-5964-4b74-b755-dd62710df631 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e8575746-5964-4b74-b755-dd62710df631" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d1c4e67-36fb-4413-9a1f-02c3004044ab" type="checkbox" ><label for="3d1c4e67-36fb-4413-9a1f-02c3004044ab" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a43b6534-992e-4a03-ab10-180baea72e78" type="checkbox" ><label for="a43b6534-992e-4a03-ab10-180baea72e78" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5f134ce-a342-4163-8798-15c8efe90379" type="checkbox" ><label for="f5f134ce-a342-4163-8798-15c8efe90379" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d59e0b66-d114-4a2c-add6-b45d032797ee" type="checkbox" ><label for="d59e0b66-d114-4a2c-add6-b45d032797ee" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 {color: black;background-color: white;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 pre{padding: 0;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-toggleable {background-color: white;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-estimator:hover {background-color: #d4ebff;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-item {z-index: 1;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-parallel-item:only-child::after {width: 0;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-09478e98-55a0-46ca-86b7-bf27f9a5f696 div.sk-text-repr-fallback {display: none;}</style><div id="sk-09478e98-55a0-46ca-86b7-bf27f9a5f696" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="423c6dea-8967-421c-ad30-789ba1a86d5c" type="checkbox" ><label for="423c6dea-8967-421c-ad30-789ba1a86d5c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b71a26a-75c7-43b4-82ae-f15c608d89d1" type="checkbox" ><label for="7b71a26a-75c7-43b4-82ae-f15c608d89d1" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31dc012a-5fec-416c-834e-6ade5d0909df" type="checkbox" ><label for="31dc012a-5fec-416c-834e-6ade5d0909df" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1395dd98-9608-46a1-b7af-4d20764e8048 {color: black;background-color: white;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 pre{padding: 0;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-toggleable {background-color: white;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-item {z-index: 1;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-parallel-item:only-child::after {width: 0;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1395dd98-9608-46a1-b7af-4d20764e8048 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1395dd98-9608-46a1-b7af-4d20764e8048" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="641e676a-7719-415c-b3a1-7eaf76af6cc6" type="checkbox" ><label for="641e676a-7719-415c-b3a1-7eaf76af6cc6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a4952e7-f8c7-4c0a-bd30-b2faeb235016" type="checkbox" ><label for="3a4952e7-f8c7-4c0a-bd30-b2faeb235016" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d441dbd8-73bd-4afc-a0db-d5b6a82d0733" type="checkbox" ><label for="d441dbd8-73bd-4afc-a0db-d5b6a82d0733" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e334ed5-a8a1-4371-8e03-8af23297a477" type="checkbox" ><label for="8e334ed5-a8a1-4371-8e03-8af23297a477" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3934265-25ad-429f-935c-c91ee3bc4ecc" type="checkbox" ><label for="a3934265-25ad-429f-935c-c91ee3bc4ecc" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7b257c4-30eb-4b15-b234-0c5db9e6f5b7" type="checkbox" ><label for="b7b257c4-30eb-4b15-b234-0c5db9e6f5b7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8378b3ec-1544-4edc-8b64-5b1df97270d2" type="checkbox" ><label for="8378b3ec-1544-4edc-8b64-5b1df97270d2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="40cd96db-424b-4e90-8c5e-5ac97633f7cd" type="checkbox" ><label for="40cd96db-424b-4e90-8c5e-5ac97633f7cd" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e2ca445-65d4-4641-a423-4bf16995813a" type="checkbox" ><label for="5e2ca445-65d4-4641-a423-4bf16995813a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 {color: black;background-color: white;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 pre{padding: 0;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-toggleable {background-color: white;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-estimator:hover {background-color: #d4ebff;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-item {z-index: 1;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-parallel-item:only-child::after {width: 0;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133 div.sk-text-repr-fallback {display: none;}</style><div id="sk-585fb503-8bf5-42f9-93e2-1e3c8dc50133" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12cbe0f5-7bd9-4155-b59d-9e750dc1ba5e" type="checkbox" ><label for="12cbe0f5-7bd9-4155-b59d-9e750dc1ba5e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d113703a-375f-4317-b530-b5f7dd2ff106" type="checkbox" ><label for="d113703a-375f-4317-b530-b5f7dd2ff106" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="772ae115-9325-4c1d-bce6-5bb05d281197" type="checkbox" ><label for="772ae115-9325-4c1d-bce6-5bb05d281197" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2522a1f9-7fac-46bb-9f5a-136b7619893e" type="checkbox" ><label for="2522a1f9-7fac-46bb-9f5a-136b7619893e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d4d2087-10e0-49cc-b9f5-9184a064fa96" type="checkbox" ><label for="6d4d2087-10e0-49cc-b9f5-9184a064fa96" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c553c87-8ee0-4c5e-ac18-6d8c0944f51d" type="checkbox" ><label for="5c553c87-8ee0-4c5e-ac18-6d8c0944f51d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0109399-0a64-415d-b190-4508da822695" type="checkbox" ><label for="f0109399-0a64-415d-b190-4508da822695" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98272a94-7079-449f-8a98-03f5aa42f8f3" type="checkbox" ><label for="98272a94-7079-449f-8a98-03f5aa42f8f3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18bfdfba-809c-455f-b0db-d62f5d611e1d" type="checkbox" ><label for="18bfdfba-809c-455f-b0db-d62f5d611e1d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
