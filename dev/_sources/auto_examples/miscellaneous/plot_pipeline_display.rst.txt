
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e {color: black;background-color: white;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e pre{padding: 0;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-toggleable {background-color: white;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-estimator:hover {background-color: #d4ebff;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-item {z-index: 1;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-parallel-item:only-child::after {width: 0;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e div.sk-text-repr-fallback {display: none;}</style><div id="sk-ce9700f5-51f5-439b-a61b-f8a6b37c2d3e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="407d1a0d-2aac-4d16-a889-9400c44cb4a7" type="checkbox" ><label for="407d1a0d-2aac-4d16-a889-9400c44cb4a7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="898c7593-2fa9-4a61-bb1f-76f4d530eba6" type="checkbox" ><label for="898c7593-2fa9-4a61-bb1f-76f4d530eba6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1179d97a-8484-4d16-839c-940a05865e29" type="checkbox" ><label for="1179d97a-8484-4d16-839c-940a05865e29" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 {color: black;background-color: white;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 pre{padding: 0;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-toggleable {background-color: white;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-item {z-index: 1;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-parallel-item:only-child::after {width: 0;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6e034b8a-5afd-416d-95e0-def5b8e0f3f2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be0b88ac-5af5-4efa-9ee3-714632a454a7" type="checkbox" ><label for="be0b88ac-5af5-4efa-9ee3-714632a454a7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b18910d3-0f1b-4e54-a4c2-36d258832f94" type="checkbox" ><label for="b18910d3-0f1b-4e54-a4c2-36d258832f94" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99774e46-6177-41a5-842b-f386e62825a8" type="checkbox" ><label for="99774e46-6177-41a5-842b-f386e62825a8" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab2fc549-6d14-4666-9cd5-279a9b49453c" type="checkbox" ><label for="ab2fc549-6d14-4666-9cd5-279a9b49453c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d {color: black;background-color: white;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d pre{padding: 0;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-toggleable {background-color: white;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-estimator:hover {background-color: #d4ebff;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-item {z-index: 1;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-parallel-item:only-child::after {width: 0;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d div.sk-text-repr-fallback {display: none;}</style><div id="sk-97ae85fd-eb0b-4e12-8213-807fb34fd21d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4af6a5a-4657-4474-9763-084322e8ced8" type="checkbox" ><label for="a4af6a5a-4657-4474-9763-084322e8ced8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64f22580-e1e7-48ac-b3a3-820a1e409db2" type="checkbox" ><label for="64f22580-e1e7-48ac-b3a3-820a1e409db2" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="18b4b426-3733-425a-b9f2-e3a3d9f3dc99" type="checkbox" ><label for="18b4b426-3733-425a-b9f2-e3a3d9f3dc99" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b {color: black;background-color: white;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b pre{padding: 0;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-toggleable {background-color: white;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-estimator:hover {background-color: #d4ebff;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-item {z-index: 1;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-parallel-item:only-child::after {width: 0;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b div.sk-text-repr-fallback {display: none;}</style><div id="sk-b234bec5-cd33-4295-86b1-42e5ea9cc80b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eb9e608f-0bf9-4f24-adb2-14127e927c59" type="checkbox" ><label for="eb9e608f-0bf9-4f24-adb2-14127e927c59" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4eba497-7005-4d09-b5ef-63bb93b5f20f" type="checkbox" ><label for="a4eba497-7005-4d09-b5ef-63bb93b5f20f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58665831-03e2-47c7-aa19-eb7b43f88620" type="checkbox" ><label for="58665831-03e2-47c7-aa19-eb7b43f88620" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19dcbb9e-92aa-4f74-b5f4-3195a0090797" type="checkbox" ><label for="19dcbb9e-92aa-4f74-b5f4-3195a0090797" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0e2bb16-a2bd-4409-8dfa-993f30033efe" type="checkbox" ><label for="c0e2bb16-a2bd-4409-8dfa-993f30033efe" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d683688-909e-43cd-a931-7b2d976708dc" type="checkbox" ><label for="4d683688-909e-43cd-a931-7b2d976708dc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4287422-aecd-4f89-99a8-61b3b159abba" type="checkbox" ><label for="f4287422-aecd-4f89-99a8-61b3b159abba" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03ec87af-c992-4a79-8116-c4246e907d56" type="checkbox" ><label for="03ec87af-c992-4a79-8116-c4246e907d56" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5cc25654-b4ed-41a3-9001-fbb310284352" type="checkbox" ><label for="5cc25654-b4ed-41a3-9001-fbb310284352" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd {color: black;background-color: white;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd pre{padding: 0;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-toggleable {background-color: white;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-estimator:hover {background-color: #d4ebff;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-item {z-index: 1;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-parallel-item:only-child::after {width: 0;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd div.sk-text-repr-fallback {display: none;}</style><div id="sk-f39fb539-b13a-49da-9f4d-91c7bbfeb9fd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc4698a9-21d0-44fd-a1cc-cb62925454b3" type="checkbox" ><label for="fc4698a9-21d0-44fd-a1cc-cb62925454b3" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e0a1f63-f0f0-43bf-a838-f2d5e496fd26" type="checkbox" ><label for="9e0a1f63-f0f0-43bf-a838-f2d5e496fd26" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be08e198-c8bd-4eec-bd9c-8c6a3431200d" type="checkbox" ><label for="be08e198-c8bd-4eec-bd9c-8c6a3431200d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="948dd0c0-17c8-4754-8b31-91fb295b14cf" type="checkbox" ><label for="948dd0c0-17c8-4754-8b31-91fb295b14cf" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b02c01fd-ef8d-4083-b245-8e8fd6778e0a" type="checkbox" ><label for="b02c01fd-ef8d-4083-b245-8e8fd6778e0a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="284fba46-8fc3-44ad-ba7e-2a88846613d6" type="checkbox" ><label for="284fba46-8fc3-44ad-ba7e-2a88846613d6" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b4e3172-e42a-467f-b96f-950e2f0dbc81" type="checkbox" ><label for="9b4e3172-e42a-467f-b96f-950e2f0dbc81" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff784b7a-f897-41e0-8e54-09fddb23d709" type="checkbox" ><label for="ff784b7a-f897-41e0-8e54-09fddb23d709" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31f2a045-04a6-4844-9c08-8aa8ef482857" type="checkbox" ><label for="31f2a045-04a6-4844-9c08-8aa8ef482857" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="980731e0-3c2f-47e0-94e0-debedb68686f" type="checkbox" ><label for="980731e0-3c2f-47e0-94e0-debedb68686f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
