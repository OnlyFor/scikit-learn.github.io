
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 {color: black;background-color: white;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 pre{padding: 0;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-toggleable {background-color: white;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-item {z-index: 1;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-parallel-item:only-child::after {width: 0;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a5b086fb-9253-4f38-a7f3-702adb43a408 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a5b086fb-9253-4f38-a7f3-702adb43a408" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f90920be-42af-44c7-acd7-d6de61bdadf5" type="checkbox" ><label for="f90920be-42af-44c7-acd7-d6de61bdadf5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9430c49-f842-4b83-a91b-1b1bd772a00d" type="checkbox" ><label for="a9430c49-f842-4b83-a91b-1b1bd772a00d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41067880-b362-4343-a72a-48e1cd778e51" type="checkbox" ><label for="41067880-b362-4343-a72a-48e1cd778e51" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-46064853-aebf-4e20-a107-37cd70955747 {color: black;background-color: white;}#sk-46064853-aebf-4e20-a107-37cd70955747 pre{padding: 0;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-toggleable {background-color: white;}#sk-46064853-aebf-4e20-a107-37cd70955747 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-46064853-aebf-4e20-a107-37cd70955747 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-46064853-aebf-4e20-a107-37cd70955747 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-46064853-aebf-4e20-a107-37cd70955747 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-46064853-aebf-4e20-a107-37cd70955747 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-46064853-aebf-4e20-a107-37cd70955747 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-estimator:hover {background-color: #d4ebff;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-item {z-index: 1;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-parallel-item:only-child::after {width: 0;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-46064853-aebf-4e20-a107-37cd70955747 div.sk-text-repr-fallback {display: none;}</style><div id="sk-46064853-aebf-4e20-a107-37cd70955747" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5e0c8ae-a85e-4b9d-bd5c-d512bc53a31c" type="checkbox" ><label for="e5e0c8ae-a85e-4b9d-bd5c-d512bc53a31c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e83a2a8-8a40-4f2c-a6eb-ba7084cff4e5" type="checkbox" ><label for="9e83a2a8-8a40-4f2c-a6eb-ba7084cff4e5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e332aafb-ed35-42d0-8686-db5ac9de84c9" type="checkbox" ><label for="e332aafb-ed35-42d0-8686-db5ac9de84c9" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c142f95b-d2cc-4722-a6c5-b9690b7db6a2" type="checkbox" ><label for="c142f95b-d2cc-4722-a6c5-b9690b7db6a2" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca {color: black;background-color: white;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca pre{padding: 0;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-toggleable {background-color: white;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-item {z-index: 1;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-parallel-item:only-child::after {width: 0;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca div.sk-text-repr-fallback {display: none;}</style><div id="sk-5e4f5a13-b8d0-4502-9dc0-42fc4a3961ca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05050f5a-4f9b-40c4-b1ce-8d365aa348d8" type="checkbox" ><label for="05050f5a-4f9b-40c4-b1ce-8d365aa348d8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="027d5e2d-ca7d-4005-b253-5cab29b79929" type="checkbox" ><label for="027d5e2d-ca7d-4005-b253-5cab29b79929" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97e3c117-52b2-46b8-8bae-bb817685e500" type="checkbox" ><label for="97e3c117-52b2-46b8-8bae-bb817685e500" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 {color: black;background-color: white;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 pre{padding: 0;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-toggleable {background-color: white;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-item {z-index: 1;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-parallel-item:only-child::after {width: 0;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f3b572dd-9fc0-42c8-9aed-4d8e1db8cac3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20c85970-7f19-4184-a26c-4cd7ca690115" type="checkbox" ><label for="20c85970-7f19-4184-a26c-4cd7ca690115" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a3905cd-3614-46d3-af04-45a12ad7f6f4" type="checkbox" ><label for="0a3905cd-3614-46d3-af04-45a12ad7f6f4" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c418a408-56df-4f27-be6d-c9b331ed61c0" type="checkbox" ><label for="c418a408-56df-4f27-be6d-c9b331ed61c0" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b268081-1e48-4940-94e5-33cecb9d4576" type="checkbox" ><label for="6b268081-1e48-4940-94e5-33cecb9d4576" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fbd961f-7607-4798-b8c5-777af04b4f34" type="checkbox" ><label for="0fbd961f-7607-4798-b8c5-777af04b4f34" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e82f719e-38bc-4953-b56a-47458e079556" type="checkbox" ><label for="e82f719e-38bc-4953-b56a-47458e079556" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fe617a2-0f9c-4550-b611-55eeaff430ed" type="checkbox" ><label for="1fe617a2-0f9c-4550-b611-55eeaff430ed" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf5b25b1-333d-4391-9886-de5ac9d87a88" type="checkbox" ><label for="bf5b25b1-333d-4391-9886-de5ac9d87a88" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46e0b44b-df96-4f48-b033-0962b57b1cf3" type="checkbox" ><label for="46e0b44b-df96-4f48-b033-0962b57b1cf3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff {color: black;background-color: white;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff pre{padding: 0;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-toggleable {background-color: white;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-item {z-index: 1;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-parallel-item:only-child::after {width: 0;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab8b1b3c-8850-47e3-9d2b-6cf953c767ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a4bf638-f6bd-4cc9-94b2-9783f23e1acb" type="checkbox" ><label for="1a4bf638-f6bd-4cc9-94b2-9783f23e1acb" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2810bd8-77da-4bfb-a31a-0f6a41762ba2" type="checkbox" ><label for="f2810bd8-77da-4bfb-a31a-0f6a41762ba2" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c53a0fe-4fb1-43b6-b64f-e8011e3c06e8" type="checkbox" ><label for="3c53a0fe-4fb1-43b6-b64f-e8011e3c06e8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f147dc6-c524-432a-ad8c-788bcb1183d1" type="checkbox" ><label for="7f147dc6-c524-432a-ad8c-788bcb1183d1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fa1615f-33d0-4c5e-bccb-9f4f3cc1cc40" type="checkbox" ><label for="1fa1615f-33d0-4c5e-bccb-9f4f3cc1cc40" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e2638f4-c050-400c-aa9d-4ac4128d1b90" type="checkbox" ><label for="8e2638f4-c050-400c-aa9d-4ac4128d1b90" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8cb35e66-8fe9-43ef-9e1d-67eeb424d76f" type="checkbox" ><label for="8cb35e66-8fe9-43ef-9e1d-67eeb424d76f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="744233eb-6835-4fcd-b7d0-9fea39610d81" type="checkbox" ><label for="744233eb-6835-4fcd-b7d0-9fea39610d81" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d05a65c-5086-45de-9ccb-cf1418fa04f8" type="checkbox" ><label for="4d05a65c-5086-45de-9ccb-cf1418fa04f8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.080 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
