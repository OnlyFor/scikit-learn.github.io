
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 {color: black;background-color: white;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 pre{padding: 0;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-toggleable {background-color: white;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-item {z-index: 1;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-parallel-item:only-child::after {width: 0;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d7fa06f4-c153-457e-a6a9-ea32eba41072 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d7fa06f4-c153-457e-a6a9-ea32eba41072" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bdab726-64f7-40ec-bd9d-eeb3197cc1e7" type="checkbox" ><label for="2bdab726-64f7-40ec-bd9d-eeb3197cc1e7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0e1eb8a-261f-4df3-b102-a1df5904cf4b" type="checkbox" ><label for="a0e1eb8a-261f-4df3-b102-a1df5904cf4b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eeedc6d-9aff-4eb4-aa47-0269220729f0" type="checkbox" ><label for="0eeedc6d-9aff-4eb4-aa47-0269220729f0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-69db865a-550e-4634-8334-f48930142471 {color: black;background-color: white;}#sk-69db865a-550e-4634-8334-f48930142471 pre{padding: 0;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-toggleable {background-color: white;}#sk-69db865a-550e-4634-8334-f48930142471 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-69db865a-550e-4634-8334-f48930142471 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-69db865a-550e-4634-8334-f48930142471 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-69db865a-550e-4634-8334-f48930142471 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-69db865a-550e-4634-8334-f48930142471 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-69db865a-550e-4634-8334-f48930142471 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-estimator:hover {background-color: #d4ebff;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-item {z-index: 1;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-parallel-item:only-child::after {width: 0;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-69db865a-550e-4634-8334-f48930142471 div.sk-text-repr-fallback {display: none;}</style><div id="sk-69db865a-550e-4634-8334-f48930142471" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16322a99-70b9-48e1-a87f-07131d40c078" type="checkbox" ><label for="16322a99-70b9-48e1-a87f-07131d40c078" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbf9369c-cdcd-4205-a67b-a4b5fd78bcd2" type="checkbox" ><label for="fbf9369c-cdcd-4205-a67b-a4b5fd78bcd2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bfabf82-f12a-445f-bd53-83bf94ea3640" type="checkbox" ><label for="4bfabf82-f12a-445f-bd53-83bf94ea3640" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c96746ba-9752-437b-a8a6-7140cdf7d5b1" type="checkbox" ><label for="c96746ba-9752-437b-a8a6-7140cdf7d5b1" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc {color: black;background-color: white;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc pre{padding: 0;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-toggleable {background-color: white;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-estimator:hover {background-color: #d4ebff;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-item {z-index: 1;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-parallel-item:only-child::after {width: 0;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6c9d9bb0-46be-472b-899c-23c7fca294bc div.sk-text-repr-fallback {display: none;}</style><div id="sk-6c9d9bb0-46be-472b-899c-23c7fca294bc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8de4b3d1-e1cf-4cc6-a608-153d4b29e0be" type="checkbox" ><label for="8de4b3d1-e1cf-4cc6-a608-153d4b29e0be" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecd2808a-448d-4994-9dc1-834e1100b91f" type="checkbox" ><label for="ecd2808a-448d-4994-9dc1-834e1100b91f" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0105289-5da7-40de-9b5e-01e9bd96d56e" type="checkbox" ><label for="d0105289-5da7-40de-9b5e-01e9bd96d56e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f {color: black;background-color: white;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f pre{padding: 0;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-toggleable {background-color: white;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-estimator:hover {background-color: #d4ebff;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-item {z-index: 1;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-parallel-item:only-child::after {width: 0;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3aa599dd-2528-4222-8540-18f2ed7bec7f div.sk-text-repr-fallback {display: none;}</style><div id="sk-3aa599dd-2528-4222-8540-18f2ed7bec7f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58a50c59-c851-4ae7-a75a-a83a46178b47" type="checkbox" ><label for="58a50c59-c851-4ae7-a75a-a83a46178b47" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="586da30a-a81a-484d-b902-71dea0195e63" type="checkbox" ><label for="586da30a-a81a-484d-b902-71dea0195e63" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1f1524b-200e-4d5d-82dc-bce4a60046b9" type="checkbox" ><label for="b1f1524b-200e-4d5d-82dc-bce4a60046b9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac94049c-da85-4e80-a18d-34bb191f5067" type="checkbox" ><label for="ac94049c-da85-4e80-a18d-34bb191f5067" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50ac1940-3ba4-4e45-8dae-502005b54b42" type="checkbox" ><label for="50ac1940-3ba4-4e45-8dae-502005b54b42" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="949eda36-b26b-4692-b15b-0d4cf777f986" type="checkbox" ><label for="949eda36-b26b-4692-b15b-0d4cf777f986" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68d8f41d-a7aa-425b-8114-cdcc51931c13" type="checkbox" ><label for="68d8f41d-a7aa-425b-8114-cdcc51931c13" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="19c4be5f-6441-4be4-af9d-e2b1007499ca" type="checkbox" ><label for="19c4be5f-6441-4be4-af9d-e2b1007499ca" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d3f91e7-f48b-42f8-b952-5c7a78e6a0ca" type="checkbox" ><label for="7d3f91e7-f48b-42f8-b952-5c7a78e6a0ca" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 {color: black;background-color: white;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 pre{padding: 0;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-toggleable {background-color: white;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-item {z-index: 1;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-parallel-item:only-child::after {width: 0;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-00845151-746f-4e50-8aeb-6388e55cb8b4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-00845151-746f-4e50-8aeb-6388e55cb8b4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca8b4046-fb1d-47e4-8a7f-cd873fc4c1fb" type="checkbox" ><label for="ca8b4046-fb1d-47e4-8a7f-cd873fc4c1fb" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="503d4293-f68c-4629-afe1-3fb2fcdd4f81" type="checkbox" ><label for="503d4293-f68c-4629-afe1-3fb2fcdd4f81" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dd08b0c-5f7e-4864-9c7e-f1532aa3220c" type="checkbox" ><label for="6dd08b0c-5f7e-4864-9c7e-f1532aa3220c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bb32981-a3c7-4d00-8d1b-38e78df628c3" type="checkbox" ><label for="7bb32981-a3c7-4d00-8d1b-38e78df628c3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ab3824d6-c2a6-43cb-85b4-febf160aa762" type="checkbox" ><label for="ab3824d6-c2a6-43cb-85b4-febf160aa762" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7dab321-f175-4393-9754-d2d5f684c1ab" type="checkbox" ><label for="f7dab321-f175-4393-9754-d2d5f684c1ab" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed3527b3-bc0c-4f07-85f0-3447f7a7149a" type="checkbox" ><label for="ed3527b3-bc0c-4f07-85f0-3447f7a7149a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0dd00dd-ca90-4c38-a0d5-1839b805c920" type="checkbox" ><label for="f0dd00dd-ca90-4c38-a0d5-1839b805c920" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b775235d-da92-4406-9ffd-58d650bc9285" type="checkbox" ><label for="b775235d-da92-4406-9ffd-58d650bc9285" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
