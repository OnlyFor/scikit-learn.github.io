
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 {color: black;background-color: white;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 pre{padding: 0;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-toggleable {background-color: white;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-item {z-index: 1;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-parallel-item:only-child::after {width: 0;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ee4ce19b-390c-49bb-95b0-b111d2f3efb3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="33f61be9-fd86-4400-a526-94b457d46722" type="checkbox" ><label for="33f61be9-fd86-4400-a526-94b457d46722" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e39af21-516b-4bfc-9a57-e582048c3bc4" type="checkbox" ><label for="5e39af21-516b-4bfc-9a57-e582048c3bc4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="812c772f-6fc5-4cc8-a4bb-e5a113432774" type="checkbox" ><label for="812c772f-6fc5-4cc8-a4bb-e5a113432774" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 {color: black;background-color: white;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 pre{padding: 0;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-toggleable {background-color: white;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-item {z-index: 1;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-parallel-item:only-child::after {width: 0;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4fad9939-0734-4ccc-bc42-e77e62fd2df7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6bb9b7f-6940-46b5-8b4d-ec074fb2ae1d" type="checkbox" ><label for="a6bb9b7f-6940-46b5-8b4d-ec074fb2ae1d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="799013b8-5818-4706-9e12-e0d85ec8be61" type="checkbox" ><label for="799013b8-5818-4706-9e12-e0d85ec8be61" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2a7e5c1-0f4a-4367-8a0c-2127b32e58b6" type="checkbox" ><label for="c2a7e5c1-0f4a-4367-8a0c-2127b32e58b6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a228c9a4-d05b-4d4e-b7ff-10675e06f8af" type="checkbox" ><label for="a228c9a4-d05b-4d4e-b7ff-10675e06f8af" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-32c7bfec-75a4-4350-bc64-63727df01087 {color: black;background-color: white;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 pre{padding: 0;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-toggleable {background-color: white;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-estimator:hover {background-color: #d4ebff;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-item {z-index: 1;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-parallel-item:only-child::after {width: 0;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-32c7bfec-75a4-4350-bc64-63727df01087 div.sk-text-repr-fallback {display: none;}</style><div id="sk-32c7bfec-75a4-4350-bc64-63727df01087" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cba7c81e-45ee-46d2-9443-be5cee2cb6f8" type="checkbox" ><label for="cba7c81e-45ee-46d2-9443-be5cee2cb6f8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa9e347f-5331-4f7c-a993-cb34818ef608" type="checkbox" ><label for="aa9e347f-5331-4f7c-a993-cb34818ef608" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85f0c383-dea5-4abe-9c70-06ddf892a9d8" type="checkbox" ><label for="85f0c383-dea5-4abe-9c70-06ddf892a9d8" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-56d28608-b736-466b-9193-52382bc476ea {color: black;background-color: white;}#sk-56d28608-b736-466b-9193-52382bc476ea pre{padding: 0;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-toggleable {background-color: white;}#sk-56d28608-b736-466b-9193-52382bc476ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-56d28608-b736-466b-9193-52382bc476ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-56d28608-b736-466b-9193-52382bc476ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-56d28608-b736-466b-9193-52382bc476ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-56d28608-b736-466b-9193-52382bc476ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-56d28608-b736-466b-9193-52382bc476ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-item {z-index: 1;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-parallel-item:only-child::after {width: 0;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-56d28608-b736-466b-9193-52382bc476ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-56d28608-b736-466b-9193-52382bc476ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ce2dba2-455b-4cf8-b35c-aba5a4bca925" type="checkbox" ><label for="8ce2dba2-455b-4cf8-b35c-aba5a4bca925" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f3f2a92-05a7-4bf0-9ddb-cfbfa65cb481" type="checkbox" ><label for="0f3f2a92-05a7-4bf0-9ddb-cfbfa65cb481" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="601cb589-68a8-43c5-b4ec-b81e5e277dd7" type="checkbox" ><label for="601cb589-68a8-43c5-b4ec-b81e5e277dd7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8e6cdf1-614b-4054-906e-f1a8d13fd1d2" type="checkbox" ><label for="a8e6cdf1-614b-4054-906e-f1a8d13fd1d2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="609481d7-a40a-42d8-86bd-76fb8c79c71f" type="checkbox" ><label for="609481d7-a40a-42d8-86bd-76fb8c79c71f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6724adae-d94c-4c0a-8935-72f701f5f000" type="checkbox" ><label for="6724adae-d94c-4c0a-8935-72f701f5f000" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ae70152-d2c2-4df5-90f0-d4071f7b1c86" type="checkbox" ><label for="1ae70152-d2c2-4df5-90f0-d4071f7b1c86" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15dd8e12-a5fe-4988-a640-3521ef8d39ec" type="checkbox" ><label for="15dd8e12-a5fe-4988-a640-3521ef8d39ec" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9bfb195-8457-425b-b0d2-67cbf289a2ae" type="checkbox" ><label for="b9bfb195-8457-425b-b0d2-67cbf289a2ae" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 {color: black;background-color: white;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 pre{padding: 0;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-toggleable {background-color: white;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-item {z-index: 1;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-parallel-item:only-child::after {width: 0;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c62e0afe-cda9-4c87-8d85-0b22dcbcc2f6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5b9bc54-5d47-4cce-8717-2ea1d924e6b9" type="checkbox" ><label for="c5b9bc54-5d47-4cce-8717-2ea1d924e6b9" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bba4e51-e46c-48b9-80df-30b3e5e8a75d" type="checkbox" ><label for="0bba4e51-e46c-48b9-80df-30b3e5e8a75d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="844fca12-b56d-410d-b0e9-ae3548733e2f" type="checkbox" ><label for="844fca12-b56d-410d-b0e9-ae3548733e2f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3eaf2cdc-db0b-4233-863b-e23251e7e003" type="checkbox" ><label for="3eaf2cdc-db0b-4233-863b-e23251e7e003" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad3795bd-74e3-43e4-8d45-240a2d8261ac" type="checkbox" ><label for="ad3795bd-74e3-43e4-8d45-240a2d8261ac" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c1291d9-5908-4cf1-9b92-77d3c336b326" type="checkbox" ><label for="6c1291d9-5908-4cf1-9b92-77d3c336b326" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4284b047-97cc-4cf1-91ef-f8cfb8962ad0" type="checkbox" ><label for="4284b047-97cc-4cf1-91ef-f8cfb8962ad0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f06fdff5-0e1e-47cf-a532-8c09148b7520" type="checkbox" ><label for="f06fdff5-0e1e-47cf-a532-8c09148b7520" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8903996-9b98-4015-9983-7bbecb121d42" type="checkbox" ><label for="a8903996-9b98-4015-9983-7bbecb121d42" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
