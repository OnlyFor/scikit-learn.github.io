
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 {color: black;background-color: white;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 pre{padding: 0;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-toggleable {background-color: white;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-item {z-index: 1;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-parallel-item:only-child::after {width: 0;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c781b4a0-e610-4750-8e3b-51f42fc8f610 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c781b4a0-e610-4750-8e3b-51f42fc8f610" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="adfdf4c5-ae00-499e-a4ba-5e012a1fcb3c" type="checkbox" ><label for="adfdf4c5-ae00-499e-a4ba-5e012a1fcb3c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e50b89a9-10ed-49d3-8b9f-df940fed281a" type="checkbox" ><label for="e50b89a9-10ed-49d3-8b9f-df940fed281a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ec7020d-c69c-4ad9-9378-ca4e2e25b843" type="checkbox" ><label for="4ec7020d-c69c-4ad9-9378-ca4e2e25b843" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 {color: black;background-color: white;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 pre{padding: 0;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-toggleable {background-color: white;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-item {z-index: 1;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-parallel-item:only-child::after {width: 0;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dee43ef4-6d6a-4292-85f4-22e095cc4501 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dee43ef4-6d6a-4292-85f4-22e095cc4501" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5edd5f8-1d4e-4f1d-8f41-7e1f7cc1a3a9" type="checkbox" ><label for="c5edd5f8-1d4e-4f1d-8f41-7e1f7cc1a3a9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0b4bcd5-af2a-412c-ab09-aec936673855" type="checkbox" ><label for="f0b4bcd5-af2a-412c-ab09-aec936673855" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="439c14df-ab98-4bff-8b0c-29451ead6e3b" type="checkbox" ><label for="439c14df-ab98-4bff-8b0c-29451ead6e3b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a39a620-15e4-4a3c-af50-c5c921297eab" type="checkbox" ><label for="4a39a620-15e4-4a3c-af50-c5c921297eab" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 {color: black;background-color: white;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 pre{padding: 0;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-toggleable {background-color: white;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-item {z-index: 1;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-parallel-item:only-child::after {width: 0;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-be9f488d-8c6e-42e1-9ac6-8de75c601ba6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0c379fb-a50c-4ef2-89d3-83a7e4149129" type="checkbox" ><label for="c0c379fb-a50c-4ef2-89d3-83a7e4149129" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16bcbee8-d611-412e-b573-43cdeaa9d7d9" type="checkbox" ><label for="16bcbee8-d611-412e-b573-43cdeaa9d7d9" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99497f6f-0960-45dd-94e5-b65aa8bf8318" type="checkbox" ><label for="99497f6f-0960-45dd-94e5-b65aa8bf8318" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 {color: black;background-color: white;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 pre{padding: 0;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-toggleable {background-color: white;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-item {z-index: 1;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-parallel-item:only-child::after {width: 0;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e82924ed-6a49-4e08-a0ec-548590e1b859 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e82924ed-6a49-4e08-a0ec-548590e1b859" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0cd46886-82eb-4e22-94e9-e3eaf02e4cba" type="checkbox" ><label for="0cd46886-82eb-4e22-94e9-e3eaf02e4cba" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9392556a-e1be-42ef-8af5-0b7680f48523" type="checkbox" ><label for="9392556a-e1be-42ef-8af5-0b7680f48523" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c917a35-e5ba-4b32-9c5b-cf318f636513" type="checkbox" ><label for="2c917a35-e5ba-4b32-9c5b-cf318f636513" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82c3223d-c76b-4bf2-8332-1f5ccf7c58a8" type="checkbox" ><label for="82c3223d-c76b-4bf2-8332-1f5ccf7c58a8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e9ff9f7-c690-48f3-9a6c-29d84a0f266f" type="checkbox" ><label for="0e9ff9f7-c690-48f3-9a6c-29d84a0f266f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d838e9d-fdb6-4471-8f76-51e16ac0d7db" type="checkbox" ><label for="5d838e9d-fdb6-4471-8f76-51e16ac0d7db" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28a443d9-e475-40d0-934d-a2bf12be8143" type="checkbox" ><label for="28a443d9-e475-40d0-934d-a2bf12be8143" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff96fad4-dffd-4785-94e1-a6285f7f97ea" type="checkbox" ><label for="ff96fad4-dffd-4785-94e1-a6285f7f97ea" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6dcb2939-04f5-42bf-abe4-7a407155d24d" type="checkbox" ><label for="6dcb2939-04f5-42bf-abe4-7a407155d24d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 {color: black;background-color: white;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 pre{padding: 0;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-toggleable {background-color: white;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-item {z-index: 1;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-parallel-item:only-child::after {width: 0;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9e097994-592f-4b9c-b1c4-8ae6e2e2ef99" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f620eed-6221-47e4-8892-8790a4a3737b" type="checkbox" ><label for="0f620eed-6221-47e4-8892-8790a4a3737b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b97d626-e142-46f5-82e8-901f89b5d3f7" type="checkbox" ><label for="5b97d626-e142-46f5-82e8-901f89b5d3f7" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d48ba83-9389-44f3-92b1-2a9603516154" type="checkbox" ><label for="1d48ba83-9389-44f3-92b1-2a9603516154" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21401248-3628-4c01-8c9d-9e6b4ae86afa" type="checkbox" ><label for="21401248-3628-4c01-8c9d-9e6b4ae86afa" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a9808fd-98eb-4a0c-9730-6feb4d0531f8" type="checkbox" ><label for="3a9808fd-98eb-4a0c-9730-6feb4d0531f8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="647a26aa-31c0-432d-81c3-396fcb383a28" type="checkbox" ><label for="647a26aa-31c0-432d-81c3-396fcb383a28" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0de7722-38d9-4854-9040-de8f0c0c2585" type="checkbox" ><label for="b0de7722-38d9-4854-9040-de8f0c0c2585" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70907e29-e82f-4021-be6b-1ee7201945e9" type="checkbox" ><label for="70907e29-e82f-4021-be6b-1ee7201945e9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72352fa1-29b1-4ea3-82d3-e3e4c51bada1" type="checkbox" ><label for="72352fa1-29b1-4ea3-82d3-e3e4c51bada1" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.080 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
