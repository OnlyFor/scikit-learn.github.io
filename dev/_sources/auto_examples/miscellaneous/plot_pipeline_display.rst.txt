
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 {color: black;background-color: white;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 pre{padding: 0;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-toggleable {background-color: white;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-item {z-index: 1;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-parallel-item:only-child::after {width: 0;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6c0e4514-8cdb-4d59-99af-425f75f87ba6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8d87631-cb9c-4192-9c5e-4e255432ba8c" type="checkbox" ><label for="a8d87631-cb9c-4192-9c5e-4e255432ba8c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87c6ee53-3065-46b1-8a40-f760ffd2aa1a" type="checkbox" ><label for="87c6ee53-3065-46b1-8a40-f760ffd2aa1a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="512276c0-7b47-49f3-a7c3-24b79884eaef" type="checkbox" ><label for="512276c0-7b47-49f3-a7c3-24b79884eaef" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-24556d81-7041-4872-9abd-0d9c5749ffae {color: black;background-color: white;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae pre{padding: 0;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-toggleable {background-color: white;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-estimator:hover {background-color: #d4ebff;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-item {z-index: 1;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-parallel-item:only-child::after {width: 0;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-24556d81-7041-4872-9abd-0d9c5749ffae div.sk-text-repr-fallback {display: none;}</style><div id="sk-24556d81-7041-4872-9abd-0d9c5749ffae" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d06379f-4a30-47c3-9ff1-517015337e39" type="checkbox" ><label for="2d06379f-4a30-47c3-9ff1-517015337e39" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9c9b290-79da-4fd3-b9e2-b5bbebc34305" type="checkbox" ><label for="f9c9b290-79da-4fd3-b9e2-b5bbebc34305" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f85eba4-5cce-4a68-9da4-f6047b96e928" type="checkbox" ><label for="1f85eba4-5cce-4a68-9da4-f6047b96e928" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1abe2917-6a09-4fef-b0cd-a8989646bbf7" type="checkbox" ><label for="1abe2917-6a09-4fef-b0cd-a8989646bbf7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b {color: black;background-color: white;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b pre{padding: 0;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-toggleable {background-color: white;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-item {z-index: 1;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-parallel-item:only-child::after {width: 0;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b8576b3-1add-45c9-b9f7-696a52b5003b div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b8576b3-1add-45c9-b9f7-696a52b5003b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6b3cc258-85ca-4b41-b22d-30b6e742b4ed" type="checkbox" ><label for="6b3cc258-85ca-4b41-b22d-30b6e742b4ed" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a9428a8-e65f-49a1-a609-8f715018a442" type="checkbox" ><label for="6a9428a8-e65f-49a1-a609-8f715018a442" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66a75e22-249f-464a-bc6b-f8d482f217ab" type="checkbox" ><label for="66a75e22-249f-464a-bc6b-f8d482f217ab" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca {color: black;background-color: white;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca pre{padding: 0;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-toggleable {background-color: white;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-estimator:hover {background-color: #d4ebff;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-item {z-index: 1;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-parallel-item:only-child::after {width: 0;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca div.sk-text-repr-fallback {display: none;}</style><div id="sk-b03849f3-bb2f-4fbc-927c-ef20da0a77ca" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f4b6093-1063-4c7c-b90e-9f29b133f875" type="checkbox" ><label for="7f4b6093-1063-4c7c-b90e-9f29b133f875" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="51bcf129-bce9-4034-981d-03097a55a482" type="checkbox" ><label for="51bcf129-bce9-4034-981d-03097a55a482" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6172299-3828-4df8-9b96-5fe5434461de" type="checkbox" ><label for="c6172299-3828-4df8-9b96-5fe5434461de" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf1c6928-72e4-478c-9d85-e9b1eabc2821" type="checkbox" ><label for="cf1c6928-72e4-478c-9d85-e9b1eabc2821" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aa186b83-9dfe-424c-b232-16c2c740aaf9" type="checkbox" ><label for="aa186b83-9dfe-424c-b232-16c2c740aaf9" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b1fa4f28-e44c-4eb1-a4bc-2a401cd18e36" type="checkbox" ><label for="b1fa4f28-e44c-4eb1-a4bc-2a401cd18e36" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bab5ece8-0617-4e0d-b66b-16adbbca4ea5" type="checkbox" ><label for="bab5ece8-0617-4e0d-b66b-16adbbca4ea5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f23cf8c-6e7d-4438-9e22-104864517646" type="checkbox" ><label for="0f23cf8c-6e7d-4438-9e22-104864517646" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ee69cfa-b201-4908-9e5b-eac04c9cd80d" type="checkbox" ><label for="6ee69cfa-b201-4908-9e5b-eac04c9cd80d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d {color: black;background-color: white;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d pre{padding: 0;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-toggleable {background-color: white;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-estimator:hover {background-color: #d4ebff;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-item {z-index: 1;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-parallel-item:only-child::after {width: 0;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d div.sk-text-repr-fallback {display: none;}</style><div id="sk-6b6b0da3-f070-4bf9-9120-17c3d6ecca0d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77e65617-87bf-411c-84e1-26cc83d214ff" type="checkbox" ><label for="77e65617-87bf-411c-84e1-26cc83d214ff" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cb952f7-98da-45a2-b19b-8cc948a7f581" type="checkbox" ><label for="7cb952f7-98da-45a2-b19b-8cc948a7f581" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2f4264af-1323-4337-8d28-45e5422639fe" type="checkbox" ><label for="2f4264af-1323-4337-8d28-45e5422639fe" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="529ce7f4-accc-4467-a944-d49aeff9f4e9" type="checkbox" ><label for="529ce7f4-accc-4467-a944-d49aeff9f4e9" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3c5f6ab-924d-42a4-904b-55b7db6caf56" type="checkbox" ><label for="b3c5f6ab-924d-42a4-904b-55b7db6caf56" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="797be23e-c533-461a-82df-baa9e8154a32" type="checkbox" ><label for="797be23e-c533-461a-82df-baa9e8154a32" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0209a6c-ce71-4afa-82a2-e985a3f9299c" type="checkbox" ><label for="b0209a6c-ce71-4afa-82a2-e985a3f9299c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4530bf2-9aeb-4782-9afd-9186f5f33736" type="checkbox" ><label for="e4530bf2-9aeb-4782-9afd-9186f5f33736" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="529927d7-79d1-4db4-b2c2-3c4ea6642640" type="checkbox" ><label for="529927d7-79d1-4db4-b2c2-3c4ea6642640" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba850408-b0ca-467f-8a3a-47fba655a265" type="checkbox" ><label for="ba850408-b0ca-467f-8a3a-47fba655a265" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.105 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
