
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-359036c9-f1d7-477c-9a58-44f45fab5edc {color: black;background-color: white;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc pre{padding: 0;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-toggleable {background-color: white;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-estimator:hover {background-color: #d4ebff;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-item {z-index: 1;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-parallel-item:only-child::after {width: 0;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-359036c9-f1d7-477c-9a58-44f45fab5edc div.sk-text-repr-fallback {display: none;}</style><div id="sk-359036c9-f1d7-477c-9a58-44f45fab5edc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62266089-f1b7-4a13-b718-74d179569521" type="checkbox" ><label for="62266089-f1b7-4a13-b718-74d179569521" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90f98e54-c86e-490d-9113-f69b98e2b684" type="checkbox" ><label for="90f98e54-c86e-490d-9113-f69b98e2b684" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46dc5a76-0fa3-4aaa-8ebe-8ce15da6cc4c" type="checkbox" ><label for="46dc5a76-0fa3-4aaa-8ebe-8ce15da6cc4c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d {color: black;background-color: white;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d pre{padding: 0;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-toggleable {background-color: white;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-estimator:hover {background-color: #d4ebff;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-item {z-index: 1;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-parallel-item:only-child::after {width: 0;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d div.sk-text-repr-fallback {display: none;}</style><div id="sk-2de39a88-cd16-40d9-958c-b8ed6eb60a6d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e23fb5a-054a-4997-8945-d43022031585" type="checkbox" ><label for="1e23fb5a-054a-4997-8945-d43022031585" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86496cfb-dec3-406e-bdde-8c208571eeed" type="checkbox" ><label for="86496cfb-dec3-406e-bdde-8c208571eeed" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aadb5fdc-d730-4d75-9782-b66a019cf4d1" type="checkbox" ><label for="aadb5fdc-d730-4d75-9782-b66a019cf4d1" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eaa8af50-3238-4cfa-bb35-18271a6745c7" type="checkbox" ><label for="eaa8af50-3238-4cfa-bb35-18271a6745c7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-765d34ac-1bc4-43b1-b07e-00fc524105da {color: black;background-color: white;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da pre{padding: 0;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-toggleable {background-color: white;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-estimator:hover {background-color: #d4ebff;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-item {z-index: 1;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-parallel-item:only-child::after {width: 0;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-765d34ac-1bc4-43b1-b07e-00fc524105da div.sk-text-repr-fallback {display: none;}</style><div id="sk-765d34ac-1bc4-43b1-b07e-00fc524105da" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95c6d32a-5e46-4af3-873e-379c60e744e2" type="checkbox" ><label for="95c6d32a-5e46-4af3-873e-379c60e744e2" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d15ab55-6711-4f78-b6fd-9a2b794db4b5" type="checkbox" ><label for="1d15ab55-6711-4f78-b6fd-9a2b794db4b5" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ff93fcb0-4c82-4e29-860b-c505647b40a4" type="checkbox" ><label for="ff93fcb0-4c82-4e29-860b-c505647b40a4" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 {color: black;background-color: white;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 pre{padding: 0;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-toggleable {background-color: white;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-item {z-index: 1;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-parallel-item:only-child::after {width: 0;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f4c69734-ae5d-4e8d-9da5-d4c918751d56" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17ea51b6-0d61-406a-b86c-dd9bb2b2702a" type="checkbox" ><label for="17ea51b6-0d61-406a-b86c-dd9bb2b2702a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fe730f4-7959-43fe-843d-54cebaf43ff2" type="checkbox" ><label for="0fe730f4-7959-43fe-843d-54cebaf43ff2" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9cc7935-682a-4f89-ae2e-157e41ec1263" type="checkbox" ><label for="c9cc7935-682a-4f89-ae2e-157e41ec1263" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0275206c-4181-4dca-98ec-15dad88b3c46" type="checkbox" ><label for="0275206c-4181-4dca-98ec-15dad88b3c46" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6d26bcb-f438-47ce-b910-46558908d8ac" type="checkbox" ><label for="b6d26bcb-f438-47ce-b910-46558908d8ac" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="305db704-19ba-44e5-a9b6-27959f94de6d" type="checkbox" ><label for="305db704-19ba-44e5-a9b6-27959f94de6d" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2474d28f-6935-41a3-a3aa-67123aa9c3f2" type="checkbox" ><label for="2474d28f-6935-41a3-a3aa-67123aa9c3f2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="669e5b79-f7ed-4c4d-8af2-e51756dd739b" type="checkbox" ><label for="669e5b79-f7ed-4c4d-8af2-e51756dd739b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="eecff331-6b1b-44be-acee-9d448003879d" type="checkbox" ><label for="eecff331-6b1b-44be-acee-9d448003879d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b {color: black;background-color: white;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b pre{padding: 0;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-toggleable {background-color: white;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-estimator:hover {background-color: #d4ebff;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-item {z-index: 1;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-parallel-item:only-child::after {width: 0;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2f6cad09-1329-4a27-8d55-64c222f27c3b div.sk-text-repr-fallback {display: none;}</style><div id="sk-2f6cad09-1329-4a27-8d55-64c222f27c3b" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06069ae7-2dd1-448f-af78-046eaff95bea" type="checkbox" ><label for="06069ae7-2dd1-448f-af78-046eaff95bea" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d070ca89-8363-407d-97a3-ab8e59be4b7f" type="checkbox" ><label for="d070ca89-8363-407d-97a3-ab8e59be4b7f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e751fc05-df6c-43bc-8aad-b93e77c6b682" type="checkbox" ><label for="e751fc05-df6c-43bc-8aad-b93e77c6b682" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="149683cb-9697-4049-9c2c-53c8816fc6b5" type="checkbox" ><label for="149683cb-9697-4049-9c2c-53c8816fc6b5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c0e3607-ff1e-4fd0-b228-a92c9ce74b00" type="checkbox" ><label for="1c0e3607-ff1e-4fd0-b228-a92c9ce74b00" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e16e814-4ce6-4da1-8129-5baadc1cd920" type="checkbox" ><label for="7e16e814-4ce6-4da1-8129-5baadc1cd920" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca41f2e6-56d0-4dd5-88fe-ae587f75f56a" type="checkbox" ><label for="ca41f2e6-56d0-4dd5-88fe-ae587f75f56a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96aba562-2bb3-4dc0-8ad1-9096d9288e32" type="checkbox" ><label for="96aba562-2bb3-4dc0-8ad1-9096d9288e32" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ced4fb11-5864-44be-a835-36ae1a2942c8" type="checkbox" ><label for="ced4fb11-5864-44be-a835-36ae1a2942c8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
