
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e {color: black;background-color: white;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e pre{padding: 0;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-toggleable {background-color: white;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-estimator:hover {background-color: #d4ebff;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-item {z-index: 1;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-parallel-item:only-child::after {width: 0;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e div.sk-text-repr-fallback {display: none;}</style><div id="sk-e9dc1b5b-b1ca-418b-a635-b27dd181174e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fbfcd0de-d89b-45b4-96bf-3689f82100e3" type="checkbox" ><label for="fbfcd0de-d89b-45b4-96bf-3689f82100e3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ea606700-cc57-4173-9941-2a76d2df747f" type="checkbox" ><label for="ea606700-cc57-4173-9941-2a76d2df747f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1619c439-720a-45c7-aa70-c5164dfbae52" type="checkbox" ><label for="1619c439-720a-45c7-aa70-c5164dfbae52" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 {color: black;background-color: white;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 pre{padding: 0;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-toggleable {background-color: white;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-estimator:hover {background-color: #d4ebff;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-item {z-index: 1;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-parallel-item:only-child::after {width: 0;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-50395c16-ff8b-4d20-9e2f-23b8a111c113 div.sk-text-repr-fallback {display: none;}</style><div id="sk-50395c16-ff8b-4d20-9e2f-23b8a111c113" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5423c8dc-4138-4c8f-a368-fefaf680d6bc" type="checkbox" ><label for="5423c8dc-4138-4c8f-a368-fefaf680d6bc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86bb8a58-b82b-4748-9c87-493470422a6a" type="checkbox" ><label for="86bb8a58-b82b-4748-9c87-493470422a6a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="100cc0e5-dcac-4501-8f50-bedd0125dd15" type="checkbox" ><label for="100cc0e5-dcac-4501-8f50-bedd0125dd15" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fcfdc169-dd9d-4b56-b75a-f9b903ff65b7" type="checkbox" ><label for="fcfdc169-dd9d-4b56-b75a-f9b903ff65b7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 {color: black;background-color: white;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 pre{padding: 0;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-toggleable {background-color: white;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-item {z-index: 1;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-209c4498-9ca2-4d5b-8854-cf738ac1c5d7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad6c3d8b-2aef-4c6f-9f4c-58ec6f3612ba" type="checkbox" ><label for="ad6c3d8b-2aef-4c6f-9f4c-58ec6f3612ba" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9a2559c-c641-4258-8f71-c2c32c4c94c4" type="checkbox" ><label for="e9a2559c-c641-4258-8f71-c2c32c4c94c4" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe20a3d4-afb5-4717-b790-6ca4247dcc9b" type="checkbox" ><label for="fe20a3d4-afb5-4717-b790-6ca4247dcc9b" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e {color: black;background-color: white;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e pre{padding: 0;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-toggleable {background-color: white;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-estimator:hover {background-color: #d4ebff;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-item {z-index: 1;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-parallel-item:only-child::after {width: 0;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e div.sk-text-repr-fallback {display: none;}</style><div id="sk-4511d5cc-8957-4ed6-95f5-4bf94469c96e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5f7fdb5-d5d1-4862-9555-cec43d4e3b6a" type="checkbox" ><label for="f5f7fdb5-d5d1-4862-9555-cec43d4e3b6a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa523146-4cce-4692-9fae-40900f167c97" type="checkbox" ><label for="fa523146-4cce-4692-9fae-40900f167c97" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3890cd8b-2f6e-4930-afa2-3d5a869819f1" type="checkbox" ><label for="3890cd8b-2f6e-4930-afa2-3d5a869819f1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a054335b-85df-4d88-b35b-457e617c6d83" type="checkbox" ><label for="a054335b-85df-4d88-b35b-457e617c6d83" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d0604143-c09d-4ef8-8077-4e0b15a2ecbd" type="checkbox" ><label for="d0604143-c09d-4ef8-8077-4e0b15a2ecbd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6fc7aa00-6e7b-4184-8c22-a79329242777" type="checkbox" ><label for="6fc7aa00-6e7b-4184-8c22-a79329242777" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f67c03c3-2377-4bb1-ba86-b60153b8f201" type="checkbox" ><label for="f67c03c3-2377-4bb1-ba86-b60153b8f201" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1d52e108-fdee-4822-9412-482e191bbc6b" type="checkbox" ><label for="1d52e108-fdee-4822-9412-482e191bbc6b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="165bf10d-166c-4ed2-bb0c-13967f97a32c" type="checkbox" ><label for="165bf10d-166c-4ed2-bb0c-13967f97a32c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0a5c9f8c-004c-4626-867e-47b25840b278 {color: black;background-color: white;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 pre{padding: 0;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-toggleable {background-color: white;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-item {z-index: 1;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-parallel-item:only-child::after {width: 0;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0a5c9f8c-004c-4626-867e-47b25840b278 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0a5c9f8c-004c-4626-867e-47b25840b278" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03176297-258b-45e9-a2b2-26e09678b885" type="checkbox" ><label for="03176297-258b-45e9-a2b2-26e09678b885" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62312b5a-dac9-4720-a735-0870684e9fb8" type="checkbox" ><label for="62312b5a-dac9-4720-a735-0870684e9fb8" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c75db0c6-6fdd-4687-a99f-d18ff1e5ece7" type="checkbox" ><label for="c75db0c6-6fdd-4687-a99f-d18ff1e5ece7" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1abdfd47-c174-41d0-88ce-de4c8d0e8be6" type="checkbox" ><label for="1abdfd47-c174-41d0-88ce-de4c8d0e8be6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22a6ec74-b89b-4278-88c9-a79bcf9c9208" type="checkbox" ><label for="22a6ec74-b89b-4278-88c9-a79bcf9c9208" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc298f12-e198-47ac-99c7-36fc8358ee86" type="checkbox" ><label for="bc298f12-e198-47ac-99c7-36fc8358ee86" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb736466-4e75-47ee-835f-59e5aedbefbd" type="checkbox" ><label for="bb736466-4e75-47ee-835f-59e5aedbefbd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5b5025e-e892-435a-bbfa-1b1a22086203" type="checkbox" ><label for="b5b5025e-e892-435a-bbfa-1b1a22086203" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0541fe21-277f-44fb-84de-5a2294898c35" type="checkbox" ><label for="0541fe21-277f-44fb-84de-5a2294898c35" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
