
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb {color: black;background-color: white;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb pre{padding: 0;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-toggleable {background-color: white;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-estimator:hover {background-color: #d4ebff;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-item {z-index: 1;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-parallel-item:only-child::after {width: 0;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-container {display: inline-block;position: relative;}#sk-5a40647c-7aff-4162-b771-d3ace43ba0cb div.sk-text-repr-fallback {display: none;}</style><div id="sk-5a40647c-7aff-4162-b771-d3ace43ba0cb" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57a05d17-e586-4025-989c-ef07a533bca1" type="checkbox" ><label class="sk-toggleable__label" for="57a05d17-e586-4025-989c-ef07a533bca1">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e3182e0-6f3b-4549-9fc3-4b47d716447e" type="checkbox" ><label class="sk-toggleable__label" for="0e3182e0-6f3b-4549-9fc3-4b47d716447e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a8794d9-d442-404f-a6d7-f195509d0e88" type="checkbox" ><label class="sk-toggleable__label" for="5a8794d9-d442-404f-a6d7-f195509d0e88">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 {color: black;background-color: white;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 pre{padding: 0;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-toggleable {background-color: white;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-estimator:hover {background-color: #d4ebff;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-item {z-index: 1;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-parallel-item:only-child::after {width: 0;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-container {display: inline-block;position: relative;}#sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79 div.sk-text-repr-fallback {display: none;}</style><div id="sk-86f3a24b-abc0-4b39-a9ef-6e1e78642b79" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4f14ddc-03df-4924-9a19-8ac0ae4f0319" type="checkbox" ><label class="sk-toggleable__label" for="d4f14ddc-03df-4924-9a19-8ac0ae4f0319">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f05cdf8b-70b7-4cf5-b601-eff86f0bcb31" type="checkbox" ><label class="sk-toggleable__label" for="f05cdf8b-70b7-4cf5-b601-eff86f0bcb31">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93c27060-9565-4e1e-83a4-ca898b437521" type="checkbox" ><label class="sk-toggleable__label" for="93c27060-9565-4e1e-83a4-ca898b437521">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3506733f-a8cc-45ee-b38d-6c2d7baec996" type="checkbox" ><label class="sk-toggleable__label" for="3506733f-a8cc-45ee-b38d-6c2d7baec996">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 {color: black;background-color: white;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 pre{padding: 0;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-toggleable {background-color: white;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-item {z-index: 1;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-parallel-item:only-child::after {width: 0;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-container {display: inline-block;position: relative;}#sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3a9f92d3-9810-440c-ba71-ff4db2c2f332" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="13e7e8c4-31d6-4252-80c6-d1206458726e" type="checkbox" ><label class="sk-toggleable__label" for="13e7e8c4-31d6-4252-80c6-d1206458726e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdee261b-7eff-4b2d-927a-83ad4ea6c8ca" type="checkbox" ><label class="sk-toggleable__label" for="cdee261b-7eff-4b2d-927a-83ad4ea6c8ca">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5eb24de0-09f5-4930-acdc-78d677661c1c" type="checkbox" ><label class="sk-toggleable__label" for="5eb24de0-09f5-4930-acdc-78d677661c1c">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 {color: black;background-color: white;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 pre{padding: 0;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-toggleable {background-color: white;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-estimator:hover {background-color: #d4ebff;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-item {z-index: 1;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-parallel-item:only-child::after {width: 0;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-container {display: inline-block;position: relative;}#sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666 div.sk-text-repr-fallback {display: none;}</style><div id="sk-26c55cf7-9a81-41e8-84c3-dec3f14c2666" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9ce6677-52bb-4813-91dd-7c7b101f6c90" type="checkbox" ><label class="sk-toggleable__label" for="a9ce6677-52bb-4813-91dd-7c7b101f6c90">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bfcedb4c-ffa3-48f5-88ab-881d0264977a" type="checkbox" ><label class="sk-toggleable__label" for="bfcedb4c-ffa3-48f5-88ab-881d0264977a">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b8fb106-4fb3-4aab-92be-778ae49fb7d0" type="checkbox" ><label class="sk-toggleable__label" for="9b8fb106-4fb3-4aab-92be-778ae49fb7d0">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f737762d-bf38-4d70-abf3-6da4b15e80c8" type="checkbox" ><label class="sk-toggleable__label" for="f737762d-bf38-4d70-abf3-6da4b15e80c8">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01061f23-5c31-4483-8168-108683fc997d" type="checkbox" ><label class="sk-toggleable__label" for="01061f23-5c31-4483-8168-108683fc997d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdb2cab7-04bc-4597-b650-1d31ec0e7183" type="checkbox" ><label class="sk-toggleable__label" for="cdb2cab7-04bc-4597-b650-1d31ec0e7183">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="124c90f5-7a2f-4f18-9cf0-3c05ce5844cb" type="checkbox" ><label class="sk-toggleable__label" for="124c90f5-7a2f-4f18-9cf0-3c05ce5844cb">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1fda2409-f972-486d-9321-a9b11462634f" type="checkbox" ><label class="sk-toggleable__label" for="1fda2409-f972-486d-9321-a9b11462634f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41788fa2-caa2-4921-8a7a-9b5b252a292f" type="checkbox" ><label class="sk-toggleable__label" for="41788fa2-caa2-4921-8a7a-9b5b252a292f">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 {color: black;background-color: white;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 pre{padding: 0;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-toggleable {background-color: white;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-estimator:hover {background-color: #d4ebff;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-item {z-index: 1;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-parallel-item:only-child::after {width: 0;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-container {display: inline-block;position: relative;}#sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45 div.sk-text-repr-fallback {display: none;}</style><div id="sk-2a3e8393-b67b-4c63-9b78-40cb408bdf45" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f0caab21-0a55-46ff-a2da-2dec75fc81ad" type="checkbox" ><label class="sk-toggleable__label" for="f0caab21-0a55-46ff-a2da-2dec75fc81ad">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcb0d6f1-14b4-4f0e-ab16-f7d9aba18cec" type="checkbox" ><label class="sk-toggleable__label" for="bcb0d6f1-14b4-4f0e-ab16-f7d9aba18cec">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6262c46-09c8-4284-8b1b-350dccd79bc0" type="checkbox" ><label class="sk-toggleable__label" for="a6262c46-09c8-4284-8b1b-350dccd79bc0">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5db8ac6-e9ca-4f8a-9371-0ab17df99443" type="checkbox" ><label class="sk-toggleable__label" for="f5db8ac6-e9ca-4f8a-9371-0ab17df99443">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aedaa44b-4b91-4bc4-8ec9-6a11d5817cbc" type="checkbox" ><label class="sk-toggleable__label" for="aedaa44b-4b91-4bc4-8ec9-6a11d5817cbc">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ccf9551d-8c1e-480f-b7a0-de00d40121ce" type="checkbox" ><label class="sk-toggleable__label" for="ccf9551d-8c1e-480f-b7a0-de00d40121ce">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="48feae13-e3b5-49ee-b8d5-69cddb0d6745" type="checkbox" ><label class="sk-toggleable__label" for="48feae13-e3b5-49ee-b8d5-69cddb0d6745">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5843e90-dbdb-4a9d-8016-336220ea031f" type="checkbox" ><label class="sk-toggleable__label" for="a5843e90-dbdb-4a9d-8016-336220ea031f">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f734ad2c-e1c9-4f4b-9057-7e3638d77ea6" type="checkbox" ><label class="sk-toggleable__label" for="f734ad2c-e1c9-4f4b-9057-7e3638d77ea6">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.093 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
