
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-caa03784-7751-4dfb-a1d1-59f770352603 {color: black;background-color: white;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 pre{padding: 0;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-toggleable {background-color: white;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-estimator:hover {background-color: #d4ebff;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-item {z-index: 1;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-parallel-item:only-child::after {width: 0;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-caa03784-7751-4dfb-a1d1-59f770352603 div.sk-text-repr-fallback {display: none;}</style><div id="sk-caa03784-7751-4dfb-a1d1-59f770352603" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36bc8633-ed1c-47ea-a70b-1a484d9f6526" type="checkbox" ><label for="36bc8633-ed1c-47ea-a70b-1a484d9f6526" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a00188e-69bc-4fe7-82f5-d507f9a1a3d0" type="checkbox" ><label for="0a00188e-69bc-4fe7-82f5-d507f9a1a3d0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5ffff26-9fd6-40f4-8577-59ef6d70cb19" type="checkbox" ><label for="b5ffff26-9fd6-40f4-8577-59ef6d70cb19" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be {color: black;background-color: white;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be pre{padding: 0;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-toggleable {background-color: white;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-estimator:hover {background-color: #d4ebff;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-item {z-index: 1;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-parallel-item:only-child::after {width: 0;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7ae86994-0e9b-4895-aebb-6e056cfa78be div.sk-text-repr-fallback {display: none;}</style><div id="sk-7ae86994-0e9b-4895-aebb-6e056cfa78be" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0120b92-1150-4863-aa29-0f81bef4739a" type="checkbox" ><label for="b0120b92-1150-4863-aa29-0f81bef4739a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b458bde-4c5b-4b94-8e8d-f27d5cfbafd0" type="checkbox" ><label for="7b458bde-4c5b-4b94-8e8d-f27d5cfbafd0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d410e42-4138-4717-b13b-1b62c3ba2dac" type="checkbox" ><label for="4d410e42-4138-4717-b13b-1b62c3ba2dac" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3be4a88-07e9-4907-a3c3-aa3cfdb9f5c0" type="checkbox" ><label for="e3be4a88-07e9-4907-a3c3-aa3cfdb9f5c0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 {color: black;background-color: white;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 pre{padding: 0;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-toggleable {background-color: white;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-estimator:hover {background-color: #d4ebff;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-item {z-index: 1;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-parallel-item:only-child::after {width: 0;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-50af61a1-acce-4d19-a72d-bbc1405b1472 div.sk-text-repr-fallback {display: none;}</style><div id="sk-50af61a1-acce-4d19-a72d-bbc1405b1472" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4b6da6ce-a7a3-4236-bd81-92318ca64233" type="checkbox" ><label for="4b6da6ce-a7a3-4236-bd81-92318ca64233" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2fe93ee-73a4-45fc-96b3-b0f58160e7d3" type="checkbox" ><label for="d2fe93ee-73a4-45fc-96b3-b0f58160e7d3" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a8fd346-3bc9-4b7c-abc3-2bfa9325fa4a" type="checkbox" ><label for="8a8fd346-3bc9-4b7c-abc3-2bfa9325fa4a" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea {color: black;background-color: white;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea pre{padding: 0;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-toggleable {background-color: white;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-estimator:hover {background-color: #d4ebff;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-item {z-index: 1;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-parallel-item:only-child::after {width: 0;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3cda79d3-af7a-4943-bfea-f180da6d97ea div.sk-text-repr-fallback {display: none;}</style><div id="sk-3cda79d3-af7a-4943-bfea-f180da6d97ea" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8776a3d0-6eb8-4a91-ba13-88619416cb4b" type="checkbox" ><label for="8776a3d0-6eb8-4a91-ba13-88619416cb4b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3ed5813-e05e-4394-afd5-b1db754cffbe" type="checkbox" ><label for="f3ed5813-e05e-4394-afd5-b1db754cffbe" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3ac4a04-2190-47d9-ba5c-87fa551a8ace" type="checkbox" ><label for="c3ac4a04-2190-47d9-ba5c-87fa551a8ace" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03939549-a883-4fc5-938e-99b0bb455215" type="checkbox" ><label for="03939549-a883-4fc5-938e-99b0bb455215" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e9ff21f-d012-4d9b-9e7b-70465ce65012" type="checkbox" ><label for="3e9ff21f-d012-4d9b-9e7b-70465ce65012" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62582848-5229-4f18-910d-a3eb7c92ae2c" type="checkbox" ><label for="62582848-5229-4f18-910d-a3eb7c92ae2c" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4d1d146-fc48-4626-abcd-d60f5b8ba433" type="checkbox" ><label for="d4d1d146-fc48-4626-abcd-d60f5b8ba433" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ac3d21a-fc45-4f56-ab8d-bbdbd82b312b" type="checkbox" ><label for="4ac3d21a-fc45-4f56-ab8d-bbdbd82b312b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44c5feaf-e854-472f-b53d-74741d0e03f8" type="checkbox" ><label for="44c5feaf-e854-472f-b53d-74741d0e03f8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd {color: black;background-color: white;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd pre{padding: 0;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-toggleable {background-color: white;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-estimator:hover {background-color: #d4ebff;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-item {z-index: 1;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-parallel-item:only-child::after {width: 0;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd div.sk-text-repr-fallback {display: none;}</style><div id="sk-4eaa9a4c-1d11-4460-9c58-b853050a7fdd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95da11c9-4849-4732-8638-361dd11dd457" type="checkbox" ><label for="95da11c9-4849-4732-8638-361dd11dd457" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73d045b5-de05-4aa3-a73e-df2fa2b553e9" type="checkbox" ><label for="73d045b5-de05-4aa3-a73e-df2fa2b553e9" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="524ac95b-4937-4a56-9dc4-7754ce2fb1b5" type="checkbox" ><label for="524ac95b-4937-4a56-9dc4-7754ce2fb1b5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa19fcd6-6710-4c22-8637-9596cf78ffa9" type="checkbox" ><label for="fa19fcd6-6710-4c22-8637-9596cf78ffa9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ceeeb027-d5e8-43b9-b9e4-c435a16ff333" type="checkbox" ><label for="ceeeb027-d5e8-43b9-b9e4-c435a16ff333" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4879f3e-3c9c-4755-bee2-b1ce38d03488" type="checkbox" ><label for="d4879f3e-3c9c-4755-bee2-b1ce38d03488" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35806f3a-a7be-4590-884e-ddee6ce17ba6" type="checkbox" ><label for="35806f3a-a7be-4590-884e-ddee6ce17ba6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b817b7fa-e62f-4c27-99a0-4db3ef1c749e" type="checkbox" ><label for="b817b7fa-e62f-4c27-99a0-4db3ef1c749e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cde12106-a92d-49f7-84a6-c75096124ae8" type="checkbox" ><label for="cde12106-a92d-49f7-84a6-c75096124ae8" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
