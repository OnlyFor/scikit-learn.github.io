
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fbe7acb0-169c-4a3a-9176-48634019f90a {color: black;background-color: white;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a pre{padding: 0;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-toggleable {background-color: white;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-estimator:hover {background-color: #d4ebff;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-item {z-index: 1;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-parallel-item:only-child::after {width: 0;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fbe7acb0-169c-4a3a-9176-48634019f90a div.sk-text-repr-fallback {display: none;}</style><div id="sk-fbe7acb0-169c-4a3a-9176-48634019f90a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b86517d0-daa0-4f51-9f15-54e4834a059b" type="checkbox" ><label for="b86517d0-daa0-4f51-9f15-54e4834a059b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77c3afec-f282-4dc3-9145-8effa2f5ae3c" type="checkbox" ><label for="77c3afec-f282-4dc3-9145-8effa2f5ae3c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce46463d-b254-4ee3-93b2-153ab9054bbc" type="checkbox" ><label for="ce46463d-b254-4ee3-93b2-153ab9054bbc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 {color: black;background-color: white;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 pre{padding: 0;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-toggleable {background-color: white;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-item {z-index: 1;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-parallel-item:only-child::after {width: 0;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a4a71fcf-72b5-4096-8ac5-6796a10caab2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="144a198f-a4c0-40df-a92c-bb7647b13d10" type="checkbox" ><label for="144a198f-a4c0-40df-a92c-bb7647b13d10" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c2a4983-b6be-4ef9-87f8-1c44046addc7" type="checkbox" ><label for="4c2a4983-b6be-4ef9-87f8-1c44046addc7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ce446a3-236b-4d43-a619-989ba2745f1c" type="checkbox" ><label for="2ce446a3-236b-4d43-a619-989ba2745f1c" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="479d34d8-c8e4-4ea0-88d1-3af397a8dfa0" type="checkbox" ><label for="479d34d8-c8e4-4ea0-88d1-3af397a8dfa0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 {color: black;background-color: white;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 pre{padding: 0;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-toggleable {background-color: white;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-item {z-index: 1;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-parallel-item:only-child::after {width: 0;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f65fcacb-8690-46f6-92f7-54b1ef6c5203" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7651f29c-2c14-4790-a09a-d48fe9a97a0c" type="checkbox" ><label for="7651f29c-2c14-4790-a09a-d48fe9a97a0c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d8415034-c734-477c-a857-883fbf35cf57" type="checkbox" ><label for="d8415034-c734-477c-a857-883fbf35cf57" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="da5a7c29-3f5f-4e2b-89f3-a9884ff20936" type="checkbox" ><label for="da5a7c29-3f5f-4e2b-89f3-a9884ff20936" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7b44ec09-c385-45c5-88e1-95cdc719936e {color: black;background-color: white;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e pre{padding: 0;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-toggleable {background-color: white;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-estimator:hover {background-color: #d4ebff;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-item {z-index: 1;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-parallel-item:only-child::after {width: 0;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7b44ec09-c385-45c5-88e1-95cdc719936e div.sk-text-repr-fallback {display: none;}</style><div id="sk-7b44ec09-c385-45c5-88e1-95cdc719936e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e67374cd-bae6-490a-bc43-919f7c3be512" type="checkbox" ><label for="e67374cd-bae6-490a-bc43-919f7c3be512" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1f4fd64-374b-4a32-af54-5d4b0fdeda39" type="checkbox" ><label for="c1f4fd64-374b-4a32-af54-5d4b0fdeda39" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4beb086d-4133-47b5-909b-e25c2eb8517a" type="checkbox" ><label for="4beb086d-4133-47b5-909b-e25c2eb8517a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0eb83691-a8da-4a15-8f29-b714beb50c79" type="checkbox" ><label for="0eb83691-a8da-4a15-8f29-b714beb50c79" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fabd23c1-c80d-4464-8f95-1f6665540d06" type="checkbox" ><label for="fabd23c1-c80d-4464-8f95-1f6665540d06" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a2ca451-351d-46ad-aa06-aefd49548cd4" type="checkbox" ><label for="0a2ca451-351d-46ad-aa06-aefd49548cd4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1991e61-96b3-45d5-9aab-3e5ef2b41862" type="checkbox" ><label for="a1991e61-96b3-45d5-9aab-3e5ef2b41862" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="47369c6f-d822-4aaf-88ba-2ca6d048d729" type="checkbox" ><label for="47369c6f-d822-4aaf-88ba-2ca6d048d729" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c69ba80f-aece-4df7-8c01-4a3e2f4762a0" type="checkbox" ><label for="c69ba80f-aece-4df7-8c01-4a3e2f4762a0" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e {color: black;background-color: white;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e pre{padding: 0;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-toggleable {background-color: white;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-estimator:hover {background-color: #d4ebff;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-item {z-index: 1;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-parallel-item:only-child::after {width: 0;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e div.sk-text-repr-fallback {display: none;}</style><div id="sk-fb271c84-f3f4-4485-a66b-ef10b8bb066e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c197b557-fb23-4b9c-8258-b09035da0aa6" type="checkbox" ><label for="c197b557-fb23-4b9c-8258-b09035da0aa6" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90f65ac1-673f-43c9-bea6-9eac01878178" type="checkbox" ><label for="90f65ac1-673f-43c9-bea6-9eac01878178" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e3c3c6a-80a0-413e-82a5-d1a995da496f" type="checkbox" ><label for="1e3c3c6a-80a0-413e-82a5-d1a995da496f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e0ea322e-2441-4ddb-abdc-67c4ad9f8f39" type="checkbox" ><label for="e0ea322e-2441-4ddb-abdc-67c4ad9f8f39" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9613fa9-5f12-4038-9399-807a8cdd8012" type="checkbox" ><label for="b9613fa9-5f12-4038-9399-807a8cdd8012" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c43df6af-c4cf-447f-9793-15ec3eeab92a" type="checkbox" ><label for="c43df6af-c4cf-447f-9793-15ec3eeab92a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4c359db-6f5d-42ba-8238-819614f55134" type="checkbox" ><label for="c4c359db-6f5d-42ba-8238-819614f55134" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a26169d7-7530-42ab-8458-aa6ef9b1f930" type="checkbox" ><label for="a26169d7-7530-42ab-8458-aa6ef9b1f930" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8ef35cd-89fa-46b0-aaec-fc30e2520f8c" type="checkbox" ><label for="a8ef35cd-89fa-46b0-aaec-fc30e2520f8c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3060ed4-a2f5-4a1b-a9a8-1c1463381b12" type="checkbox" ><label for="d3060ed4-a2f5-4a1b-a9a8-1c1463381b12" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
