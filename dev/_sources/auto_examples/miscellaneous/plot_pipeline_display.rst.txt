
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 {color: black;background-color: white;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 pre{padding: 0;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-toggleable {background-color: white;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-item {z-index: 1;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-parallel-item:only-child::after {width: 0;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ac0ae2d0-af20-4906-b30e-2e12e27b0933" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e02c038-d526-41ac-81ec-3aba61166f95" type="checkbox" ><label for="0e02c038-d526-41ac-81ec-3aba61166f95" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="674afbad-7990-4eff-8240-06b3b06f4aa0" type="checkbox" ><label for="674afbad-7990-4eff-8240-06b3b06f4aa0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba793283-ce38-4e56-9cc2-a3dd0e809551" type="checkbox" ><label for="ba793283-ce38-4e56-9cc2-a3dd0e809551" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ff37412a-3195-431a-9c71-49d718e4cb47 {color: black;background-color: white;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 pre{padding: 0;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-toggleable {background-color: white;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-item {z-index: 1;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-parallel-item:only-child::after {width: 0;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ff37412a-3195-431a-9c71-49d718e4cb47 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ff37412a-3195-431a-9c71-49d718e4cb47" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04d89d2e-cca7-4716-ab1d-baae05ea8493" type="checkbox" ><label for="04d89d2e-cca7-4716-ab1d-baae05ea8493" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="410197b3-8767-4e8f-8434-20eef8293b08" type="checkbox" ><label for="410197b3-8767-4e8f-8434-20eef8293b08" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4d17a66-e770-42b2-bd23-055d23c9f829" type="checkbox" ><label for="c4d17a66-e770-42b2-bd23-055d23c9f829" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="799e7fcc-7bff-4568-b0bc-7075c6b87916" type="checkbox" ><label for="799e7fcc-7bff-4568-b0bc-7075c6b87916" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-da55aa3a-1637-499f-807b-398b02caa443 {color: black;background-color: white;}#sk-da55aa3a-1637-499f-807b-398b02caa443 pre{padding: 0;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-toggleable {background-color: white;}#sk-da55aa3a-1637-499f-807b-398b02caa443 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-da55aa3a-1637-499f-807b-398b02caa443 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-da55aa3a-1637-499f-807b-398b02caa443 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-da55aa3a-1637-499f-807b-398b02caa443 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-da55aa3a-1637-499f-807b-398b02caa443 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-da55aa3a-1637-499f-807b-398b02caa443 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-estimator:hover {background-color: #d4ebff;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-item {z-index: 1;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-parallel-item:only-child::after {width: 0;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-da55aa3a-1637-499f-807b-398b02caa443 div.sk-text-repr-fallback {display: none;}</style><div id="sk-da55aa3a-1637-499f-807b-398b02caa443" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c34f1282-8b55-4a02-9c8c-72e8e6140230" type="checkbox" ><label for="c34f1282-8b55-4a02-9c8c-72e8e6140230" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a443701-684a-4c05-a831-1eb46cd6d46d" type="checkbox" ><label for="0a443701-684a-4c05-a831-1eb46cd6d46d" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8baaa55-458f-4b18-b28c-dc372d6059ba" type="checkbox" ><label for="e8baaa55-458f-4b18-b28c-dc372d6059ba" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 {color: black;background-color: white;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 pre{padding: 0;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-toggleable {background-color: white;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-item {z-index: 1;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-parallel-item:only-child::after {width: 0;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b3333e74-a2cb-4f2c-8c87-b8c3bb307fd8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d7701ee9-e56f-47a3-91ab-cc442bc510b9" type="checkbox" ><label for="d7701ee9-e56f-47a3-91ab-cc442bc510b9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c4c8d52-8b3e-40d8-ba91-47eb24440dc3" type="checkbox" ><label for="1c4c8d52-8b3e-40d8-ba91-47eb24440dc3" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2267052d-f5ce-4b22-9e47-47c002dc170e" type="checkbox" ><label for="2267052d-f5ce-4b22-9e47-47c002dc170e" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd2593b5-0514-4f8b-b3a2-30c554f35cb1" type="checkbox" ><label for="cd2593b5-0514-4f8b-b3a2-30c554f35cb1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ebe7dd3-65ce-4bab-8692-e923c86c1450" type="checkbox" ><label for="5ebe7dd3-65ce-4bab-8692-e923c86c1450" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cecf88ad-ed7a-44c7-8312-99b051e55d8a" type="checkbox" ><label for="cecf88ad-ed7a-44c7-8312-99b051e55d8a" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="530f57cd-5de8-4ba9-81af-7803fc7feed7" type="checkbox" ><label for="530f57cd-5de8-4ba9-81af-7803fc7feed7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d97b594d-62a7-4c1d-9a64-9b4ee2153efa" type="checkbox" ><label for="d97b594d-62a7-4c1d-9a64-9b4ee2153efa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c293b4e-b9b9-4d72-b118-b81b59444d66" type="checkbox" ><label for="8c293b4e-b9b9-4d72-b118-b81b59444d66" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf {color: black;background-color: white;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf pre{padding: 0;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-toggleable {background-color: white;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-estimator:hover {background-color: #d4ebff;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-item {z-index: 1;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-parallel-item:only-child::after {width: 0;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf div.sk-text-repr-fallback {display: none;}</style><div id="sk-5b30ec3b-76bd-4c90-a0d1-0868506a4bbf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7042006f-02c3-45fb-be45-cbf3c962395e" type="checkbox" ><label for="7042006f-02c3-45fb-be45-cbf3c962395e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44381081-a0ee-41b2-81c9-82a0aa93be22" type="checkbox" ><label for="44381081-a0ee-41b2-81c9-82a0aa93be22" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fee33a0-d0af-4133-b997-6ec44f92a53b" type="checkbox" ><label for="5fee33a0-d0af-4133-b997-6ec44f92a53b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72752933-3bd8-42ff-ba32-a249f8d68350" type="checkbox" ><label for="72752933-3bd8-42ff-ba32-a249f8d68350" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4653d809-ea2f-4771-966f-dae0bc8c9a1b" type="checkbox" ><label for="4653d809-ea2f-4771-966f-dae0bc8c9a1b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4b0aa12-d41f-49bd-b83c-060d6cdc53bd" type="checkbox" ><label for="a4b0aa12-d41f-49bd-b83c-060d6cdc53bd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62aa2684-0fe6-4b60-ab5e-9fb4b8672005" type="checkbox" ><label for="62aa2684-0fe6-4b60-ab5e-9fb4b8672005" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="63ee2374-e7b9-4d13-b021-84b2eac5b1ef" type="checkbox" ><label for="63ee2374-e7b9-4d13-b021-84b2eac5b1ef" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7310951e-2c2d-4227-95a6-a49adee00c8d" type="checkbox" ><label for="7310951e-2c2d-4227-95a6-a49adee00c8d" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
