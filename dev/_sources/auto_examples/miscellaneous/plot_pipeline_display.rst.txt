
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 {color: black;background-color: white;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 pre{padding: 0;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-toggleable {background-color: white;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-item {z-index: 1;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-parallel-item:only-child::after {width: 0;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c18edb6e-807d-4c67-bd0e-694dcdc15137 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c18edb6e-807d-4c67-bd0e-694dcdc15137" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7885d6e7-9405-43d3-9199-7a72afaed7b5" type="checkbox" ><label for="7885d6e7-9405-43d3-9199-7a72afaed7b5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6ec5870-54ec-41a1-b9f5-afb091e6143c" type="checkbox" ><label for="e6ec5870-54ec-41a1-b9f5-afb091e6143c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="820712ac-18b2-4095-9b2e-5a24301f904d" type="checkbox" ><label for="820712ac-18b2-4095-9b2e-5a24301f904d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 {color: black;background-color: white;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 pre{padding: 0;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-toggleable {background-color: white;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-item {z-index: 1;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-parallel-item:only-child::after {width: 0;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c9e359a6-81c5-4b1d-a8db-527e6d532999 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c9e359a6-81c5-4b1d-a8db-527e6d532999" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8131a9b-3b15-4d2d-9582-3eed7f9f53da" type="checkbox" ><label for="f8131a9b-3b15-4d2d-9582-3eed7f9f53da" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e964f559-e7a8-4963-9256-9ed01c8685aa" type="checkbox" ><label for="e964f559-e7a8-4963-9256-9ed01c8685aa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee4f1d42-ce96-4917-8d53-74548565264b" type="checkbox" ><label for="ee4f1d42-ce96-4917-8d53-74548565264b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6898381-83a2-490b-87a8-d045d212bcf4" type="checkbox" ><label for="d6898381-83a2-490b-87a8-d045d212bcf4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f {color: black;background-color: white;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f pre{padding: 0;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-toggleable {background-color: white;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-estimator:hover {background-color: #d4ebff;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-item {z-index: 1;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-parallel-item:only-child::after {width: 0;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-755e63c9-4e7d-4445-9fae-8d6d94df347f div.sk-text-repr-fallback {display: none;}</style><div id="sk-755e63c9-4e7d-4445-9fae-8d6d94df347f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2b32b59-5630-43b8-903c-1d638b9e72a3" type="checkbox" ><label for="d2b32b59-5630-43b8-903c-1d638b9e72a3" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0abd310d-7e6c-4075-9926-6f61e48ffe5e" type="checkbox" ><label for="0abd310d-7e6c-4075-9926-6f61e48ffe5e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc0e385c-ca7d-438f-b2b6-f6d6bb2aa1ab" type="checkbox" ><label for="bc0e385c-ca7d-438f-b2b6-f6d6bb2aa1ab" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d {color: black;background-color: white;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d pre{padding: 0;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-toggleable {background-color: white;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-estimator:hover {background-color: #d4ebff;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-item {z-index: 1;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-parallel-item:only-child::after {width: 0;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d div.sk-text-repr-fallback {display: none;}</style><div id="sk-38ea1ddd-bae1-4e7d-948a-b5c3206fb93d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a16b0463-f212-4d92-8b0b-799a4cde53fb" type="checkbox" ><label for="a16b0463-f212-4d92-8b0b-799a4cde53fb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7264cd1b-9dc0-4186-858e-d0f3f97af91e" type="checkbox" ><label for="7264cd1b-9dc0-4186-858e-d0f3f97af91e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9a128c8f-0c61-4e5c-9f39-8157e8b7a1ac" type="checkbox" ><label for="9a128c8f-0c61-4e5c-9f39-8157e8b7a1ac" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82240724-93f9-471c-b03f-c8a5ece406e4" type="checkbox" ><label for="82240724-93f9-471c-b03f-c8a5ece406e4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe5b5848-7966-4061-bc2e-9577ecdb87c5" type="checkbox" ><label for="fe5b5848-7966-4061-bc2e-9577ecdb87c5" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3ca5cadd-290b-489a-b24f-b63787c3feb4" type="checkbox" ><label for="3ca5cadd-290b-489a-b24f-b63787c3feb4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="12f90b3c-d8f0-4149-887c-3c7f6dc62b4c" type="checkbox" ><label for="12f90b3c-d8f0-4149-887c-3c7f6dc62b4c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd986d13-592e-4ad6-a650-8f4eac2b2f4f" type="checkbox" ><label for="dd986d13-592e-4ad6-a650-8f4eac2b2f4f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="765b5fdf-8d7b-43dc-8081-7aeaa5918611" type="checkbox" ><label for="765b5fdf-8d7b-43dc-8081-7aeaa5918611" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 {color: black;background-color: white;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 pre{padding: 0;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-toggleable {background-color: white;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-item {z-index: 1;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-parallel-item:only-child::after {width: 0;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5ed50dc6-7d11-4c46-bfd1-29666b8c4756" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2decaf71-1f88-4671-9d5f-cf86948b6abb" type="checkbox" ><label for="2decaf71-1f88-4671-9d5f-cf86948b6abb" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a59f0617-4a72-4d53-a619-192df597d7fe" type="checkbox" ><label for="a59f0617-4a72-4d53-a619-192df597d7fe" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4d961954-ce70-4ee8-8a01-79132b988497" type="checkbox" ><label for="4d961954-ce70-4ee8-8a01-79132b988497" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6c73d4cf-dd3a-4294-bb11-b3c12546b766" type="checkbox" ><label for="6c73d4cf-dd3a-4294-bb11-b3c12546b766" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8724cf95-279c-46bf-9c35-6dd79af94db2" type="checkbox" ><label for="8724cf95-279c-46bf-9c35-6dd79af94db2" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5164a907-08a1-493f-abee-3c76d082e864" type="checkbox" ><label for="5164a907-08a1-493f-abee-3c76d082e864" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66e80d2f-b8b8-47c9-b95c-0b59ce4f64e7" type="checkbox" ><label for="66e80d2f-b8b8-47c9-b95c-0b59ce4f64e7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9d52c814-e829-429b-8c55-5c3edab37235" type="checkbox" ><label for="9d52c814-e829-429b-8c55-5c3edab37235" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="625167e8-edf9-4d30-8a50-d70e0b72412f" type="checkbox" ><label for="625167e8-edf9-4d30-8a50-d70e0b72412f" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
