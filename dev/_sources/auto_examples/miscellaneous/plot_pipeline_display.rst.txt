
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 {color: black;background-color: white;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 pre{padding: 0;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-toggleable {background-color: white;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-item {z-index: 1;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-parallel-item:only-child::after {width: 0;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9f15990f-2b4d-49bc-a95e-7cd698836d94 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9f15990f-2b4d-49bc-a95e-7cd698836d94" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="88651890-78fb-4c41-a166-efbb3bb9a661" type="checkbox" ><label for="88651890-78fb-4c41-a166-efbb3bb9a661" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="388ec647-f49a-4bd4-b76f-36e56fc0bcc9" type="checkbox" ><label for="388ec647-f49a-4bd4-b76f-36e56fc0bcc9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf5934cd-7bfc-47a0-86fb-bf5436a709a3" type="checkbox" ><label for="bf5934cd-7bfc-47a0-86fb-bf5436a709a3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 {color: black;background-color: white;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 pre{padding: 0;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-toggleable {background-color: white;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-estimator:hover {background-color: #d4ebff;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-item {z-index: 1;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-parallel-item:only-child::after {width: 0;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-888dac90-9e11-43ab-b755-7f5cd4ecb817 div.sk-text-repr-fallback {display: none;}</style><div id="sk-888dac90-9e11-43ab-b755-7f5cd4ecb817" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9854e95-f22d-49d6-85f5-f667aa93d2e7" type="checkbox" ><label for="a9854e95-f22d-49d6-85f5-f667aa93d2e7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21a9c1ec-70db-408d-ba73-acbc425760cf" type="checkbox" ><label for="21a9c1ec-70db-408d-ba73-acbc425760cf" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bb71dad-2bf1-488d-9e6e-478382714bf6" type="checkbox" ><label for="9bb71dad-2bf1-488d-9e6e-478382714bf6" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="208aeff0-fccb-47cb-9895-1f919d9436af" type="checkbox" ><label for="208aeff0-fccb-47cb-9895-1f919d9436af" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d {color: black;background-color: white;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d pre{padding: 0;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-toggleable {background-color: white;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-estimator:hover {background-color: #d4ebff;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-item {z-index: 1;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-parallel-item:only-child::after {width: 0;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d div.sk-text-repr-fallback {display: none;}</style><div id="sk-96c77c77-8110-43f6-b4fa-4d3b4775a30d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4280482-3cf7-4e34-9a71-19507905e54c" type="checkbox" ><label for="a4280482-3cf7-4e34-9a71-19507905e54c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6aa63cf4-1fab-4019-836d-d4bbc5887dc6" type="checkbox" ><label for="6aa63cf4-1fab-4019-836d-d4bbc5887dc6" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcdff157-b83a-4b2a-8241-eec4f442c03f" type="checkbox" ><label for="bcdff157-b83a-4b2a-8241-eec4f442c03f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f {color: black;background-color: white;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f pre{padding: 0;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-toggleable {background-color: white;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-estimator:hover {background-color: #d4ebff;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-item {z-index: 1;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-parallel-item:only-child::after {width: 0;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f div.sk-text-repr-fallback {display: none;}</style><div id="sk-f84687df-c3bb-4f33-9e04-fb3b79b0b47f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4cc3bc17-b5f4-46c8-8f23-0d0274d1d1ff" type="checkbox" ><label for="4cc3bc17-b5f4-46c8-8f23-0d0274d1d1ff" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3efadb68-817f-46a2-aa2f-e0187817bf51" type="checkbox" ><label for="3efadb68-817f-46a2-aa2f-e0187817bf51" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e8634042-07b5-4d76-b595-2dd8fc8bcfcd" type="checkbox" ><label for="e8634042-07b5-4d76-b595-2dd8fc8bcfcd" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a561feaf-11b4-441a-9bd3-032a808044e7" type="checkbox" ><label for="a561feaf-11b4-441a-9bd3-032a808044e7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92aa45dc-8061-452e-9558-df513b9d6bf0" type="checkbox" ><label for="92aa45dc-8061-452e-9558-df513b9d6bf0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0179bc35-288a-4c4d-a42b-a0eeaec394e7" type="checkbox" ><label for="0179bc35-288a-4c4d-a42b-a0eeaec394e7" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b32b70a5-d3cd-4cb3-8a6d-04e4bec8113b" type="checkbox" ><label for="b32b70a5-d3cd-4cb3-8a6d-04e4bec8113b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89fcad0c-a482-4779-a373-d4f06d951e8f" type="checkbox" ><label for="89fcad0c-a482-4779-a373-d4f06d951e8f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9d663d2-2281-473a-9522-4afc8d6be804" type="checkbox" ><label for="e9d663d2-2281-473a-9522-4afc8d6be804" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce {color: black;background-color: white;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce pre{padding: 0;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-toggleable {background-color: white;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-estimator:hover {background-color: #d4ebff;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-item {z-index: 1;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-parallel-item:only-child::after {width: 0;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-757cc65d-4409-4161-af3f-0f8eff9b8cce div.sk-text-repr-fallback {display: none;}</style><div id="sk-757cc65d-4409-4161-af3f-0f8eff9b8cce" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3b2d32f-a63b-4efd-8e84-298f233baafa" type="checkbox" ><label for="f3b2d32f-a63b-4efd-8e84-298f233baafa" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03aecb7a-a0bf-4733-bd7e-3835ffe2f11e" type="checkbox" ><label for="03aecb7a-a0bf-4733-bd7e-3835ffe2f11e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="235ac67f-aa1a-4c2c-ba01-426fcfa8cf83" type="checkbox" ><label for="235ac67f-aa1a-4c2c-ba01-426fcfa8cf83" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70c50ffc-3f28-4146-8165-082dbf4817b6" type="checkbox" ><label for="70c50ffc-3f28-4146-8165-082dbf4817b6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="950fe0c7-c9fa-4761-bad8-eb99461912e0" type="checkbox" ><label for="950fe0c7-c9fa-4761-bad8-eb99461912e0" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="15b8a4ca-f2be-44d7-b164-c37a37893233" type="checkbox" ><label for="15b8a4ca-f2be-44d7-b164-c37a37893233" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6278b95-3509-4859-ae3c-0b7ca9511cdd" type="checkbox" ><label for="c6278b95-3509-4859-ae3c-0b7ca9511cdd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4ae3590-9317-4677-9f7b-64db4abd050c" type="checkbox" ><label for="d4ae3590-9317-4677-9f7b-64db4abd050c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f78e57f4-d42e-4a16-87a9-fab639e54113" type="checkbox" ><label for="f78e57f4-d42e-4a16-87a9-fab639e54113" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
