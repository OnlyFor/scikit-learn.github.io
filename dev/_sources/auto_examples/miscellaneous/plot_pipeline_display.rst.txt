
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-68ba077b-febe-4005-a339-2c35c0e784ff {color: black;background-color: white;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff pre{padding: 0;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-toggleable {background-color: white;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-estimator:hover {background-color: #d4ebff;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-item {z-index: 1;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-parallel-item:only-child::after {width: 0;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-68ba077b-febe-4005-a339-2c35c0e784ff div.sk-text-repr-fallback {display: none;}</style><div id="sk-68ba077b-febe-4005-a339-2c35c0e784ff" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b907e3cb-cb46-4fd9-bf7f-d3384375fecc" type="checkbox" ><label for="b907e3cb-cb46-4fd9-bf7f-d3384375fecc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c27204bd-5dc3-48ac-836e-5085af531cb4" type="checkbox" ><label for="c27204bd-5dc3-48ac-836e-5085af531cb4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe203918-a0de-4bd2-91c0-ef5b0add4882" type="checkbox" ><label for="fe203918-a0de-4bd2-91c0-ef5b0add4882" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 {color: black;background-color: white;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 pre{padding: 0;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-toggleable {background-color: white;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-estimator:hover {background-color: #d4ebff;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-item {z-index: 1;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-parallel-item:only-child::after {width: 0;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960 div.sk-text-repr-fallback {display: none;}</style><div id="sk-dc8aa6b0-0ca2-45be-828c-82b4b57c1960" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="85dae8e6-107b-444d-b7a7-0be88ef6d80d" type="checkbox" ><label for="85dae8e6-107b-444d-b7a7-0be88ef6d80d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="360a1109-5623-41b4-8b91-3ba524544810" type="checkbox" ><label for="360a1109-5623-41b4-8b91-3ba524544810" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5987acc5-0520-471f-8555-b5d15580670f" type="checkbox" ><label for="5987acc5-0520-471f-8555-b5d15580670f" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a4d4753-1c2a-48ec-9f07-04bcdd10976d" type="checkbox" ><label for="4a4d4753-1c2a-48ec-9f07-04bcdd10976d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bb727cc9-5415-4133-8a87-31908c56ed44 {color: black;background-color: white;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 pre{padding: 0;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-toggleable {background-color: white;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-estimator:hover {background-color: #d4ebff;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-item {z-index: 1;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-parallel-item:only-child::after {width: 0;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bb727cc9-5415-4133-8a87-31908c56ed44 div.sk-text-repr-fallback {display: none;}</style><div id="sk-bb727cc9-5415-4133-8a87-31908c56ed44" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe513d45-b16d-46b0-8e20-5bec09c22eac" type="checkbox" ><label for="fe513d45-b16d-46b0-8e20-5bec09c22eac" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce6d5213-79e3-45aa-b225-3d3331a3b9cd" type="checkbox" ><label for="ce6d5213-79e3-45aa-b225-3d3331a3b9cd" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8982ed3-dd23-47e9-8fb2-5a6ea71dd11f" type="checkbox" ><label for="c8982ed3-dd23-47e9-8fb2-5a6ea71dd11f" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e {color: black;background-color: white;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e pre{padding: 0;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-toggleable {background-color: white;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-estimator:hover {background-color: #d4ebff;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-item {z-index: 1;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-parallel-item:only-child::after {width: 0;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e div.sk-text-repr-fallback {display: none;}</style><div id="sk-2d29aeb1-2ec1-4eae-8ed2-c9ad46adb92e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a325153-5245-4eb7-9181-5a3495ce0081" type="checkbox" ><label for="4a325153-5245-4eb7-9181-5a3495ce0081" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c1ea4cf-adde-4a90-b072-6714b6d43638" type="checkbox" ><label for="5c1ea4cf-adde-4a90-b072-6714b6d43638" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d4100e41-936a-44fe-a0df-ee59d639d5ad" type="checkbox" ><label for="d4100e41-936a-44fe-a0df-ee59d639d5ad" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b564246e-fd1e-4267-acc3-376a40ceff14" type="checkbox" ><label for="b564246e-fd1e-4267-acc3-376a40ceff14" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4c3ac35-8105-498e-b26a-2fbf17f41a7b" type="checkbox" ><label for="c4c3ac35-8105-498e-b26a-2fbf17f41a7b" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05d94a8b-ad5f-44e3-98b9-46bac8fcbec5" type="checkbox" ><label for="05d94a8b-ad5f-44e3-98b9-46bac8fcbec5" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1960c30-953f-4924-bb81-a277fd557ded" type="checkbox" ><label for="a1960c30-953f-4924-bb81-a277fd557ded" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad073b1e-1d78-4bce-9dec-7f2267142354" type="checkbox" ><label for="ad073b1e-1d78-4bce-9dec-7f2267142354" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="679220d0-973a-4eb9-82e5-1fc762248ba9" type="checkbox" ><label for="679220d0-973a-4eb9-82e5-1fc762248ba9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 {color: black;background-color: white;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 pre{padding: 0;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-toggleable {background-color: white;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-item {z-index: 1;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-parallel-item:only-child::after {width: 0;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-968c722b-cb8a-408c-9d7c-f4220414bbb9 div.sk-text-repr-fallback {display: none;}</style><div id="sk-968c722b-cb8a-408c-9d7c-f4220414bbb9" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="79de7b5d-341b-4fa5-9db8-faa3aa9af4ba" type="checkbox" ><label for="79de7b5d-341b-4fa5-9db8-faa3aa9af4ba" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="95750d9d-12ac-4c26-824e-67f673d19a6a" type="checkbox" ><label for="95750d9d-12ac-4c26-824e-67f673d19a6a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c12e2f4-122a-484d-be69-9d8a83e32899" type="checkbox" ><label for="4c12e2f4-122a-484d-be69-9d8a83e32899" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17a5f0dc-2f68-4fff-b751-125641d1b608" type="checkbox" ><label for="17a5f0dc-2f68-4fff-b751-125641d1b608" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3393817e-c855-4c2d-9812-0520902bd6cb" type="checkbox" ><label for="3393817e-c855-4c2d-9812-0520902bd6cb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8fa494e-2a75-4d05-89a8-1a6b237202d9" type="checkbox" ><label for="c8fa494e-2a75-4d05-89a8-1a6b237202d9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d402868-f84e-448a-b069-77280a699dca" type="checkbox" ><label for="8d402868-f84e-448a-b069-77280a699dca" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b0dc2da-aa62-4e8e-8063-953d2ab30f36" type="checkbox" ><label for="5b0dc2da-aa62-4e8e-8063-953d2ab30f36" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d115444f-9771-4228-8abc-f0e3e60ec8c2" type="checkbox" ><label for="d115444f-9771-4228-8abc-f0e3e60ec8c2" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.078 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
