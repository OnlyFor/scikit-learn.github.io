
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-425718e5-de7b-4a39-b973-6525f8678c67 {color: black;background-color: white;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 pre{padding: 0;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-toggleable {background-color: white;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-estimator:hover {background-color: #d4ebff;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-item {z-index: 1;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-parallel-item:only-child::after {width: 0;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-425718e5-de7b-4a39-b973-6525f8678c67 div.sk-text-repr-fallback {display: none;}</style><div id="sk-425718e5-de7b-4a39-b973-6525f8678c67" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf25f953-5f8e-4b38-b355-fff3d1310a8b" type="checkbox" ><label for="cf25f953-5f8e-4b38-b355-fff3d1310a8b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="723ce0cf-f1b7-4f5a-b42c-70e9179f134d" type="checkbox" ><label for="723ce0cf-f1b7-4f5a-b42c-70e9179f134d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a0746e0-6ceb-4b52-80ac-926943762e67" type="checkbox" ><label for="3a0746e0-6ceb-4b52-80ac-926943762e67" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-16322ae9-0d67-4845-9486-511e8f005f41 {color: black;background-color: white;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 pre{padding: 0;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-toggleable {background-color: white;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-estimator:hover {background-color: #d4ebff;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-item {z-index: 1;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-parallel-item:only-child::after {width: 0;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-16322ae9-0d67-4845-9486-511e8f005f41 div.sk-text-repr-fallback {display: none;}</style><div id="sk-16322ae9-0d67-4845-9486-511e8f005f41" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8dbdbdf9-ac40-4237-a8a1-30610b973272" type="checkbox" ><label for="8dbdbdf9-ac40-4237-a8a1-30610b973272" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ba66513f-7544-4564-ae5e-f63d459601eb" type="checkbox" ><label for="ba66513f-7544-4564-ae5e-f63d459601eb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c17542a-cc63-41f7-87d8-4d944feb6ec4" type="checkbox" ><label for="5c17542a-cc63-41f7-87d8-4d944feb6ec4" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="702b57df-3024-4487-bce7-572e43a84d90" type="checkbox" ><label for="702b57df-3024-4487-bce7-572e43a84d90" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a {color: black;background-color: white;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a pre{padding: 0;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-toggleable {background-color: white;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-estimator:hover {background-color: #d4ebff;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-item {z-index: 1;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-parallel-item:only-child::after {width: 0;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a div.sk-text-repr-fallback {display: none;}</style><div id="sk-e4d4cf4c-6ecb-456d-b5a8-cb373fdae62a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0c6f4934-b747-4d1e-a3c8-fe477b9445aa" type="checkbox" ><label for="0c6f4934-b747-4d1e-a3c8-fe477b9445aa" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fe50de69-db24-408a-a771-a339e611db1a" type="checkbox" ><label for="fe50de69-db24-408a-a771-a339e611db1a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c41b1a8-6bcf-47dc-a99d-59db7bef06de" type="checkbox" ><label for="7c41b1a8-6bcf-47dc-a99d-59db7bef06de" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 {color: black;background-color: white;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 pre{padding: 0;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-toggleable {background-color: white;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-item {z-index: 1;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-parallel-item:only-child::after {width: 0;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0aada026-7996-4fc8-84e6-e6685481cdf8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0aada026-7996-4fc8-84e6-e6685481cdf8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ed39d27-cd44-446e-9f08-bf62d4382304" type="checkbox" ><label for="9ed39d27-cd44-446e-9f08-bf62d4382304" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="82e298be-8505-4ace-8eaa-66cbcc7eafe1" type="checkbox" ><label for="82e298be-8505-4ace-8eaa-66cbcc7eafe1" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4b1a9b0-36af-4022-ab6a-d5cd4f40b53b" type="checkbox" ><label for="b4b1a9b0-36af-4022-ab6a-d5cd4f40b53b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2d746a8-2e71-492d-83e9-ecaaedfc4c5b" type="checkbox" ><label for="b2d746a8-2e71-492d-83e9-ecaaedfc4c5b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5ab4483-04ae-4762-9c99-cc96d7c7e5fa" type="checkbox" ><label for="c5ab4483-04ae-4762-9c99-cc96d7c7e5fa" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6232b6bd-83d5-4048-8c64-a3c09483dfe9" type="checkbox" ><label for="6232b6bd-83d5-4048-8c64-a3c09483dfe9" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7552e582-c56a-49d2-b1e4-80451b9c33bd" type="checkbox" ><label for="7552e582-c56a-49d2-b1e4-80451b9c33bd" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0877da2e-33ce-41ae-b0ab-ea9416bdb848" type="checkbox" ><label for="0877da2e-33ce-41ae-b0ab-ea9416bdb848" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecb93b15-e405-4cb7-9c54-62afe05e752b" type="checkbox" ><label for="ecb93b15-e405-4cb7-9c54-62afe05e752b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 {color: black;background-color: white;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 pre{padding: 0;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-toggleable {background-color: white;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-estimator:hover {background-color: #d4ebff;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-item {z-index: 1;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-parallel-item:only-child::after {width: 0;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88 div.sk-text-repr-fallback {display: none;}</style><div id="sk-48fbff03-b58f-4db8-9dcb-7a2da7539b88" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="110dcce0-411a-4bbe-b47f-9b4fcd9e657d" type="checkbox" ><label for="110dcce0-411a-4bbe-b47f-9b4fcd9e657d" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5fe082a1-889d-48e3-89c8-febada5fdb38" type="checkbox" ><label for="5fe082a1-889d-48e3-89c8-febada5fdb38" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93c8d0af-5186-4d8f-bd52-a585a90cff17" type="checkbox" ><label for="93c8d0af-5186-4d8f-bd52-a585a90cff17" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="68b1cda4-6bee-4db9-8f75-b1dc4ef11408" type="checkbox" ><label for="68b1cda4-6bee-4db9-8f75-b1dc4ef11408" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="931edfc4-afc7-4eb8-bbed-8ab3422d6b69" type="checkbox" ><label for="931edfc4-afc7-4eb8-bbed-8ab3422d6b69" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e95d408-62c1-4c36-a3da-7843dc5ee37e" type="checkbox" ><label for="9e95d408-62c1-4c36-a3da-7843dc5ee37e" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98b316be-042d-4f66-b524-406a45ae2ab7" type="checkbox" ><label for="98b316be-042d-4f66-b524-406a45ae2ab7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce60be13-99bd-438e-b682-ccccece9a38f" type="checkbox" ><label for="ce60be13-99bd-438e-b682-ccccece9a38f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fc906ec-5888-43df-8351-97ea021ed66e" type="checkbox" ><label for="0fc906ec-5888-43df-8351-97ea021ed66e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.094 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
