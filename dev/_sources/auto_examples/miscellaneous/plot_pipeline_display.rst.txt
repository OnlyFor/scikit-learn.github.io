
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 {color: black;background-color: white;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 pre{padding: 0;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-toggleable {background-color: white;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-item {z-index: 1;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-parallel-item:only-child::after {width: 0;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-container {display: inline-block;position: relative;}#sk-0f96177c-ad36-4388-b69f-3c9f49fdc460 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0f96177c-ad36-4388-b69f-3c9f49fdc460" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8dc7da6b-7396-4473-84bb-a82db43db56f" type="checkbox" ><label class="sk-toggleable__label" for="8dc7da6b-7396-4473-84bb-a82db43db56f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9535d9f4-9a91-4f2f-b418-adc328f1108a" type="checkbox" ><label class="sk-toggleable__label" for="9535d9f4-9a91-4f2f-b418-adc328f1108a">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3765fbd-babe-4157-98a1-c549c704d938" type="checkbox" ><label class="sk-toggleable__label" for="d3765fbd-babe-4157-98a1-c549c704d938">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-20abcba5-007e-40cc-8904-c9d0d3167084 {color: black;background-color: white;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 pre{padding: 0;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-toggleable {background-color: white;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-estimator:hover {background-color: #d4ebff;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-item {z-index: 1;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-parallel-item:only-child::after {width: 0;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-container {display: inline-block;position: relative;}#sk-20abcba5-007e-40cc-8904-c9d0d3167084 div.sk-text-repr-fallback {display: none;}</style><div id="sk-20abcba5-007e-40cc-8904-c9d0d3167084" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="986eb811-3af4-4f60-a219-0524dc26f87a" type="checkbox" ><label class="sk-toggleable__label" for="986eb811-3af4-4f60-a219-0524dc26f87a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1e37437-b576-4b22-8850-411912c79822" type="checkbox" ><label class="sk-toggleable__label" for="f1e37437-b576-4b22-8850-411912c79822">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e64ae9a1-3ac8-4fde-a20d-ecccb00105db" type="checkbox" ><label class="sk-toggleable__label" for="e64ae9a1-3ac8-4fde-a20d-ecccb00105db">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2f111c4-b326-4adf-a1cc-bb7eaf495307" type="checkbox" ><label class="sk-toggleable__label" for="e2f111c4-b326-4adf-a1cc-bb7eaf495307">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 {color: black;background-color: white;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 pre{padding: 0;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-toggleable {background-color: white;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-item {z-index: 1;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-parallel-item:only-child::after {width: 0;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-container {display: inline-block;position: relative;}#sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d4bb5637-e0ba-40e8-b80a-bc5e1350b4b3" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="66a64027-e1b0-4e87-973b-80553553541f" type="checkbox" ><label class="sk-toggleable__label" for="66a64027-e1b0-4e87-973b-80553553541f">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6ebbe1b-4c36-49a4-ae59-66e31c2fe0a3" type="checkbox" ><label class="sk-toggleable__label" for="d6ebbe1b-4c36-49a4-ae59-66e31c2fe0a3">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e262087-2611-4b36-a657-558c97138c43" type="checkbox" ><label class="sk-toggleable__label" for="8e262087-2611-4b36-a657-558c97138c43">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd {color: black;background-color: white;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd pre{padding: 0;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-toggleable {background-color: white;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-estimator:hover {background-color: #d4ebff;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-item {z-index: 1;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-parallel-item:only-child::after {width: 0;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-container {display: inline-block;position: relative;}#sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd div.sk-text-repr-fallback {display: none;}</style><div id="sk-445e3b83-3b7f-49b0-ba94-38ff88d0cbcd" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6635dfb0-3eab-4c10-97e9-6918e2f88c53" type="checkbox" ><label class="sk-toggleable__label" for="6635dfb0-3eab-4c10-97e9-6918e2f88c53">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52fbec0d-3c6f-4c54-b0eb-e2bfff004ddf" type="checkbox" ><label class="sk-toggleable__label" for="52fbec0d-3c6f-4c54-b0eb-e2bfff004ddf">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a8e8c7a-9039-42cf-8059-7c4145813393" type="checkbox" ><label class="sk-toggleable__label" for="3a8e8c7a-9039-42cf-8059-7c4145813393">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="540701b6-51c3-41e9-8159-923f1b5c8a1b" type="checkbox" ><label class="sk-toggleable__label" for="540701b6-51c3-41e9-8159-923f1b5c8a1b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34593eb0-72de-4376-a1a5-0b5b1ebf72bb" type="checkbox" ><label class="sk-toggleable__label" for="34593eb0-72de-4376-a1a5-0b5b1ebf72bb">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2e0409fc-f1a2-4bf4-ab32-3a096a769fd0" type="checkbox" ><label class="sk-toggleable__label" for="2e0409fc-f1a2-4bf4-ab32-3a096a769fd0">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac4ad974-a15c-4cee-a826-bcae7dd35404" type="checkbox" ><label class="sk-toggleable__label" for="ac4ad974-a15c-4cee-a826-bcae7dd35404">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="deaef9fb-6f67-4320-bb12-c8d8a6c6f520" type="checkbox" ><label class="sk-toggleable__label" for="deaef9fb-6f67-4320-bb12-c8d8a6c6f520">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16afc51b-fa67-4b64-b5e0-9b9f1d98fd6d" type="checkbox" ><label class="sk-toggleable__label" for="16afc51b-fa67-4b64-b5e0-9b9f1d98fd6d">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a {color: black;background-color: white;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a pre{padding: 0;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-toggleable {background-color: white;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-estimator:hover {background-color: #d4ebff;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-item {z-index: 1;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-parallel-item:only-child::after {width: 0;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-container {display: inline-block;position: relative;}#sk-a635920b-46e7-4426-b0cd-9b5e8abd984a div.sk-text-repr-fallback {display: none;}</style><div id="sk-a635920b-46e7-4426-b0cd-9b5e8abd984a" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a34e532c-d356-4d92-b40f-8371447a0c48" type="checkbox" ><label class="sk-toggleable__label" for="a34e532c-d356-4d92-b40f-8371447a0c48">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a043d34-babd-4363-ab9a-eb6901c8eba7" type="checkbox" ><label class="sk-toggleable__label" for="2a043d34-babd-4363-ab9a-eb6901c8eba7">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d867bda2-90d1-4c92-a90f-2bf57b54cfeb" type="checkbox" ><label class="sk-toggleable__label" for="d867bda2-90d1-4c92-a90f-2bf57b54cfeb">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7308120f-19da-4227-b74a-4a25bc15aa2f" type="checkbox" ><label class="sk-toggleable__label" for="7308120f-19da-4227-b74a-4a25bc15aa2f">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b91657c2-685e-4166-ae2b-6df03a9d2716" type="checkbox" ><label class="sk-toggleable__label" for="b91657c2-685e-4166-ae2b-6df03a9d2716">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5a98e046-3891-4ee0-adb9-14d73437d3d6" type="checkbox" ><label class="sk-toggleable__label" for="5a98e046-3891-4ee0-adb9-14d73437d3d6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36ab3f85-9b85-4759-b08d-f3e1ef270d38" type="checkbox" ><label class="sk-toggleable__label" for="36ab3f85-9b85-4759-b08d-f3e1ef270d38">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01820433-27d8-4ba8-8500-1779e46322e3" type="checkbox" ><label class="sk-toggleable__label" for="01820433-27d8-4ba8-8500-1779e46322e3">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6560cca4-32fa-4eb3-b2dd-60bf27e4c419" type="checkbox" ><label class="sk-toggleable__label" for="6560cca4-32fa-4eb3-b2dd-60bf27e4c419">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.134 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
