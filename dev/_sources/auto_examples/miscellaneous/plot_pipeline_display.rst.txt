
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db {color: black;background-color: white;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db pre{padding: 0;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-toggleable {background-color: white;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-estimator:hover {background-color: #d4ebff;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-item {z-index: 1;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-parallel-item:only-child::after {width: 0;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db div.sk-text-repr-fallback {display: none;}</style><div id="sk-3458fd20-a0ee-4daf-b6d7-829b5b61d1db" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdad4f75-b28e-49d2-86ea-3bf6237dccea" type="checkbox" ><label for="cdad4f75-b28e-49d2-86ea-3bf6237dccea" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="941f2f99-0688-492c-84b9-079e622d4886" type="checkbox" ><label for="941f2f99-0688-492c-84b9-079e622d4886" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb0681dc-542d-49b4-8a37-9cde1923884f" type="checkbox" ><label for="cb0681dc-542d-49b4-8a37-9cde1923884f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 {color: black;background-color: white;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 pre{padding: 0;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-toggleable {background-color: white;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-item {z-index: 1;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-parallel-item:only-child::after {width: 0;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0421d170-0f9b-4a32-ae3c-2f2a655a8b84" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="018e10e1-cec6-437f-9246-d4c427047b30" type="checkbox" ><label for="018e10e1-cec6-437f-9246-d4c427047b30" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c63483b4-5727-47b9-af4e-5d2cc5518ea0" type="checkbox" ><label for="c63483b4-5727-47b9-af4e-5d2cc5518ea0" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90d30f52-e892-4055-a083-5ea853163cdf" type="checkbox" ><label for="90d30f52-e892-4055-a083-5ea853163cdf" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a591be8-2252-4807-8d88-f4d8aff0484d" type="checkbox" ><label for="2a591be8-2252-4807-8d88-f4d8aff0484d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 {color: black;background-color: white;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 pre{padding: 0;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-toggleable {background-color: white;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-item {z-index: 1;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-parallel-item:only-child::after {width: 0;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e91661d4-de6b-47e1-adbc-cfb50a50ecb5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f5319daf-6e82-4e28-a83c-2044ce25084d" type="checkbox" ><label for="f5319daf-6e82-4e28-a83c-2044ce25084d" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64cdadda-5748-4ca7-b1d2-22f067fa086a" type="checkbox" ><label for="64cdadda-5748-4ca7-b1d2-22f067fa086a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5d550fa-5424-4c04-a3bf-bc15c42e7dbf" type="checkbox" ><label for="b5d550fa-5424-4c04-a3bf-bc15c42e7dbf" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 {color: black;background-color: white;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 pre{padding: 0;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-toggleable {background-color: white;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-item {z-index: 1;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-parallel-item:only-child::after {width: 0;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f7ca818c-e63f-44c4-bf61-c3dacf352ca2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a719f12a-c5ca-458e-a030-44f9fad0da7e" type="checkbox" ><label for="a719f12a-c5ca-458e-a030-44f9fad0da7e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09cebd43-3615-4acc-9a3e-1e9bf75387ef" type="checkbox" ><label for="09cebd43-3615-4acc-9a3e-1e9bf75387ef" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02fa87b5-0792-4a4a-bf46-83fcfb53410f" type="checkbox" ><label for="02fa87b5-0792-4a4a-bf46-83fcfb53410f" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b055615-759d-41de-9628-05c9ca646a82" type="checkbox" ><label for="3b055615-759d-41de-9628-05c9ca646a82" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1ca1206-c530-44f0-a6dc-dbc44c203d90" type="checkbox" ><label for="c1ca1206-c530-44f0-a6dc-dbc44c203d90" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f1009ea-3ec2-426a-9775-dfbf292fb623" type="checkbox" ><label for="6f1009ea-3ec2-426a-9775-dfbf292fb623" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2498a56-cc85-4197-926d-084ecd246370" type="checkbox" ><label for="b2498a56-cc85-4197-926d-084ecd246370" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50672563-4cbf-41d1-b42b-2402b843fb8f" type="checkbox" ><label for="50672563-4cbf-41d1-b42b-2402b843fb8f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c15f43e6-0245-4d0d-9505-c6eca4369a48" type="checkbox" ><label for="c15f43e6-0245-4d0d-9505-c6eca4369a48" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 {color: black;background-color: white;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 pre{padding: 0;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-toggleable {background-color: white;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-item {z-index: 1;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-parallel-item:only-child::after {width: 0;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-21c0ef4b-2249-4235-b910-69d4e1c16ff0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d5fabf1-115b-4406-9d2c-4fe5bc92eed2" type="checkbox" ><label for="8d5fabf1-115b-4406-9d2c-4fe5bc92eed2" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ce8eacf-869c-44d6-8c00-86bdba144d79" type="checkbox" ><label for="0ce8eacf-869c-44d6-8c00-86bdba144d79" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="940e12e1-ebb9-48b1-8f87-65690a6b9230" type="checkbox" ><label for="940e12e1-ebb9-48b1-8f87-65690a6b9230" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3c9aff5f-17d7-45ec-8d14-47ec7e50a6d9" type="checkbox" ><label for="3c9aff5f-17d7-45ec-8d14-47ec7e50a6d9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d3720f9-c2db-4c14-98db-24d5b8861199" type="checkbox" ><label for="3d3720f9-c2db-4c14-98db-24d5b8861199" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8143297f-28e6-4b51-a382-4239c8359f60" type="checkbox" ><label for="8143297f-28e6-4b51-a382-4239c8359f60" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cfaecef-27aa-43dd-b349-cce6d6894b54" type="checkbox" ><label for="1cfaecef-27aa-43dd-b349-cce6d6894b54" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1b2b61ab-0984-4eac-8a62-ca9ec8697303" type="checkbox" ><label for="1b2b61ab-0984-4eac-8a62-ca9ec8697303" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1ae4129a-0cc7-4664-b229-010db9e77052" type="checkbox" ><label for="1ae4129a-0cc7-4664-b229-010db9e77052" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.092 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
