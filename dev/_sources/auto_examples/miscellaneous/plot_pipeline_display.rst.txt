
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3f339b43-6c0c-454e-910e-54fd066448ec {color: black;background-color: white;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec pre{padding: 0;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-toggleable {background-color: white;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-estimator:hover {background-color: #d4ebff;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-item {z-index: 1;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-parallel-item:only-child::after {width: 0;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-container {display: inline-block;position: relative;}#sk-3f339b43-6c0c-454e-910e-54fd066448ec div.sk-text-repr-fallback {display: none;}</style><div id="sk-3f339b43-6c0c-454e-910e-54fd066448ec" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d2e8ead-becd-4a50-8cc0-38002a6c32e8" type="checkbox" ><label class="sk-toggleable__label" for="5d2e8ead-becd-4a50-8cc0-38002a6c32e8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="03ee67b8-dd1d-4ff5-a764-3cadf3332293" type="checkbox" ><label class="sk-toggleable__label" for="03ee67b8-dd1d-4ff5-a764-3cadf3332293">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ae7934b-3bc7-4907-9301-c329bfd361bb" type="checkbox" ><label class="sk-toggleable__label" for="8ae7934b-3bc7-4907-9301-c329bfd361bb">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 {color: black;background-color: white;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 pre{padding: 0;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-toggleable {background-color: white;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-item {z-index: 1;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-parallel-item:only-child::after {width: 0;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-container {display: inline-block;position: relative;}#sk-40b1fb37-6277-4690-aeee-089baf55b1d4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-40b1fb37-6277-4690-aeee-089baf55b1d4" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1db5e630-3a99-4109-a2a7-25463a3bac6c" type="checkbox" ><label class="sk-toggleable__label" for="1db5e630-3a99-4109-a2a7-25463a3bac6c">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b20f73d1-9df8-4740-a1f6-3b1513d0b5f0" type="checkbox" ><label class="sk-toggleable__label" for="b20f73d1-9df8-4740-a1f6-3b1513d0b5f0">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="171c7533-2e76-4379-ac4c-06dd441681a6" type="checkbox" ><label class="sk-toggleable__label" for="171c7533-2e76-4379-ac4c-06dd441681a6">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d4b3128-2b6e-4d79-a983-b23ed693cfc8" type="checkbox" ><label class="sk-toggleable__label" for="7d4b3128-2b6e-4d79-a983-b23ed693cfc8">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 {color: black;background-color: white;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 pre{padding: 0;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-toggleable {background-color: white;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-item {z-index: 1;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-parallel-item:only-child::after {width: 0;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-container {display: inline-block;position: relative;}#sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fbcef8c5-1598-4b2f-89ad-d57395a15e74" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1e9b77ad-5640-4094-97ec-b3601223b12a" type="checkbox" ><label class="sk-toggleable__label" for="1e9b77ad-5640-4094-97ec-b3601223b12a">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09932bbf-d8e7-4502-9810-ad688b64d529" type="checkbox" ><label class="sk-toggleable__label" for="09932bbf-d8e7-4502-9810-ad688b64d529">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="187228fa-b605-47cf-add6-7f70c23d3a6a" type="checkbox" ><label class="sk-toggleable__label" for="187228fa-b605-47cf-add6-7f70c23d3a6a">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 {color: black;background-color: white;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 pre{padding: 0;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-toggleable {background-color: white;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-estimator:hover {background-color: #d4ebff;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-item {z-index: 1;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-parallel-item:only-child::after {width: 0;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-container {display: inline-block;position: relative;}#sk-221606f1-4d5a-431f-bfe1-aabfbdc35617 div.sk-text-repr-fallback {display: none;}</style><div id="sk-221606f1-4d5a-431f-bfe1-aabfbdc35617" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e609dc1b-d0b5-4006-b350-239883ef9d63" type="checkbox" ><label class="sk-toggleable__label" for="e609dc1b-d0b5-4006-b350-239883ef9d63">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f15f270d-bcbf-4411-856b-ea1c53d903be" type="checkbox" ><label class="sk-toggleable__label" for="f15f270d-bcbf-4411-856b-ea1c53d903be">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6da0e0cb-2367-448e-b770-6d4a47648259" type="checkbox" ><label class="sk-toggleable__label" for="6da0e0cb-2367-448e-b770-6d4a47648259">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7c832847-9332-4804-be5c-3f90879ca21c" type="checkbox" ><label class="sk-toggleable__label" for="7c832847-9332-4804-be5c-3f90879ca21c">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5471ee9-5946-4a8a-80ac-2c4dbd525c3d" type="checkbox" ><label class="sk-toggleable__label" for="a5471ee9-5946-4a8a-80ac-2c4dbd525c3d">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55dd74ab-6dd6-4515-ac56-324595b75be0" type="checkbox" ><label class="sk-toggleable__label" for="55dd74ab-6dd6-4515-ac56-324595b75be0">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="108ca190-3e5d-4ac4-b254-f40bfcee7b03" type="checkbox" ><label class="sk-toggleable__label" for="108ca190-3e5d-4ac4-b254-f40bfcee7b03">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3ad9409-d6da-42dc-9255-8d02308eb01e" type="checkbox" ><label class="sk-toggleable__label" for="d3ad9409-d6da-42dc-9255-8d02308eb01e">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="62631978-f36d-454b-b1cb-f6b09f760db6" type="checkbox" ><label class="sk-toggleable__label" for="62631978-f36d-454b-b1cb-f6b09f760db6">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c {color: black;background-color: white;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c pre{padding: 0;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-toggleable {background-color: white;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-estimator:hover {background-color: #d4ebff;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-item {z-index: 1;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-parallel-item:only-child::after {width: 0;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-container {display: inline-block;position: relative;}#sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c div.sk-text-repr-fallback {display: none;}</style><div id="sk-a1a20f0c-f0a8-4e91-bd62-25926b3eb20c" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="50cd2301-d906-42bd-abff-675657ec8022" type="checkbox" ><label class="sk-toggleable__label" for="50cd2301-d906-42bd-abff-675657ec8022">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f86ed6f8-b901-4bd6-9ee8-9285c865c1dd" type="checkbox" ><label class="sk-toggleable__label" for="f86ed6f8-b901-4bd6-9ee8-9285c865c1dd">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57481e20-f3aa-4c40-af16-118331647928" type="checkbox" ><label class="sk-toggleable__label" for="57481e20-f3aa-4c40-af16-118331647928">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="55a79c5b-c803-4923-b4c8-9f5c732b9e94" type="checkbox" ><label class="sk-toggleable__label" for="55a79c5b-c803-4923-b4c8-9f5c732b9e94">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3034ba00-5b42-469d-a6db-15a62e277594" type="checkbox" ><label class="sk-toggleable__label" for="3034ba00-5b42-469d-a6db-15a62e277594">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c57dbb9-ad03-477f-8236-0634364d5ec9" type="checkbox" ><label class="sk-toggleable__label" for="4c57dbb9-ad03-477f-8236-0634364d5ec9">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3350720c-b789-497f-8c94-a7adc02a1dce" type="checkbox" ><label class="sk-toggleable__label" for="3350720c-b789-497f-8c94-a7adc02a1dce">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d468f1b8-0a4d-488d-9302-5870409ab0aa" type="checkbox" ><label class="sk-toggleable__label" for="d468f1b8-0a4d-488d-9302-5870409ab0aa">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42c4934f-483d-435c-b5a0-e0cc8d5809e7" type="checkbox" ><label class="sk-toggleable__label" for="42c4934f-483d-435c-b5a0-e0cc8d5809e7">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.123 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
