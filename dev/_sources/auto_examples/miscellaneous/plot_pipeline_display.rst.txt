
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 {color: black;background-color: white;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 pre{padding: 0;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-toggleable {background-color: white;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-item {z-index: 1;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-parallel-item:only-child::after {width: 0;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-container {display: inline-block;position: relative;}#sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e1c6dfd0-d6ab-4adf-9ca5-474b5d506e06" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1c6b18b-d494-4222-af12-8f8fc717a4e2" type="checkbox" ><label class="sk-toggleable__label" for="e1c6b18b-d494-4222-af12-8f8fc717a4e2">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59a709e9-2dce-4d04-8b40-31d80e6e1e02" type="checkbox" ><label class="sk-toggleable__label" for="59a709e9-2dce-4d04-8b40-31d80e6e1e02">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08751a92-7735-4263-aa8f-da98980a5e5c" type="checkbox" ><label class="sk-toggleable__label" for="08751a92-7735-4263-aa8f-da98980a5e5c">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f {color: black;background-color: white;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f pre{padding: 0;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-toggleable {background-color: white;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-estimator:hover {background-color: #d4ebff;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-item {z-index: 1;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-parallel-item:only-child::after {width: 0;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-container {display: inline-block;position: relative;}#sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f div.sk-text-repr-fallback {display: none;}</style><div id="sk-4ed8c75f-62df-496e-b1f1-83aec7bfbf4f" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b77e9ef-f875-4635-937f-d81c26534dd6" type="checkbox" ><label class="sk-toggleable__label" for="7b77e9ef-f875-4635-937f-d81c26534dd6">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3993c631-d586-47e6-8c87-b329144a4adf" type="checkbox" ><label class="sk-toggleable__label" for="3993c631-d586-47e6-8c87-b329144a4adf">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59f033d7-36ae-4a51-a07a-19b120c288c5" type="checkbox" ><label class="sk-toggleable__label" for="59f033d7-36ae-4a51-a07a-19b120c288c5">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="78ed8976-72b8-4a20-94e2-06fd7be2d5d1" type="checkbox" ><label class="sk-toggleable__label" for="78ed8976-72b8-4a20-94e2-06fd7be2d5d1">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 {color: black;background-color: white;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 pre{padding: 0;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-toggleable {background-color: white;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-item {z-index: 1;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-parallel-item:only-child::after {width: 0;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-container {display: inline-block;position: relative;}#sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d58b31f3-bec4-4b13-b62a-ed169fb8a064" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bc9ecb1c-5ec1-425d-b231-e2b4acb8f4e4" type="checkbox" ><label class="sk-toggleable__label" for="bc9ecb1c-5ec1-425d-b231-e2b4acb8f4e4">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98ca1342-379e-4fed-ba9c-5dba72b4a082" type="checkbox" ><label class="sk-toggleable__label" for="98ca1342-379e-4fed-ba9c-5dba72b4a082">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04dc40df-8b35-49be-a442-a32aa3ef712e" type="checkbox" ><label class="sk-toggleable__label" for="04dc40df-8b35-49be-a442-a32aa3ef712e">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b {color: black;background-color: white;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b pre{padding: 0;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-toggleable {background-color: white;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-estimator:hover {background-color: #d4ebff;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-item {z-index: 1;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-parallel-item:only-child::after {width: 0;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-container {display: inline-block;position: relative;}#sk-ffdaac01-fea0-4036-9bde-a47fe464a23b div.sk-text-repr-fallback {display: none;}</style><div id="sk-ffdaac01-fea0-4036-9bde-a47fe464a23b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f0a31e8-2962-4672-8a64-6475361ccc4b" type="checkbox" ><label class="sk-toggleable__label" for="5f0a31e8-2962-4672-8a64-6475361ccc4b">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1113d101-18ca-488a-be5b-ed07ccefd47f" type="checkbox" ><label class="sk-toggleable__label" for="1113d101-18ca-488a-be5b-ed07ccefd47f">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="81b0c97c-ca7f-4cdd-b78c-e497189902cb" type="checkbox" ><label class="sk-toggleable__label" for="81b0c97c-ca7f-4cdd-b78c-e497189902cb">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="212d9c2c-add9-4959-ad07-369eec6b82b4" type="checkbox" ><label class="sk-toggleable__label" for="212d9c2c-add9-4959-ad07-369eec6b82b4">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db3d8ece-5c50-42f3-a778-10911c912861" type="checkbox" ><label class="sk-toggleable__label" for="db3d8ece-5c50-42f3-a778-10911c912861">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="07675165-fc74-437d-9bbf-7387ddf09953" type="checkbox" ><label class="sk-toggleable__label" for="07675165-fc74-437d-9bbf-7387ddf09953">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f82e1ec6-d671-45a0-8f9e-92033c4f0277" type="checkbox" ><label class="sk-toggleable__label" for="f82e1ec6-d671-45a0-8f9e-92033c4f0277">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e82f0150-781a-4c36-a0f4-65f2774d6bc7" type="checkbox" ><label class="sk-toggleable__label" for="e82f0150-781a-4c36-a0f4-65f2774d6bc7">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28f41dd2-3cdd-4c4f-aa56-bbbd4ffd323e" type="checkbox" ><label class="sk-toggleable__label" for="28f41dd2-3cdd-4c4f-aa56-bbbd4ffd323e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 {color: black;background-color: white;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 pre{padding: 0;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-toggleable {background-color: white;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-item {z-index: 1;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-parallel-item:only-child::after {width: 0;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-container {display: inline-block;position: relative;}#sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9c9f2d1e-f700-4201-b8b6-3bda1ab009d2" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c2ff1cc-6aa0-4860-b52a-b5061f383a15" type="checkbox" ><label class="sk-toggleable__label" for="2c2ff1cc-6aa0-4860-b52a-b5061f383a15">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56f4a016-c251-49a6-8058-5ea170d98c55" type="checkbox" ><label class="sk-toggleable__label" for="56f4a016-c251-49a6-8058-5ea170d98c55">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2c9b4bb-848a-43c4-92f7-a8ccd6f36f9e" type="checkbox" ><label class="sk-toggleable__label" for="e2c9b4bb-848a-43c4-92f7-a8ccd6f36f9e">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69fae447-8dec-450f-8b02-f6ca66700adb" type="checkbox" ><label class="sk-toggleable__label" for="69fae447-8dec-450f-8b02-f6ca66700adb">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2cc7c3c3-e3f6-4338-b9e0-e73f796dfe7e" type="checkbox" ><label class="sk-toggleable__label" for="2cc7c3c3-e3f6-4338-b9e0-e73f796dfe7e">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52e404ea-4d05-422b-b745-f72308cd25e6" type="checkbox" ><label class="sk-toggleable__label" for="52e404ea-4d05-422b-b745-f72308cd25e6">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd6e31bc-9700-4027-a466-ca7124de5854" type="checkbox" ><label class="sk-toggleable__label" for="bd6e31bc-9700-4027-a466-ca7124de5854">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8bb9eed-7598-41ba-a450-b2bfac989fc4" type="checkbox" ><label class="sk-toggleable__label" for="f8bb9eed-7598-41ba-a450-b2bfac989fc4">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d18b0530-c548-49d3-97d5-a0fabb95e11b" type="checkbox" ><label class="sk-toggleable__label" for="d18b0530-c548-49d3-97d5-a0fabb95e11b">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
