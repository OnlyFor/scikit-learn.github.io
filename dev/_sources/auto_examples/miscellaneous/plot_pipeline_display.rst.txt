
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 {color: black;background-color: white;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 pre{padding: 0;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-toggleable {background-color: white;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-estimator:hover {background-color: #d4ebff;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-item {z-index: 1;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-parallel-item:only-child::after {width: 0;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-74811a6f-2bdc-4294-b74f-353b5684ee78 div.sk-text-repr-fallback {display: none;}</style><div id="sk-74811a6f-2bdc-4294-b74f-353b5684ee78" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8270f7c-0e57-4a64-8d92-05018774e45b" type="checkbox" ><label for="f8270f7c-0e57-4a64-8d92-05018774e45b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80d6962f-3484-4ec3-87f3-bf2dd11c4168" type="checkbox" ><label for="80d6962f-3484-4ec3-87f3-bf2dd11c4168" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f41042e-5b33-4b39-b25c-4e2ac3cd4968" type="checkbox" ><label for="7f41042e-5b33-4b39-b25c-4e2ac3cd4968" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0448c5d0-ecd7-496a-adfd-68e751be971a {color: black;background-color: white;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a pre{padding: 0;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-toggleable {background-color: white;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-estimator:hover {background-color: #d4ebff;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-item {z-index: 1;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-parallel-item:only-child::after {width: 0;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0448c5d0-ecd7-496a-adfd-68e751be971a div.sk-text-repr-fallback {display: none;}</style><div id="sk-0448c5d0-ecd7-496a-adfd-68e751be971a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b89e31fd-a99c-40c5-b453-f6a9ee464bcc" type="checkbox" ><label for="b89e31fd-a99c-40c5-b453-f6a9ee464bcc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70b2c02a-4beb-4b34-93ad-f6585f08bb1f" type="checkbox" ><label for="70b2c02a-4beb-4b34-93ad-f6585f08bb1f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b7d76ac2-f988-4d12-a718-606dd716ae58" type="checkbox" ><label for="b7d76ac2-f988-4d12-a718-606dd716ae58" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e4b4e31-7ec2-45c4-9c8b-6924a4a82eb4" type="checkbox" ><label for="4e4b4e31-7ec2-45c4-9c8b-6924a4a82eb4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce {color: black;background-color: white;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce pre{padding: 0;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-toggleable {background-color: white;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-estimator:hover {background-color: #d4ebff;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-item {z-index: 1;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-parallel-item:only-child::after {width: 0;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce div.sk-text-repr-fallback {display: none;}</style><div id="sk-cbe770ee-c1b6-4d2d-9b90-4b3407e56cce" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dcac201f-bdf8-4da2-8f71-02aaf31b5eff" type="checkbox" ><label for="dcac201f-bdf8-4da2-8f71-02aaf31b5eff" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="348445ef-fb5b-4f1f-8b77-0e1505a37c4b" type="checkbox" ><label for="348445ef-fb5b-4f1f-8b77-0e1505a37c4b" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a8fac8d-1bea-444c-96c5-7e109b66c5f5" type="checkbox" ><label for="3a8fac8d-1bea-444c-96c5-7e109b66c5f5" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 {color: black;background-color: white;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 pre{padding: 0;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-toggleable {background-color: white;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-item {z-index: 1;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-parallel-item:only-child::after {width: 0;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5673e23b-b2dc-444d-b2c7-0a3c1b30c4e2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cda91114-02cb-491e-a8b2-ade75fc7c88a" type="checkbox" ><label for="cda91114-02cb-491e-a8b2-ade75fc7c88a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="21204217-5507-497d-95b1-1c8fe40d21ae" type="checkbox" ><label for="21204217-5507-497d-95b1-1c8fe40d21ae" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a81d1d97-fa6c-480b-beaa-4a078319de27" type="checkbox" ><label for="a81d1d97-fa6c-480b-beaa-4a078319de27" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1beb7851-7a43-46f6-924a-5ca28f7dd970" type="checkbox" ><label for="1beb7851-7a43-46f6-924a-5ca28f7dd970" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ae6dd11-ab8b-4fad-838a-9cb14e8023ad" type="checkbox" ><label for="9ae6dd11-ab8b-4fad-838a-9cb14e8023ad" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3169166c-0294-4a46-b09c-858b1cb742ed" type="checkbox" ><label for="3169166c-0294-4a46-b09c-858b1cb742ed" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56e1c666-5a8e-4ff8-a0a4-3c813aadff58" type="checkbox" ><label for="56e1c666-5a8e-4ff8-a0a4-3c813aadff58" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="395d6b77-d5d6-44c2-9ca9-0408c9ebc2b9" type="checkbox" ><label for="395d6b77-d5d6-44c2-9ca9-0408c9ebc2b9" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c9324651-e0a3-4b8c-9c52-d86c72fff08e" type="checkbox" ><label for="c9324651-e0a3-4b8c-9c52-d86c72fff08e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 {color: black;background-color: white;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 pre{padding: 0;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-toggleable {background-color: white;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-item {z-index: 1;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-parallel-item:only-child::after {width: 0;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-76a6fa3c-9401-4f97-af6a-8c65d6997eb1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d92e5ab-3101-4be4-922f-14ea715d7f3b" type="checkbox" ><label for="7d92e5ab-3101-4be4-922f-14ea715d7f3b" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0ba753e-a615-4402-ac09-41c97adcaadf" type="checkbox" ><label for="b0ba753e-a615-4402-ac09-41c97adcaadf" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6b3d1f8-65ab-4cd5-8a33-020598d623c4" type="checkbox" ><label for="b6b3d1f8-65ab-4cd5-8a33-020598d623c4" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="41b06df8-b918-4cff-9b32-abf1635ac01b" type="checkbox" ><label for="41b06df8-b918-4cff-9b32-abf1635ac01b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="74426179-cf3a-4212-884a-a2d5de441111" type="checkbox" ><label for="74426179-cf3a-4212-884a-a2d5de441111" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fdede8bf-9787-485b-8f6a-245e0ed7a2fd" type="checkbox" ><label for="fdede8bf-9787-485b-8f6a-245e0ed7a2fd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cdeadc7b-9537-4e46-bc53-bd0430dde92f" type="checkbox" ><label for="cdeadc7b-9537-4e46-bc53-bd0430dde92f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b5a1ffff-665e-4d6a-ac25-d4cee0084373" type="checkbox" ><label for="b5a1ffff-665e-4d6a-ac25-d4cee0084373" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f370f4c-4c62-423d-8d56-29a80b12c0ec" type="checkbox" ><label for="0f370f4c-4c62-423d-8d56-29a80b12c0ec" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.081 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
