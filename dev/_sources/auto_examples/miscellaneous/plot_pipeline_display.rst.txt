
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-59195795-f5d5-4726-b11c-8238aba5f022 {color: black;background-color: white;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 pre{padding: 0;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-toggleable {background-color: white;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-estimator:hover {background-color: #d4ebff;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-item {z-index: 1;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-parallel-item:only-child::after {width: 0;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-59195795-f5d5-4726-b11c-8238aba5f022 div.sk-text-repr-fallback {display: none;}</style><div id="sk-59195795-f5d5-4726-b11c-8238aba5f022" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92869344-4720-4956-ba9f-d8ff3307ba6a" type="checkbox" ><label for="92869344-4720-4956-ba9f-d8ff3307ba6a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b3f767d-9e34-4d41-a834-1d7ec892de22" type="checkbox" ><label for="7b3f767d-9e34-4d41-a834-1d7ec892de22" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2cf8905-74c8-4e2e-9929-9c6025cf3c2f" type="checkbox" ><label for="d2cf8905-74c8-4e2e-9929-9c6025cf3c2f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e {color: black;background-color: white;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e pre{padding: 0;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-toggleable {background-color: white;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-estimator:hover {background-color: #d4ebff;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-item {z-index: 1;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-parallel-item:only-child::after {width: 0;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e div.sk-text-repr-fallback {display: none;}</style><div id="sk-1bfbab8f-99ab-49c8-bacb-e91f6dda2c8e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7dde753c-afba-4691-96a1-2f44dcae0ef9" type="checkbox" ><label for="7dde753c-afba-4691-96a1-2f44dcae0ef9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2abceaa8-96ce-462c-bbfa-14d4a846a27d" type="checkbox" ><label for="2abceaa8-96ce-462c-bbfa-14d4a846a27d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="714d4f4b-cba6-4fd1-ac32-ee12ea47e35a" type="checkbox" ><label for="714d4f4b-cba6-4fd1-ac32-ee12ea47e35a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f86439d2-275e-47a7-a5a3-3d8bbf3b5652" type="checkbox" ><label for="f86439d2-275e-47a7-a5a3-3d8bbf3b5652" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d8da547f-2b51-40d5-a10f-909219641875 {color: black;background-color: white;}#sk-d8da547f-2b51-40d5-a10f-909219641875 pre{padding: 0;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-toggleable {background-color: white;}#sk-d8da547f-2b51-40d5-a10f-909219641875 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d8da547f-2b51-40d5-a10f-909219641875 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d8da547f-2b51-40d5-a10f-909219641875 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d8da547f-2b51-40d5-a10f-909219641875 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d8da547f-2b51-40d5-a10f-909219641875 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8da547f-2b51-40d5-a10f-909219641875 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-estimator:hover {background-color: #d4ebff;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-item {z-index: 1;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-parallel-item:only-child::after {width: 0;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d8da547f-2b51-40d5-a10f-909219641875 div.sk-text-repr-fallback {display: none;}</style><div id="sk-d8da547f-2b51-40d5-a10f-909219641875" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29b1c82e-6ed9-4224-9d4b-180191a7a96f" type="checkbox" ><label for="29b1c82e-6ed9-4224-9d4b-180191a7a96f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6d36f361-b644-4e7d-be60-41e994f37483" type="checkbox" ><label for="6d36f361-b644-4e7d-be60-41e994f37483" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bd2e47d0-fb9a-44ea-88b3-a9d760f2bb9d" type="checkbox" ><label for="bd2e47d0-fb9a-44ea-88b3-a9d760f2bb9d" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 {color: black;background-color: white;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 pre{padding: 0;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-toggleable {background-color: white;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-item {z-index: 1;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-parallel-item:only-child::after {width: 0;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7d99702e-66a7-4c96-9bff-f5461e250cd5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d99702e-66a7-4c96-9bff-f5461e250cd5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf38bde9-0413-44b4-b9d6-b074962a4278" type="checkbox" ><label for="bf38bde9-0413-44b4-b9d6-b074962a4278" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43f692ce-ac0b-4305-9782-a36f3e429504" type="checkbox" ><label for="43f692ce-ac0b-4305-9782-a36f3e429504" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="650317cd-cc6a-4364-bbd6-1184d8f87cd3" type="checkbox" ><label for="650317cd-cc6a-4364-bbd6-1184d8f87cd3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b91fb6a3-fc35-4c10-a7c5-dc0ea0b840a3" type="checkbox" ><label for="b91fb6a3-fc35-4c10-a7c5-dc0ea0b840a3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0ba7e7cc-916d-4767-8a25-fefb8468f38e" type="checkbox" ><label for="0ba7e7cc-916d-4767-8a25-fefb8468f38e" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31fd0886-017a-4635-9d25-61f43d16b8d3" type="checkbox" ><label for="31fd0886-017a-4635-9d25-61f43d16b8d3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a28816cd-3904-45f9-a91e-5f37ea12686d" type="checkbox" ><label for="a28816cd-3904-45f9-a91e-5f37ea12686d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c8136e97-e3e0-4770-8bc0-ccafb854e69a" type="checkbox" ><label for="c8136e97-e3e0-4770-8bc0-ccafb854e69a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ae51f7c7-fe18-4c09-9749-8c9527acbf53" type="checkbox" ><label for="ae51f7c7-fe18-4c09-9749-8c9527acbf53" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d {color: black;background-color: white;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d pre{padding: 0;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-toggleable {background-color: white;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-estimator:hover {background-color: #d4ebff;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-item {z-index: 1;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-parallel-item:only-child::after {width: 0;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d div.sk-text-repr-fallback {display: none;}</style><div id="sk-fd9e4ea7-6bc6-43e1-b797-fe269bd10a3d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04214751-14f3-477d-92db-bee6c44f4a12" type="checkbox" ><label for="04214751-14f3-477d-92db-bee6c44f4a12" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e701f648-855a-494c-a49f-691367f8ad0e" type="checkbox" ><label for="e701f648-855a-494c-a49f-691367f8ad0e" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5efc7f6-9607-47e3-b7cc-941bb599c8c5" type="checkbox" ><label for="a5efc7f6-9607-47e3-b7cc-941bb599c8c5" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca7de155-a326-4c62-890d-dc6bf35094bb" type="checkbox" ><label for="ca7de155-a326-4c62-890d-dc6bf35094bb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf0d9632-9b34-444b-af69-6bfb364d2df8" type="checkbox" ><label for="cf0d9632-9b34-444b-af69-6bfb364d2df8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e7a6765e-173f-4ec8-84c0-eb84157e2dff" type="checkbox" ><label for="e7a6765e-173f-4ec8-84c0-eb84157e2dff" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7b3cee05-3c27-4e80-9bd0-b2416c14967e" type="checkbox" ><label for="7b3cee05-3c27-4e80-9bd0-b2416c14967e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7cdfdebd-e57f-43d6-bc83-fba15023bb5f" type="checkbox" ><label for="7cdfdebd-e57f-43d6-bc83-fba15023bb5f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="918e6ac3-6d4f-42be-9100-815976d649b7" type="checkbox" ><label for="918e6ac3-6d4f-42be-9100-815976d649b7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.086 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
