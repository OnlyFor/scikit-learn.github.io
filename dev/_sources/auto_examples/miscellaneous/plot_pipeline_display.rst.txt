
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 {color: black;background-color: white;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 pre{padding: 0;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-toggleable {background-color: white;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-item {z-index: 1;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-parallel-item:only-child::after {width: 0;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-container {display: inline-block;position: relative;}#sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0e1d56ea-3602-45fa-9252-25b3b8eecff7" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b864f32a-c7a3-410c-a9ee-f2056d2ad19d" type="checkbox" ><label class="sk-toggleable__label" for="b864f32a-c7a3-410c-a9ee-f2056d2ad19d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e89e3bf-aaf2-4124-aae7-f7ab40d0b13d" type="checkbox" ><label class="sk-toggleable__label" for="6e89e3bf-aaf2-4124-aae7-f7ab40d0b13d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5535210-3222-4ad7-94c4-d4b02148c5a7" type="checkbox" ><label class="sk-toggleable__label" for="e5535210-3222-4ad7-94c4-d4b02148c5a7">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-504c0c35-d63f-4267-9b31-6967a0013060 {color: black;background-color: white;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 pre{padding: 0;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-toggleable {background-color: white;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-estimator:hover {background-color: #d4ebff;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-item {z-index: 1;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-parallel-item:only-child::after {width: 0;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-container {display: inline-block;position: relative;}#sk-504c0c35-d63f-4267-9b31-6967a0013060 div.sk-text-repr-fallback {display: none;}</style><div id="sk-504c0c35-d63f-4267-9b31-6967a0013060" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44dd5c33-b250-4b01-97e4-4f61314cef1c" type="checkbox" ><label class="sk-toggleable__label" for="44dd5c33-b250-4b01-97e4-4f61314cef1c">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0abed6f7-0f93-44e1-8c9f-e78f66e65f55" type="checkbox" ><label class="sk-toggleable__label" for="0abed6f7-0f93-44e1-8c9f-e78f66e65f55">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d54b5b9-1678-46bb-bbe7-5aaf3ac7d6e6" type="checkbox" ><label class="sk-toggleable__label" for="7d54b5b9-1678-46bb-bbe7-5aaf3ac7d6e6">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d458f27-9803-4ad6-8bd9-4695ec29cf8e" type="checkbox" ><label class="sk-toggleable__label" for="3d458f27-9803-4ad6-8bd9-4695ec29cf8e">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b {color: black;background-color: white;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b pre{padding: 0;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-toggleable {background-color: white;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-estimator:hover {background-color: #d4ebff;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-item {z-index: 1;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-parallel-item:only-child::after {width: 0;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-container {display: inline-block;position: relative;}#sk-fced4f63-d1b5-4ee5-8f46-042507355e2b div.sk-text-repr-fallback {display: none;}</style><div id="sk-fced4f63-d1b5-4ee5-8f46-042507355e2b" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e39df08-5f9c-404a-8c8a-4dddbd305781" type="checkbox" ><label class="sk-toggleable__label" for="3e39df08-5f9c-404a-8c8a-4dddbd305781">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a71e0100-9c98-4898-95a3-7c327f37ee3c" type="checkbox" ><label class="sk-toggleable__label" for="a71e0100-9c98-4898-95a3-7c327f37ee3c">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="46b5f163-7e9b-47d5-b6be-ece092083e9e" type="checkbox" ><label class="sk-toggleable__label" for="46b5f163-7e9b-47d5-b6be-ece092083e9e">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-37214090-0e13-4c58-a005-ad732a88b909 {color: black;background-color: white;}#sk-37214090-0e13-4c58-a005-ad732a88b909 pre{padding: 0;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-toggleable {background-color: white;}#sk-37214090-0e13-4c58-a005-ad732a88b909 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-37214090-0e13-4c58-a005-ad732a88b909 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-37214090-0e13-4c58-a005-ad732a88b909 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-estimator:hover {background-color: #d4ebff;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-item {z-index: 1;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-parallel-item:only-child::after {width: 0;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-container {display: inline-block;position: relative;}#sk-37214090-0e13-4c58-a005-ad732a88b909 div.sk-text-repr-fallback {display: none;}</style><div id="sk-37214090-0e13-4c58-a005-ad732a88b909" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f32bb07a-6af3-4145-858e-9b3cc1f8d36e" type="checkbox" ><label class="sk-toggleable__label" for="f32bb07a-6af3-4145-858e-9b3cc1f8d36e">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0f155619-1e47-43cd-8fd5-4eae8cbdc8e6" type="checkbox" ><label class="sk-toggleable__label" for="0f155619-1e47-43cd-8fd5-4eae8cbdc8e6">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d9b809f2-b83f-4394-bfba-9b6bf33928b1" type="checkbox" ><label class="sk-toggleable__label" for="d9b809f2-b83f-4394-bfba-9b6bf33928b1">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61a7c96e-2475-4776-9d45-c8df241cb211" type="checkbox" ><label class="sk-toggleable__label" for="61a7c96e-2475-4776-9d45-c8df241cb211">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="765abe46-64d5-4c1b-abf6-b0a9ccffafa3" type="checkbox" ><label class="sk-toggleable__label" for="765abe46-64d5-4c1b-abf6-b0a9ccffafa3">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f03864c6-c212-4f79-a5cf-d67100bf3140" type="checkbox" ><label class="sk-toggleable__label" for="f03864c6-c212-4f79-a5cf-d67100bf3140">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01fe239f-5af2-4c08-9eea-49caad64fad9" type="checkbox" ><label class="sk-toggleable__label" for="01fe239f-5af2-4c08-9eea-49caad64fad9">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="08a0f3fe-7c69-4208-98ad-91cecf0b26cc" type="checkbox" ><label class="sk-toggleable__label" for="08a0f3fe-7c69-4208-98ad-91cecf0b26cc">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be95c9a4-ed01-48df-89e0-ef8edec878ac" type="checkbox" ><label class="sk-toggleable__label" for="be95c9a4-ed01-48df-89e0-ef8edec878ac">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e {color: black;background-color: white;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e pre{padding: 0;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-toggleable {background-color: white;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-estimator:hover {background-color: #d4ebff;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-item {z-index: 1;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-parallel-item:only-child::after {width: 0;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-container {display: inline-block;position: relative;}#sk-533e5cf6-7137-46dd-be86-1797c5c45a5e div.sk-text-repr-fallback {display: none;}</style><div id="sk-533e5cf6-7137-46dd-be86-1797c5c45a5e" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a794c498-dfbf-4f9f-a601-26d66b2359ed" type="checkbox" ><label class="sk-toggleable__label" for="a794c498-dfbf-4f9f-a601-26d66b2359ed">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b97d016e-6f3f-4348-ad68-b7584ed8dee7" type="checkbox" ><label class="sk-toggleable__label" for="b97d016e-6f3f-4348-ad68-b7584ed8dee7">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e61f438-82f2-4759-9f82-1fac45e0316a" type="checkbox" ><label class="sk-toggleable__label" for="6e61f438-82f2-4759-9f82-1fac45e0316a">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a16b95cb-dae8-4724-8c60-b336325f86a0" type="checkbox" ><label class="sk-toggleable__label" for="a16b95cb-dae8-4724-8c60-b336325f86a0">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3710e64-610b-46bf-8cdb-6b3375fe658b" type="checkbox" ><label class="sk-toggleable__label" for="f3710e64-610b-46bf-8cdb-6b3375fe658b">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="44945875-5905-491f-b43a-25e780b06280" type="checkbox" ><label class="sk-toggleable__label" for="44945875-5905-491f-b43a-25e780b06280">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="479027be-e758-49f6-90b1-f623a33ce2ce" type="checkbox" ><label class="sk-toggleable__label" for="479027be-e758-49f6-90b1-f623a33ce2ce">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a53bbff9-63e5-42b7-a7b8-92cbdaf6128d" type="checkbox" ><label class="sk-toggleable__label" for="a53bbff9-63e5-42b7-a7b8-92cbdaf6128d">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4af1db67-fd7b-4411-a7f5-a8e495e1925f" type="checkbox" ><label class="sk-toggleable__label" for="4af1db67-fd7b-4411-a7f5-a8e495e1925f">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.119 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
