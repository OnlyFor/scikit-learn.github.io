
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bbbcad09-2013-42be-bd15-2869543818eb {color: black;background-color: white;}#sk-bbbcad09-2013-42be-bd15-2869543818eb pre{padding: 0;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-toggleable {background-color: white;}#sk-bbbcad09-2013-42be-bd15-2869543818eb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bbbcad09-2013-42be-bd15-2869543818eb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bbbcad09-2013-42be-bd15-2869543818eb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bbbcad09-2013-42be-bd15-2869543818eb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bbbcad09-2013-42be-bd15-2869543818eb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbbcad09-2013-42be-bd15-2869543818eb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-estimator:hover {background-color: #d4ebff;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-item {z-index: 1;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-parallel-item:only-child::after {width: 0;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bbbcad09-2013-42be-bd15-2869543818eb div.sk-text-repr-fallback {display: none;}</style><div id="sk-bbbcad09-2013-42be-bd15-2869543818eb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3a7a9ae-6002-4242-aaca-a17c545c84cd" type="checkbox" ><label for="f3a7a9ae-6002-4242-aaca-a17c545c84cd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="11d5fffb-d93d-445e-95e4-3618851ec281" type="checkbox" ><label for="11d5fffb-d93d-445e-95e4-3618851ec281" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b9930a4e-1d35-4383-88e9-c42e3f7f50cf" type="checkbox" ><label for="b9930a4e-1d35-4383-88e9-c42e3f7f50cf" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc {color: black;background-color: white;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc pre{padding: 0;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-toggleable {background-color: white;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-estimator:hover {background-color: #d4ebff;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-item {z-index: 1;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-parallel-item:only-child::after {width: 0;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc div.sk-text-repr-fallback {display: none;}</style><div id="sk-34b190ec-c745-4fd5-9954-ab2bf41ff8cc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c8fcb2c-20af-46e5-b898-138138baae00" type="checkbox" ><label for="9c8fcb2c-20af-46e5-b898-138138baae00" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26bcc860-44cf-41ea-82dc-8d00da9d4b6f" type="checkbox" ><label for="26bcc860-44cf-41ea-82dc-8d00da9d4b6f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5f393c11-fbf6-4d07-81fc-2eabee41d51b" type="checkbox" ><label for="5f393c11-fbf6-4d07-81fc-2eabee41d51b" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="681677ba-b34e-4589-8728-d29ac55b664f" type="checkbox" ><label for="681677ba-b34e-4589-8728-d29ac55b664f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 {color: black;background-color: white;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 pre{padding: 0;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-toggleable {background-color: white;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-estimator:hover {background-color: #d4ebff;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-item {z-index: 1;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-parallel-item:only-child::after {width: 0;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647 div.sk-text-repr-fallback {display: none;}</style><div id="sk-02649ed0-5a67-4ee9-aa93-1720f4ce6647" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df4b1a02-af40-413f-8ec1-1198f0a4e812" type="checkbox" ><label for="df4b1a02-af40-413f-8ec1-1198f0a4e812" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="57119c28-8fe2-4f1d-a84f-651f4601eb29" type="checkbox" ><label for="57119c28-8fe2-4f1d-a84f-651f4601eb29" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1f048d73-3713-4e51-a8ef-dea9081262df" type="checkbox" ><label for="1f048d73-3713-4e51-a8ef-dea9081262df" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a {color: black;background-color: white;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a pre{padding: 0;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-toggleable {background-color: white;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-estimator:hover {background-color: #d4ebff;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-item {z-index: 1;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-parallel-item:only-child::after {width: 0;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a div.sk-text-repr-fallback {display: none;}</style><div id="sk-5868e085-1f53-49b0-8ce1-c8c8ceb2651a" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="35127f2d-3b30-4239-97a3-7244d069d441" type="checkbox" ><label for="35127f2d-3b30-4239-97a3-7244d069d441" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc160128-63cd-44c6-a9e3-33d49c3cfc13" type="checkbox" ><label for="cc160128-63cd-44c6-a9e3-33d49c3cfc13" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f950344a-d644-4126-acd2-d3327708b23c" type="checkbox" ><label for="f950344a-d644-4126-acd2-d3327708b23c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52595ddc-a3eb-4f16-9fe1-2000c9df3203" type="checkbox" ><label for="52595ddc-a3eb-4f16-9fe1-2000c9df3203" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a9b1fce4-6790-495a-a9e6-008062aab5a8" type="checkbox" ><label for="a9b1fce4-6790-495a-a9e6-008062aab5a8" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bda91b83-0ebb-4ddf-8864-005c02b93ebc" type="checkbox" ><label for="bda91b83-0ebb-4ddf-8864-005c02b93ebc" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e4e3b3c-94b4-4b08-b7e3-8d4c68001083" type="checkbox" ><label for="8e4e3b3c-94b4-4b08-b7e3-8d4c68001083" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5684ba7-7006-473b-bbb6-f058df7a7c5f" type="checkbox" ><label for="d5684ba7-7006-473b-bbb6-f058df7a7c5f" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9f72a33-afaa-4f26-ae59-63ba690479b4" type="checkbox" ><label for="f9f72a33-afaa-4f26-ae59-63ba690479b4" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 {color: black;background-color: white;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 pre{padding: 0;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-toggleable {background-color: white;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-item {z-index: 1;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-parallel-item:only-child::after {width: 0;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-702723e4-5abd-4285-9678-fb35f0ca10b8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-702723e4-5abd-4285-9678-fb35f0ca10b8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f98dad4a-7622-4783-b954-a64a398da483" type="checkbox" ><label for="f98dad4a-7622-4783-b954-a64a398da483" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="331ee5d0-ca48-4272-aa7c-46cc6e95dfd3" type="checkbox" ><label for="331ee5d0-ca48-4272-aa7c-46cc6e95dfd3" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="97f96898-6f07-40e4-a06c-ae185573dd89" type="checkbox" ><label for="97f96898-6f07-40e4-a06c-ae185573dd89" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1d6376d-d8af-485a-b974-04764840a5f5" type="checkbox" ><label for="c1d6376d-d8af-485a-b974-04764840a5f5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="004f2bb7-418d-4d95-b9db-e1f6c5748553" type="checkbox" ><label for="004f2bb7-418d-4d95-b9db-e1f6c5748553" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="37ed7991-789b-4ea4-8a80-c88beb40f8a2" type="checkbox" ><label for="37ed7991-789b-4ea4-8a80-c88beb40f8a2" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c663f599-a87f-4353-9d0d-0d014f58d685" type="checkbox" ><label for="c663f599-a87f-4353-9d0d-0d014f58d685" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7bca1fcb-fea6-48d6-9bfb-d8cfeec33bb4" type="checkbox" ><label for="7bca1fcb-fea6-48d6-9bfb-d8cfeec33bb4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="afcb069b-3aa1-4d16-9bde-961da2c37ff7" type="checkbox" ><label for="afcb069b-3aa1-4d16-9bde-961da2c37ff7" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.073 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
