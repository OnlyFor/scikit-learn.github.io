
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-99d40049-2d02-4951-97c8-0ac8e6b533be {color: black;background-color: white;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be pre{padding: 0;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-toggleable {background-color: white;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-estimator:hover {background-color: #d4ebff;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-item {z-index: 1;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-parallel-item:only-child::after {width: 0;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-99d40049-2d02-4951-97c8-0ac8e6b533be div.sk-text-repr-fallback {display: none;}</style><div id="sk-99d40049-2d02-4951-97c8-0ac8e6b533be" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29678095-d819-4f37-9bc5-57f8e537feca" type="checkbox" ><label for="29678095-d819-4f37-9bc5-57f8e537feca" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bab25d74-3d10-438f-95e9-47c3c2053bc8" type="checkbox" ><label for="bab25d74-3d10-438f-95e9-47c3c2053bc8" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af80ac87-0a5e-4951-8935-405fe25708d7" type="checkbox" ><label for="af80ac87-0a5e-4951-8935-405fe25708d7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb {color: black;background-color: white;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb pre{padding: 0;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-toggleable {background-color: white;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-estimator:hover {background-color: #d4ebff;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-item {z-index: 1;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-parallel-item:only-child::after {width: 0;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb div.sk-text-repr-fallback {display: none;}</style><div id="sk-bbfbc727-2bf8-4b6e-8f9b-bf61a79482bb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c41cb82-3c53-4485-aa2d-bbf23c6940f8" type="checkbox" ><label for="9c41cb82-3c53-4485-aa2d-bbf23c6940f8" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="287ba70a-2709-4a1a-be23-e589a597145c" type="checkbox" ><label for="287ba70a-2709-4a1a-be23-e589a597145c" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="083c8a43-4654-4c6d-862f-33876cac8d7a" type="checkbox" ><label for="083c8a43-4654-4c6d-862f-33876cac8d7a" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a0eba78c-4243-4d3b-8acb-877952e582e6" type="checkbox" ><label for="a0eba78c-4243-4d3b-8acb-877952e582e6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 {color: black;background-color: white;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 pre{padding: 0;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-toggleable {background-color: white;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-estimator:hover {background-color: #d4ebff;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-item {z-index: 1;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-parallel-item:only-child::after {width: 0;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-23c533ac-8d28-4f8c-8edb-1d9488259c80 div.sk-text-repr-fallback {display: none;}</style><div id="sk-23c533ac-8d28-4f8c-8edb-1d9488259c80" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8bde80b2-7d27-4763-acd8-a0a106b957ba" type="checkbox" ><label for="8bde80b2-7d27-4763-acd8-a0a106b957ba" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a1bc86b7-3f4f-458a-89f5-3454e267f16e" type="checkbox" ><label for="a1bc86b7-3f4f-458a-89f5-3454e267f16e" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f8ad74d9-b7d5-40e4-acc9-5fe01c500cf7" type="checkbox" ><label for="f8ad74d9-b7d5-40e4-acc9-5fe01c500cf7" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e {color: black;background-color: white;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e pre{padding: 0;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-toggleable {background-color: white;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-estimator:hover {background-color: #d4ebff;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-item {z-index: 1;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-parallel-item:only-child::after {width: 0;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e div.sk-text-repr-fallback {display: none;}</style><div id="sk-b16a8ff0-1fb2-415b-8fdf-7f601243e66e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="af341b3f-a789-4dc0-85bf-eb15668ac884" type="checkbox" ><label for="af341b3f-a789-4dc0-85bf-eb15668ac884" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1a9f1e84-bf4a-416c-9a2c-864168fec0b6" type="checkbox" ><label for="1a9f1e84-bf4a-416c-9a2c-864168fec0b6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9da662fe-90a9-4438-b4bc-b8d427bf9768" type="checkbox" ><label for="9da662fe-90a9-4438-b4bc-b8d427bf9768" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4dbcd82-f02f-4caf-b299-e316df35ab64" type="checkbox" ><label for="a4dbcd82-f02f-4caf-b299-e316df35ab64" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8dd8d110-eade-4210-a393-6ad408171074" type="checkbox" ><label for="8dd8d110-eade-4210-a393-6ad408171074" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04fe3545-47d1-46cd-9b4a-652e19226318" type="checkbox" ><label for="04fe3545-47d1-46cd-9b4a-652e19226318" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bab8f9ba-e22d-4446-9768-8025d3f4c01a" type="checkbox" ><label for="bab8f9ba-e22d-4446-9768-8025d3f4c01a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f24e0b09-3404-427b-9548-a27ea105886b" type="checkbox" ><label for="f24e0b09-3404-427b-9548-a27ea105886b" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="028b608d-0309-4002-a6ad-8e4425d1f7bd" type="checkbox" ><label for="028b608d-0309-4002-a6ad-8e4425d1f7bd" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c {color: black;background-color: white;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c pre{padding: 0;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-toggleable {background-color: white;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-estimator:hover {background-color: #d4ebff;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-item {z-index: 1;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-parallel-item:only-child::after {width: 0;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c div.sk-text-repr-fallback {display: none;}</style><div id="sk-63db20c1-3c5b-4c4a-83d6-e1238a5abf8c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b2bb8439-5a24-41aa-b697-3e9d358c17cc" type="checkbox" ><label for="b2bb8439-5a24-41aa-b697-3e9d358c17cc" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2133aa5d-315e-4b69-8ca4-4cd337e8fe5d" type="checkbox" ><label for="2133aa5d-315e-4b69-8ca4-4cd337e8fe5d" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd2b7c9c-3ad4-4238-adf7-4ea2a3531979" type="checkbox" ><label for="cd2b7c9c-3ad4-4238-adf7-4ea2a3531979" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b637ff3-1ddb-4077-9aae-051b8bfef2ad" type="checkbox" ><label for="0b637ff3-1ddb-4077-9aae-051b8bfef2ad" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3b7026e-8ca7-40a0-a9e1-09b9b2649447" type="checkbox" ><label for="d3b7026e-8ca7-40a0-a9e1-09b9b2649447" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="366a3983-298d-45df-a092-bf3ae9e88b4b" type="checkbox" ><label for="366a3983-298d-45df-a092-bf3ae9e88b4b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72b55272-4d3f-4e6d-83b8-af02b5530ff6" type="checkbox" ><label for="72b55272-4d3f-4e6d-83b8-af02b5530ff6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7a38ece-3d30-45ff-9b5d-f278a94bfc94" type="checkbox" ><label for="a7a38ece-3d30-45ff-9b5d-f278a94bfc94" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6838e830-f649-4387-b7f7-f531dc70c459" type="checkbox" ><label for="6838e830-f649-4387-b7f7-f531dc70c459" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
