
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8d0deef0-eb08-4549-8239-a78d06212c19 {color: black;background-color: white;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 pre{padding: 0;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-toggleable {background-color: white;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-item {z-index: 1;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-parallel-item:only-child::after {width: 0;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-8d0deef0-eb08-4549-8239-a78d06212c19 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8d0deef0-eb08-4549-8239-a78d06212c19" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d20fc2c-3b4a-4ec3-88cc-7327df25b097" type="checkbox" ><label for="0d20fc2c-3b4a-4ec3-88cc-7327df25b097" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6e657fd-8cb7-485e-8efe-e6674051eaaa" type="checkbox" ><label for="c6e657fd-8cb7-485e-8efe-e6674051eaaa" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8d1cd086-34b9-4961-af33-4d67c47a6111" type="checkbox" ><label for="8d1cd086-34b9-4961-af33-4d67c47a6111" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 {color: black;background-color: white;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 pre{padding: 0;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-toggleable {background-color: white;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-estimator:hover {background-color: #d4ebff;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-item {z-index: 1;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-parallel-item:only-child::after {width: 0;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-645bda41-d703-4457-98f4-ceecc1a9ed79 div.sk-text-repr-fallback {display: none;}</style><div id="sk-645bda41-d703-4457-98f4-ceecc1a9ed79" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3b0b84f3-5aee-43d2-881e-43609b677598" type="checkbox" ><label for="3b0b84f3-5aee-43d2-881e-43609b677598" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7e31d7c5-b8b4-4fc7-87f7-22febb3e6b17" type="checkbox" ><label for="7e31d7c5-b8b4-4fc7-87f7-22febb3e6b17" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75505cc8-fd22-4487-98e0-35e28c2ee0bf" type="checkbox" ><label for="75505cc8-fd22-4487-98e0-35e28c2ee0bf" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="302c07ea-1749-41f0-9c38-a08e06d587ad" type="checkbox" ><label for="302c07ea-1749-41f0-9c38-a08e06d587ad" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cf822fca-1e24-45ad-b663-f821ae02e73d {color: black;background-color: white;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d pre{padding: 0;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-toggleable {background-color: white;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-estimator:hover {background-color: #d4ebff;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-item {z-index: 1;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-parallel-item:only-child::after {width: 0;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cf822fca-1e24-45ad-b663-f821ae02e73d div.sk-text-repr-fallback {display: none;}</style><div id="sk-cf822fca-1e24-45ad-b663-f821ae02e73d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3d1b13aa-299c-417b-95e8-90233befadf4" type="checkbox" ><label for="3d1b13aa-299c-417b-95e8-90233befadf4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="67a5131d-daba-431e-9b32-7becd2427b73" type="checkbox" ><label for="67a5131d-daba-431e-9b32-7becd2427b73" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89d65d72-5ef6-4478-afa0-e03acfdb7d98" type="checkbox" ><label for="89d65d72-5ef6-4478-afa0-e03acfdb7d98" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f {color: black;background-color: white;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f pre{padding: 0;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-toggleable {background-color: white;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-item {z-index: 1;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-parallel-item:only-child::after {width: 0;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a44d943-3271-4eac-ad7c-86b9a0a6482f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a3134e3d-51c4-4681-8a8e-93c359256651" type="checkbox" ><label for="a3134e3d-51c4-4681-8a8e-93c359256651" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c969e099-ea0b-4731-9e93-5cf32347994f" type="checkbox" ><label for="c969e099-ea0b-4731-9e93-5cf32347994f" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bf2526e-6c02-4140-85eb-ccfd7c9a6859" type="checkbox" ><label for="0bf2526e-6c02-4140-85eb-ccfd7c9a6859" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4e97bcaa-e6e8-44c6-ad82-a6a09c960273" type="checkbox" ><label for="4e97bcaa-e6e8-44c6-ad82-a6a09c960273" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef83716c-4c55-4df3-9183-bdcc71a51e59" type="checkbox" ><label for="ef83716c-4c55-4df3-9183-bdcc71a51e59" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="499e853a-0544-43b9-81ce-0c59d1d0b693" type="checkbox" ><label for="499e853a-0544-43b9-81ce-0c59d1d0b693" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d110aca3-cf83-4dbd-b429-104808012ea0" type="checkbox" ><label for="d110aca3-cf83-4dbd-b429-104808012ea0" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9cb82502-1826-4e6b-a84c-28a236c24703" type="checkbox" ><label for="9cb82502-1826-4e6b-a84c-28a236c24703" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="34dc5d42-3d03-497d-b1a6-4e5e31603224" type="checkbox" ><label for="34dc5d42-3d03-497d-b1a6-4e5e31603224" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 {color: black;background-color: white;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 pre{padding: 0;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-toggleable {background-color: white;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-item {z-index: 1;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-parallel-item:only-child::after {width: 0;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a9215e6a-6ac0-47e0-bbbc-a238df03e528" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="df8a3920-bcc6-46f7-b694-c12896a5dc6a" type="checkbox" ><label for="df8a3920-bcc6-46f7-b694-c12896a5dc6a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="04023cf5-08fb-4eb4-b8f8-82932c98d2b1" type="checkbox" ><label for="04023cf5-08fb-4eb4-b8f8-82932c98d2b1" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c98c24a-bbdb-4322-ad51-74755a84f811" type="checkbox" ><label for="8c98c24a-bbdb-4322-ad51-74755a84f811" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6703439-016e-4624-9e04-77542c126cd7" type="checkbox" ><label for="e6703439-016e-4624-9e04-77542c126cd7" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c38930e-e4da-46d6-8793-9ebd2474d57c" type="checkbox" ><label for="9c38930e-e4da-46d6-8793-9ebd2474d57c" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="58b4f8d5-e3ff-4132-ad08-2e609d4e2ce6" type="checkbox" ><label for="58b4f8d5-e3ff-4132-ad08-2e609d4e2ce6" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e06655d-2a81-4ed6-b2ac-7b48ca85931a" type="checkbox" ><label for="6e06655d-2a81-4ed6-b2ac-7b48ca85931a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b48a0ed-5b40-4b8d-bc1f-747dcde7a935" type="checkbox" ><label for="8b48a0ed-5b40-4b8d-bc1f-747dcde7a935" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b449f92-a6a5-4e4d-a191-9b6bc40c0bbd" type="checkbox" ><label for="9b449f92-a6a5-4e4d-a191-9b6bc40c0bbd" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
