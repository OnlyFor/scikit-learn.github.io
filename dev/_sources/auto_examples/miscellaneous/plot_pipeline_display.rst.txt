
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 {color: black;background-color: white;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 pre{padding: 0;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-toggleable {background-color: white;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-item {z-index: 1;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-parallel-item:only-child::after {width: 0;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-1e6b8a39-853c-471c-a443-32e40e8fb751 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1e6b8a39-853c-471c-a443-32e40e8fb751" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e2597ec6-c933-478f-9918-7df9f7f49ca4" type="checkbox" ><label for="e2597ec6-c933-478f-9918-7df9f7f49ca4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6820ebe-3f19-4255-ae6b-c3b11e818aa6" type="checkbox" ><label for="d6820ebe-3f19-4255-ae6b-c3b11e818aa6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a82d0a2-505c-4824-bf11-0e02cfd7f538" type="checkbox" ><label for="4a82d0a2-505c-4824-bf11-0e02cfd7f538" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e {color: black;background-color: white;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e pre{padding: 0;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-toggleable {background-color: white;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-estimator:hover {background-color: #d4ebff;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-item {z-index: 1;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-parallel-item:only-child::after {width: 0;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ab39779f-f93f-4a37-8220-f01f24f2a89e div.sk-text-repr-fallback {display: none;}</style><div id="sk-ab39779f-f93f-4a37-8220-f01f24f2a89e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="907d63f4-e52b-45ed-ad26-b56e776bfde0" type="checkbox" ><label for="907d63f4-e52b-45ed-ad26-b56e776bfde0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ecf58070-e21c-48dc-b2c1-91df0b620fcb" type="checkbox" ><label for="ecf58070-e21c-48dc-b2c1-91df0b620fcb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3699f01f-0da7-41bc-89bf-a2e86184775e" type="checkbox" ><label for="3699f01f-0da7-41bc-89bf-a2e86184775e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="755f0457-8768-4590-83ac-6743a8687095" type="checkbox" ><label for="755f0457-8768-4590-83ac-6743a8687095" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fef976b4-725b-48b4-919b-8332c4459ef4 {color: black;background-color: white;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 pre{padding: 0;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-toggleable {background-color: white;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-item {z-index: 1;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-parallel-item:only-child::after {width: 0;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fef976b4-725b-48b4-919b-8332c4459ef4 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fef976b4-725b-48b4-919b-8332c4459ef4" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f55b3a9b-68f1-4ad0-9325-1254a7859748" type="checkbox" ><label for="f55b3a9b-68f1-4ad0-9325-1254a7859748" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3387fdf-5631-4ace-a33c-d65649c14b06" type="checkbox" ><label for="b3387fdf-5631-4ace-a33c-d65649c14b06" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf5f8965-f013-4c00-be83-ba059e291ba8" type="checkbox" ><label for="cf5f8965-f013-4c00-be83-ba059e291ba8" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d {color: black;background-color: white;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d pre{padding: 0;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-toggleable {background-color: white;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-estimator:hover {background-color: #d4ebff;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-item {z-index: 1;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-parallel-item:only-child::after {width: 0;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d div.sk-text-repr-fallback {display: none;}</style><div id="sk-9efdc9cb-eecd-4ae5-a0a4-22b08029b67d" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a81c5ffd-92c4-4f0e-b1dc-4f6305604eb9" type="checkbox" ><label for="a81c5ffd-92c4-4f0e-b1dc-4f6305604eb9" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c7d3b0dd-81d5-4ee6-9f3d-8097b00e8f0e" type="checkbox" ><label for="c7d3b0dd-81d5-4ee6-9f3d-8097b00e8f0e" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7bb7432-644d-495f-bab4-62cb48a2c623" type="checkbox" ><label for="a7bb7432-644d-495f-bab4-62cb48a2c623" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c01214e-fad6-447e-94de-18a41500d033" type="checkbox" ><label for="9c01214e-fad6-447e-94de-18a41500d033" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a93dfb9e-5a6b-42dc-8abe-65fdcd103acb" type="checkbox" ><label for="a93dfb9e-5a6b-42dc-8abe-65fdcd103acb" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="385d5582-ccb1-453d-b775-ff3f5f296801" type="checkbox" ><label for="385d5582-ccb1-453d-b775-ff3f5f296801" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6c41216-6e99-41d8-a134-0398406b0d8d" type="checkbox" ><label for="d6c41216-6e99-41d8-a134-0398406b0d8d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d0b960c-dd29-48d7-a33b-c52bb1187027" type="checkbox" ><label for="0d0b960c-dd29-48d7-a33b-c52bb1187027" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5efc5530-edd4-4c19-a994-0da94c19c22f" type="checkbox" ><label for="5efc5530-edd4-4c19-a994-0da94c19c22f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 {color: black;background-color: white;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 pre{padding: 0;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-toggleable {background-color: white;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-estimator:hover {background-color: #d4ebff;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-item {z-index: 1;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-parallel-item:only-child::after {width: 0;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110 div.sk-text-repr-fallback {display: none;}</style><div id="sk-ecd51e6f-33f9-4122-b3a5-b19dd50d6110" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5796cab8-9fd6-470d-988c-a47f364895fe" type="checkbox" ><label for="5796cab8-9fd6-470d-988c-a47f364895fe" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4dab5c11-dc3a-4b4b-b760-c1ea31477d0f" type="checkbox" ><label for="4dab5c11-dc3a-4b4b-b760-c1ea31477d0f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1de3bdb-c6d4-45bb-a49b-89ce18ac4aee" type="checkbox" ><label for="d1de3bdb-c6d4-45bb-a49b-89ce18ac4aee" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4269cd8-f95f-46f9-ac19-0f90f8fc7936" type="checkbox" ><label for="f4269cd8-f95f-46f9-ac19-0f90f8fc7936" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a410858-d82b-4189-851d-54a90e61053a" type="checkbox" ><label for="8a410858-d82b-4189-851d-54a90e61053a" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cb0df96e-7cf8-4cd6-a010-d7c6cf52b159" type="checkbox" ><label for="cb0df96e-7cf8-4cd6-a010-d7c6cf52b159" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ef037b45-58c6-4398-beab-e5fb486d1324" type="checkbox" ><label for="ef037b45-58c6-4398-beab-e5fb486d1324" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bae034b0-f0a2-4305-a6e4-f8c99d8c0c0a" type="checkbox" ><label for="bae034b0-f0a2-4305-a6e4-f8c99d8c0c0a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7744e33f-eb02-475a-9c50-6aa70f222da6" type="checkbox" ><label for="7744e33f-eb02-475a-9c50-6aa70f222da6" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.072 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
