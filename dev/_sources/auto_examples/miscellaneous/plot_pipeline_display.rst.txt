
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 {color: black;background-color: white;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 pre{padding: 0;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-toggleable {background-color: white;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-estimator:hover {background-color: #d4ebff;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-item {z-index: 1;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-parallel-item:only-child::after {width: 0;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-88b1c616-37ee-4655-9a64-64bda5b3f298 div.sk-text-repr-fallback {display: none;}</style><div id="sk-88b1c616-37ee-4655-9a64-64bda5b3f298" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cbd3b939-0e9a-4989-9b74-b49dccf97f3f" type="checkbox" ><label for="cbd3b939-0e9a-4989-9b74-b49dccf97f3f" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e12f702-a062-4249-83df-5491819f5d6e" type="checkbox" ><label for="3e12f702-a062-4249-83df-5491819f5d6e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="17719310-8efe-4cf0-ae7e-c7c1d2c99a5c" type="checkbox" ><label for="17719310-8efe-4cf0-ae7e-c7c1d2c99a5c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a6da5461-1539-40bd-b305-a50f92696114 {color: black;background-color: white;}#sk-a6da5461-1539-40bd-b305-a50f92696114 pre{padding: 0;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-toggleable {background-color: white;}#sk-a6da5461-1539-40bd-b305-a50f92696114 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a6da5461-1539-40bd-b305-a50f92696114 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a6da5461-1539-40bd-b305-a50f92696114 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a6da5461-1539-40bd-b305-a50f92696114 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a6da5461-1539-40bd-b305-a50f92696114 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6da5461-1539-40bd-b305-a50f92696114 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-item {z-index: 1;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-parallel-item:only-child::after {width: 0;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a6da5461-1539-40bd-b305-a50f92696114 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a6da5461-1539-40bd-b305-a50f92696114" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="27233cb5-8148-4e0a-a03e-aef1834e7c8b" type="checkbox" ><label for="27233cb5-8148-4e0a-a03e-aef1834e7c8b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce61120b-326f-4a88-bb70-5c6ffbc16afc" type="checkbox" ><label for="ce61120b-326f-4a88-bb70-5c6ffbc16afc" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28b5b97c-db00-4c99-b512-2e469a250145" type="checkbox" ><label for="28b5b97c-db00-4c99-b512-2e469a250145" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="acba0c70-acef-40b8-8138-2af2d8484c74" type="checkbox" ><label for="acba0c70-acef-40b8-8138-2af2d8484c74" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 {color: black;background-color: white;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 pre{padding: 0;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-toggleable {background-color: white;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-item {z-index: 1;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-parallel-item:only-child::after {width: 0;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-490b2b9d-fda4-4c00-ae60-41a2db3548d3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59e4ebf4-2876-4832-a7ad-8f9f961d43b6" type="checkbox" ><label for="59e4ebf4-2876-4832-a7ad-8f9f961d43b6" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c473d64-d8c2-4000-b7f6-c954cdfa53ba" type="checkbox" ><label for="1c473d64-d8c2-4000-b7f6-c954cdfa53ba" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee20eeb4-199d-4f33-9873-231eb7baf817" type="checkbox" ><label for="ee20eeb4-199d-4f33-9873-231eb7baf817" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf {color: black;background-color: white;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf pre{padding: 0;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-toggleable {background-color: white;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-estimator:hover {background-color: #d4ebff;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-item {z-index: 1;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-parallel-item:only-child::after {width: 0;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf div.sk-text-repr-fallback {display: none;}</style><div id="sk-07faa584-8e8a-43ba-ae7f-ff1c0aa61bdf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="64b88e94-4218-41ad-9486-bc0842c866e4" type="checkbox" ><label for="64b88e94-4218-41ad-9486-bc0842c866e4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2993cab1-5a71-44da-b5f9-71d36b8ebd84" type="checkbox" ><label for="2993cab1-5a71-44da-b5f9-71d36b8ebd84" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3afc9e9-5ec4-4f40-954d-4bcaf4a1f573" type="checkbox" ><label for="b3afc9e9-5ec4-4f40-954d-4bcaf4a1f573" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7260fbd2-37b5-4632-a2b9-e25ac2e7b19d" type="checkbox" ><label for="7260fbd2-37b5-4632-a2b9-e25ac2e7b19d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2a855e0-189b-4f6a-bd6b-cc4f2a8d9f5f" type="checkbox" ><label for="f2a855e0-189b-4f6a-bd6b-cc4f2a8d9f5f" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0957ce95-2706-4c27-882f-550a623c021b" type="checkbox" ><label for="0957ce95-2706-4c27-882f-550a623c021b" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e1ac1714-54e2-48ea-a211-7f628f344539" type="checkbox" ><label for="e1ac1714-54e2-48ea-a211-7f628f344539" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dadb1320-bb7e-4db3-8edb-c5dbbba36de3" type="checkbox" ><label for="dadb1320-bb7e-4db3-8edb-c5dbbba36de3" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4580ad35-a207-4bc1-8e33-02efe0c1bce3" type="checkbox" ><label for="4580ad35-a207-4bc1-8e33-02efe0c1bce3" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 {color: black;background-color: white;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 pre{padding: 0;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-toggleable {background-color: white;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-item {z-index: 1;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-parallel-item:only-child::after {width: 0;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b513999e-aa73-4316-adf8-51d6ed87bfe6 div.sk-text-repr-fallback {display: none;}</style><div id="sk-b513999e-aa73-4316-adf8-51d6ed87bfe6" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ae2c3c3-3781-4ea3-b07e-d6c56880985e" type="checkbox" ><label for="6ae2c3c3-3781-4ea3-b07e-d6c56880985e" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5d4de2a6-f160-43d9-aa74-853912203345" type="checkbox" ><label for="5d4de2a6-f160-43d9-aa74-853912203345" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4f8570b2-c928-40c8-b8b7-6cea926ae79c" type="checkbox" ><label for="4f8570b2-c928-40c8-b8b7-6cea926ae79c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="72291dd8-5903-4cd2-a5f5-3eea28ce045d" type="checkbox" ><label for="72291dd8-5903-4cd2-a5f5-3eea28ce045d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="65bb8114-6d61-46bf-a54c-6730fd018bdd" type="checkbox" ><label for="65bb8114-6d61-46bf-a54c-6730fd018bdd" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ee6c362c-b439-4475-b7c4-185d59573a3f" type="checkbox" ><label for="ee6c362c-b439-4475-b7c4-185d59573a3f" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9483de47-5f06-46c3-92a2-f1e03672084c" type="checkbox" ><label for="9483de47-5f06-46c3-92a2-f1e03672084c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="474e8f98-93bc-4693-888f-f12b6ebe7750" type="checkbox" ><label for="474e8f98-93bc-4693-888f-f12b6ebe7750" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3c0602b-9346-43af-9831-f3be956ab865" type="checkbox" ><label for="b3c0602b-9346-43af-9831-f3be956ab865" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
