
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 {color: black;background-color: white;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 pre{padding: 0;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-toggleable {background-color: white;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-item {z-index: 1;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-parallel-item:only-child::after {width: 0;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-61ee33a5-965c-4810-9ec2-5e2552b083b1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-61ee33a5-965c-4810-9ec2-5e2552b083b1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="394e10b8-8182-41f7-8a84-77a35dba7ccd" type="checkbox" ><label for="394e10b8-8182-41f7-8a84-77a35dba7ccd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="38f69f5e-bfca-493d-b3ba-c06d0a05c670" type="checkbox" ><label for="38f69f5e-bfca-493d-b3ba-c06d0a05c670" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="98ae8530-b92e-4632-ac0e-9c41a050dbbb" type="checkbox" ><label for="98ae8530-b92e-4632-ac0e-9c41a050dbbb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc {color: black;background-color: white;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc pre{padding: 0;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-toggleable {background-color: white;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-estimator:hover {background-color: #d4ebff;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-item {z-index: 1;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-parallel-item:only-child::after {width: 0;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc div.sk-text-repr-fallback {display: none;}</style><div id="sk-e8589e23-094a-48a4-82aa-6a635ce6cbdc" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f0bdfb6-b1aa-4105-b5f0-ea181a70414a" type="checkbox" ><label for="6f0bdfb6-b1aa-4105-b5f0-ea181a70414a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c61eab4e-1016-4004-a624-21f3e8ea007d" type="checkbox" ><label for="c61eab4e-1016-4004-a624-21f3e8ea007d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6ec90a2-09e3-4367-aa80-26979cf882ad" type="checkbox" ><label for="d6ec90a2-09e3-4367-aa80-26979cf882ad" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f20766ba-70be-4760-8cd9-9186addce56f" type="checkbox" ><label for="f20766ba-70be-4760-8cd9-9186addce56f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f {color: black;background-color: white;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f pre{padding: 0;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-toggleable {background-color: white;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-estimator:hover {background-color: #d4ebff;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-item {z-index: 1;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-parallel-item:only-child::after {width: 0;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f div.sk-text-repr-fallback {display: none;}</style><div id="sk-a2e82247-324b-45c3-bcc8-aca3ce6b432f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2cf98d5-abc4-4f45-9f28-8afbbc27c29a" type="checkbox" ><label for="f2cf98d5-abc4-4f45-9f28-8afbbc27c29a" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e972c725-264b-46dc-a705-420f5caf9707" type="checkbox" ><label for="e972c725-264b-46dc-a705-420f5caf9707" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1c9477f8-36f8-401f-9e69-17aed095d8a1" type="checkbox" ><label for="1c9477f8-36f8-401f-9e69-17aed095d8a1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 {color: black;background-color: white;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 pre{padding: 0;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-toggleable {background-color: white;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-item {z-index: 1;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-parallel-item:only-child::after {width: 0;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6751b57a-8d70-44d8-8f3d-8e01a3fa0072" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8652df7b-e384-4f10-8a6a-844688b55267" type="checkbox" ><label for="8652df7b-e384-4f10-8a6a-844688b55267" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e5528870-4224-4e86-84c0-ae3525e1512a" type="checkbox" ><label for="e5528870-4224-4e86-84c0-ae3525e1512a" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b3a7d3f1-6712-4fc0-b64f-159750587153" type="checkbox" ><label for="b3a7d3f1-6712-4fc0-b64f-159750587153" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="be0fc6f8-68c9-4af6-874a-69c8d6be954b" type="checkbox" ><label for="be0fc6f8-68c9-4af6-874a-69c8d6be954b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="28b583fd-3201-4e27-8d82-27cebf391250" type="checkbox" ><label for="28b583fd-3201-4e27-8d82-27cebf391250" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5e6ef9f1-e5ac-488d-bb43-f7f7484ea6df" type="checkbox" ><label for="5e6ef9f1-e5ac-488d-bb43-f7f7484ea6df" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9c164b79-f563-4d70-9014-5eef92bbc7b2" type="checkbox" ><label for="9c164b79-f563-4d70-9014-5eef92bbc7b2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30cc3232-4be1-456b-afd4-70da73fc9049" type="checkbox" ><label for="30cc3232-4be1-456b-afd4-70da73fc9049" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7118a052-f6f7-4bdf-afde-5a68a8d3ff3a" type="checkbox" ><label for="7118a052-f6f7-4bdf-afde-5a68a8d3ff3a" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e {color: black;background-color: white;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e pre{padding: 0;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-toggleable {background-color: white;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-estimator:hover {background-color: #d4ebff;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-item {z-index: 1;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-parallel-item:only-child::after {width: 0;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e div.sk-text-repr-fallback {display: none;}</style><div id="sk-fa47510e-65cc-4cf4-824e-bfc7a5145e3e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="018e82b6-6b6a-4d92-b92b-5a6e096d2baa" type="checkbox" ><label for="018e82b6-6b6a-4d92-b92b-5a6e096d2baa" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5a6ab8a-2b78-4450-943e-40ee17f15b8f" type="checkbox" ><label for="c5a6ab8a-2b78-4450-943e-40ee17f15b8f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9e6e30a-b9c9-465d-97e2-5ff50871313c" type="checkbox" ><label for="e9e6e30a-b9c9-465d-97e2-5ff50871313c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="06d1a458-3a62-4243-a3e4-b50b354bfd44" type="checkbox" ><label for="06d1a458-3a62-4243-a3e4-b50b354bfd44" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa24fb58-a34b-48c4-80e8-1c91009a9b28" type="checkbox" ><label for="fa24fb58-a34b-48c4-80e8-1c91009a9b28" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aea5e69c-a18d-408b-9e3d-27a44f3846fb" type="checkbox" ><label for="aea5e69c-a18d-408b-9e3d-27a44f3846fb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd4717bc-99db-40ee-8fa6-8bcf43fb4e4e" type="checkbox" ><label for="cd4717bc-99db-40ee-8fa6-8bcf43fb4e4e" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="73a495c5-2a3e-4990-a4c1-910eebe1c7e5" type="checkbox" ><label for="73a495c5-2a3e-4990-a4c1-910eebe1c7e5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3f831438-f170-4b51-9c4b-7f89b3bdfb53" type="checkbox" ><label for="3f831438-f170-4b51-9c4b-7f89b3bdfb53" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.076 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
