
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 {color: black;background-color: white;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 pre{padding: 0;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-toggleable {background-color: white;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-estimator:hover {background-color: #d4ebff;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-item {z-index: 1;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-parallel-item:only-child::after {width: 0;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-container {display: inline-block;position: relative;}#sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16 div.sk-text-repr-fallback {display: none;}</style><div id="sk-1bee8bf9-e328-44a7-9407-c0cfc8ca2a16" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ce717750-bf36-4b48-88d2-364d2f4591df" type="checkbox" ><label class="sk-toggleable__label" for="ce717750-bf36-4b48-88d2-364d2f4591df">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6e058648-3745-47ad-9c32-87de422078cf" type="checkbox" ><label class="sk-toggleable__label" for="6e058648-3745-47ad-9c32-87de422078cf">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2696097b-b852-4a14-b980-1920bbdbd038" type="checkbox" ><label class="sk-toggleable__label" for="2696097b-b852-4a14-b980-1920bbdbd038">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0fa169cb-84e5-402b-b62b-da620674dcae {color: black;background-color: white;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae pre{padding: 0;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-toggleable {background-color: white;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-estimator:hover {background-color: #d4ebff;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-item {z-index: 1;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-parallel-item:only-child::after {width: 0;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-container {display: inline-block;position: relative;}#sk-0fa169cb-84e5-402b-b62b-da620674dcae div.sk-text-repr-fallback {display: none;}</style><div id="sk-0fa169cb-84e5-402b-b62b-da620674dcae" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7d698431-4962-458a-81d7-eb02fed0ded8" type="checkbox" ><label class="sk-toggleable__label" for="7d698431-4962-458a-81d7-eb02fed0ded8">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('standard_scaler', StandardScaler()),
                    ('polynomial', PolynomialFeatures(degree=3)),
                    ('classifier', LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1433ac79-900e-4286-9848-e87dc894bcfc" type="checkbox" ><label class="sk-toggleable__label" for="1433ac79-900e-4286-9848-e87dc894bcfc">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="22f75090-99e2-4323-8926-00f5f5607b06" type="checkbox" ><label class="sk-toggleable__label" for="22f75090-99e2-4323-8926-00f5f5607b06">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cd256a20-a432-4c91-bb7a-39053b06f5f3" type="checkbox" ><label class="sk-toggleable__label" for="cd256a20-a432-4c91-bb7a-39053b06f5f3">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 {color: black;background-color: white;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 pre{padding: 0;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-toggleable {background-color: white;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-estimator:hover {background-color: #d4ebff;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-item {z-index: 1;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-parallel-item:only-child::after {width: 0;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-container {display: inline-block;position: relative;}#sk-f59a843b-ba2d-452c-947c-9356ca5fdc64 div.sk-text-repr-fallback {display: none;}</style><div id="sk-f59a843b-ba2d-452c-947c-9356ca5fdc64" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2c559419-37e1-4be3-b014-4c91c1ca839d" type="checkbox" ><label class="sk-toggleable__label" for="2c559419-37e1-4be3-b014-4c91c1ca839d">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('reduce_dim', PCA(n_components=4)),
                    ('classifier', SVC(kernel='linear'))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3a268558-7e6c-4db5-b5e1-197313e2fcbc" type="checkbox" ><label class="sk-toggleable__label" for="3a268558-7e6c-4db5-b5e1-197313e2fcbc">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a969a2b5-d769-4a71-8c1a-fa40140a236a" type="checkbox" ><label class="sk-toggleable__label" for="a969a2b5-d769-4a71-8c1a-fa40140a236a">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel='linear')</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-8f10c6fa-f098-4099-8315-fc2292491be0 {color: black;background-color: white;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 pre{padding: 0;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-toggleable {background-color: white;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-item {z-index: 1;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-parallel-item:only-child::after {width: 0;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-container {display: inline-block;position: relative;}#sk-8f10c6fa-f098-4099-8315-fc2292491be0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-8f10c6fa-f098-4099-8315-fc2292491be0" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4a00487b-4945-4687-a267-caf7957b23fb" type="checkbox" ><label class="sk-toggleable__label" for="4a00487b-4945-4687-a267-caf7957b23fb">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[('columntransformer',
                     ColumnTransformer(transformers=[('categorical',
                                                      Pipeline(steps=[('imputation_constant',
                                                                       SimpleImputer(fill_value='missing',
                                                                                     strategy='constant')),
                                                                      ('onehot',
                                                                       OneHotEncoder(handle_unknown='ignore'))]),
                                                      ['state', 'gender']),
                                                     ('numerical',
                                                      Pipeline(steps=[('imputation_mean',
                                                                       SimpleImputer()),
                                                                      ('scaler',
                                                                       StandardScaler())]),
                                                      ['age', 'weight'])])),
                    ('logisticregression', LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d114c1e-7b8b-4b45-b58a-ecbbbcbf9361" type="checkbox" ><label class="sk-toggleable__label" for="2d114c1e-7b8b-4b45-b58a-ecbbbcbf9361">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1aa83d17-ed3b-421a-995c-2412e5768e5b" type="checkbox" ><label class="sk-toggleable__label" for="1aa83d17-ed3b-421a-995c-2412e5768e5b">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4c4afaa2-c3c2-41c8-b359-fbb5977fae7b" type="checkbox" ><label class="sk-toggleable__label" for="4c4afaa2-c3c2-41c8-b359-fbb5977fae7b">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ccaa3f7-3ce2-481d-9d16-963f6b74c59c" type="checkbox" ><label class="sk-toggleable__label" for="2ccaa3f7-3ce2-481d-9d16-963f6b74c59c">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e980ebb4-e951-4a53-8fb5-ce7213dd7659" type="checkbox" ><label class="sk-toggleable__label" for="e980ebb4-e951-4a53-8fb5-ce7213dd7659">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8caea89a-f3fb-4a68-9a1e-f08461deca36" type="checkbox" ><label class="sk-toggleable__label" for="8caea89a-f3fb-4a68-9a1e-f08461deca36">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43dfcab2-1b08-4a89-a603-efa96caa0eca" type="checkbox" ><label class="sk-toggleable__label" for="43dfcab2-1b08-4a89-a603-efa96caa0eca">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a7bfe6c-7677-4482-ae1c-1a4811cd478a" type="checkbox" ><label class="sk-toggleable__label" for="6a7bfe6c-7677-4482-ae1c-1a4811cd478a">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 {color: black;background-color: white;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 pre{padding: 0;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-toggleable {background-color: white;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-estimator:hover {background-color: #d4ebff;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-item {z-index: 1;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-parallel-item:only-child::after {width: 0;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-container {display: inline-block;position: relative;}#sk-3947cf1b-55a5-48ab-8169-2bc9159c6325 div.sk-text-repr-fallback {display: none;}</style><div id="sk-3947cf1b-55a5-48ab-8169-2bc9159c6325" class"sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ac83a67b-1947-409d-bd96-1279a65d09b2" type="checkbox" ><label class="sk-toggleable__label" for="ac83a67b-1947-409d-bd96-1279a65d09b2">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[('preprocessor',
                                            ColumnTransformer(transformers=[('categorical',
                                                                             Pipeline(steps=[('imputation_constant',
                                                                                              SimpleImputer(fill_value='missing',
                                                                                                            strategy='constant')),
                                                                                             ('onehot',
                                                                                              OneHotEncoder(handle_unknown='ignore'))]),
                                                                             ['state',
                                                                              'gender']),
                                                                            ('numerical',
                                                                             Pipeline(steps=[('imputation_mean',
                                                                                              SimpleImputer()),
                                                                                             ('scaler',
                                                                                              StandardScaler())]),
                                                                             ['age',
                                                                              'weight'])])),
                                           ('classifier',
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={'classifier__criterion': ['gini', 'entropy'],
                             'classifier__max_depth': [4, 5, 6, 7, 8],
                             'classifier__max_features': ['auto', 'sqrt', 'log2'],
                             'classifier__n_estimators': [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fa983610-e421-4458-80a0-0f345aa2a121" type="checkbox" ><label class="sk-toggleable__label" for="fa983610-e421-4458-80a0-0f345aa2a121">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[('categorical',
                                     Pipeline(steps=[('imputation_constant',
                                                      SimpleImputer(fill_value='missing',
                                                                    strategy='constant')),
                                                     ('onehot',
                                                      OneHotEncoder(handle_unknown='ignore'))]),
                                     ['state', 'gender']),
                                    ('numerical',
                                     Pipeline(steps=[('imputation_mean',
                                                      SimpleImputer()),
                                                     ('scaler', StandardScaler())]),
                                     ['age', 'weight'])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="825d0e39-a44c-4401-9c13-c97f473cd1b8" type="checkbox" ><label class="sk-toggleable__label" for="825d0e39-a44c-4401-9c13-c97f473cd1b8">categorical</label><div class="sk-toggleable__content"><pre>['state', 'gender']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="20ad82b3-b421-49bd-aa7f-c35d3d770b94" type="checkbox" ><label class="sk-toggleable__label" for="20ad82b3-b421-49bd-aa7f-c35d3d770b94">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value='missing', strategy='constant')</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4ef47280-1de4-46e0-868b-7662417231d7" type="checkbox" ><label class="sk-toggleable__label" for="4ef47280-1de4-46e0-868b-7662417231d7">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown='ignore')</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cff6454e-9637-4023-b415-b438f3bc061d" type="checkbox" ><label class="sk-toggleable__label" for="cff6454e-9637-4023-b415-b438f3bc061d">numerical</label><div class="sk-toggleable__content"><pre>['age', 'weight']</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c4fb255e-b544-4649-874f-350f8bc4eb40" type="checkbox" ><label class="sk-toggleable__label" for="c4fb255e-b544-4649-874f-350f8bc4eb40">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="519917ef-2da9-4af2-862e-a14fabb19b88" type="checkbox" ><label class="sk-toggleable__label" for="519917ef-2da9-4af2-862e-a14fabb19b88">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7267faa9-dc0b-4191-bc66-805363ad3785" type="checkbox" ><label class="sk-toggleable__label" for="7267faa9-dc0b-4191-bc66-805363ad3785">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.108 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
