
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0ba9471-7d00-4487-87a8-174786e12d73 {color: black;background-color: white;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 pre{padding: 0;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-toggleable {background-color: white;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-item {z-index: 1;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-parallel-item:only-child::after {width: 0;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0ba9471-7d00-4487-87a8-174786e12d73 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0ba9471-7d00-4487-87a8-174786e12d73" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a4be77d-1e9c-4c1f-9801-c5f75ba1200b" type="checkbox" ><label for="2a4be77d-1e9c-4c1f-9801-c5f75ba1200b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9456cf40-7037-4b21-aeb4-f980830a6853" type="checkbox" ><label for="9456cf40-7037-4b21-aeb4-f980830a6853" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8f98c80-405b-4d5f-893c-030458004819" type="checkbox" ><label for="a8f98c80-405b-4d5f-893c-030458004819" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e {color: black;background-color: white;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e pre{padding: 0;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-toggleable {background-color: white;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-estimator:hover {background-color: #d4ebff;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-item {z-index: 1;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-parallel-item:only-child::after {width: 0;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e div.sk-text-repr-fallback {display: none;}</style><div id="sk-a0a2b5c2-6b3f-445f-b7a6-730b8ef9dc1e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a6d63e9a-8c08-4b42-a04a-fd1e8cfe6acd" type="checkbox" ><label for="a6d63e9a-8c08-4b42-a04a-fd1e8cfe6acd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a04b8087-0d70-45c0-9a02-24a766527ac2" type="checkbox" ><label for="a04b8087-0d70-45c0-9a02-24a766527ac2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb990e6e-6f0e-4714-b755-62abda9d93cf" type="checkbox" ><label for="fb990e6e-6f0e-4714-b755-62abda9d93cf" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="69de7fad-1d56-4d27-a3d5-d8986d3d31b6" type="checkbox" ><label for="69de7fad-1d56-4d27-a3d5-d8986d3d31b6" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f {color: black;background-color: white;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f pre{padding: 0;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-toggleable {background-color: white;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-estimator:hover {background-color: #d4ebff;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-item {z-index: 1;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-parallel-item:only-child::after {width: 0;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f div.sk-text-repr-fallback {display: none;}</style><div id="sk-b0bf9d72-78d3-4eda-b179-5d63c339ba0f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6ce7add-1974-4693-8561-908932491919" type="checkbox" ><label for="e6ce7add-1974-4693-8561-908932491919" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0566ad56-a9f5-453a-89fa-b56d95eaee0a" type="checkbox" ><label for="0566ad56-a9f5-453a-89fa-b56d95eaee0a" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5df02046-2742-4e08-b1cd-080f88f22306" type="checkbox" ><label for="5df02046-2742-4e08-b1cd-080f88f22306" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 {color: black;background-color: white;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 pre{padding: 0;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-toggleable {background-color: white;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-item {z-index: 1;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-parallel-item:only-child::after {width: 0;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e9be3f20-9293-4826-a93a-ceb4fa1ad805" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="83829b29-a0d8-4757-912d-d7efee66fc1c" type="checkbox" ><label for="83829b29-a0d8-4757-912d-d7efee66fc1c" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30593f28-581b-4428-ab14-726ab0232619" type="checkbox" ><label for="30593f28-581b-4428-ab14-726ab0232619" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f1f7236-2ddc-4936-a32d-7c7e5f2be42c" type="checkbox" ><label for="8f1f7236-2ddc-4936-a32d-7c7e5f2be42c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="075faf71-275a-481e-a2c2-c672242580e8" type="checkbox" ><label for="075faf71-275a-481e-a2c2-c672242580e8" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d95ad1de-428c-438b-8ed0-8b244fe700dc" type="checkbox" ><label for="d95ad1de-428c-438b-8ed0-8b244fe700dc" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bcd8fc52-973d-45c5-bcd0-e4298ec3b050" type="checkbox" ><label for="bcd8fc52-973d-45c5-bcd0-e4298ec3b050" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="131e2b12-e417-44db-843f-2e5ab921f3db" type="checkbox" ><label for="131e2b12-e417-44db-843f-2e5ab921f3db" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d3cd43e7-6c95-48f0-b14f-50e3fe4a7d38" type="checkbox" ><label for="d3cd43e7-6c95-48f0-b14f-50e3fe4a7d38" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f4ba60c-e170-4d7e-a742-1d906d37ecba" type="checkbox" ><label for="7f4ba60c-e170-4d7e-a742-1d906d37ecba" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac {color: black;background-color: white;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac pre{padding: 0;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-toggleable {background-color: white;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-estimator:hover {background-color: #d4ebff;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-item {z-index: 1;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-parallel-item:only-child::after {width: 0;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-d80283fc-213f-4a34-b673-f0c7a12f2aac div.sk-text-repr-fallback {display: none;}</style><div id="sk-d80283fc-213f-4a34-b673-f0c7a12f2aac" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c3977e04-d638-4a77-9edc-7b39c96af6ed" type="checkbox" ><label for="c3977e04-d638-4a77-9edc-7b39c96af6ed" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6f578ae0-ac94-4072-9b8e-f131c8144d3a" type="checkbox" ><label for="6f578ae0-ac94-4072-9b8e-f131c8144d3a" class="sk-toggleable__label sk-toggleable__label-arrow">estimator: Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;classifier&#x27;, RandomForestClassifier())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6ecb36a0-76e3-4c3e-9f2a-fe0223c5adeb" type="checkbox" ><label for="6ecb36a0-76e3-4c3e-9f2a-fe0223c5adeb" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2ced8dc-1105-4bd9-a301-ac6302e1dcc1" type="checkbox" ><label for="f2ced8dc-1105-4bd9-a301-ac6302e1dcc1" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ad8ef0fd-2fef-4cc7-99ed-2b52bef6c43f" type="checkbox" ><label for="ad8ef0fd-2fef-4cc7-99ed-2b52bef6c43f" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c2b4dcba-7ab2-4864-a6b8-ec0b62715f55" type="checkbox" ><label for="c2b4dcba-7ab2-4864-a6b8-ec0b62715f55" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5c1d938a-cd49-4e3c-909d-a295ee7e5b86" type="checkbox" ><label for="5c1d938a-cd49-4e3c-909d-a295ee7e5b86" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8843938c-708a-4eca-86f5-55a7cfacaf04" type="checkbox" ><label for="8843938c-708a-4eca-86f5-55a7cfacaf04" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cfa2cdb4-fa65-41ed-933d-6af8dcf1c4f4" type="checkbox" ><label for="cfa2cdb4-fa65-41ed-933d-6af8dcf1c4f4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6567528-667a-4dfb-8ced-2962ff302860" type="checkbox" ><label for="f6567528-667a-4dfb-8ced-2962ff302860" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.087 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
