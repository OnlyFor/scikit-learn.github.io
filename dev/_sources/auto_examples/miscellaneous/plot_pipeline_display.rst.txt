
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad {color: black;background-color: white;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad pre{padding: 0;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-toggleable {background-color: white;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-estimator:hover {background-color: #d4ebff;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-item {z-index: 1;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-parallel-item:only-child::after {width: 0;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad div.sk-text-repr-fallback {display: none;}</style><div id="sk-bab81ce9-0f2a-49d3-82b9-9990fff4afad" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dc425a5b-45ba-4835-9e92-109364b03fe4" type="checkbox" ><label for="dc425a5b-45ba-4835-9e92-109364b03fe4" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cc67627-f1e0-413c-89ce-ecb84f4470d7" type="checkbox" ><label for="1cc67627-f1e0-413c-89ce-ecb84f4470d7" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f2b63e8f-382f-4bf6-b5ed-e87678e5b1e9" type="checkbox" ><label for="f2b63e8f-382f-4bf6-b5ed-e87678e5b1e9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-40555a15-78b8-4b23-94f4-3f1240201089 {color: black;background-color: white;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 pre{padding: 0;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-toggleable {background-color: white;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-estimator:hover {background-color: #d4ebff;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-item {z-index: 1;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-parallel-item:only-child::after {width: 0;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-40555a15-78b8-4b23-94f4-3f1240201089 div.sk-text-repr-fallback {display: none;}</style><div id="sk-40555a15-78b8-4b23-94f4-3f1240201089" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="de1f4af2-dc92-4f09-9aef-516a77772966" type="checkbox" ><label for="de1f4af2-dc92-4f09-9aef-516a77772966" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0b1a5a94-5bb0-4403-907f-523e9c4dee77" type="checkbox" ><label for="0b1a5a94-5bb0-4403-907f-523e9c4dee77" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6152cd1-c726-4dda-8819-208096496b81" type="checkbox" ><label for="e6152cd1-c726-4dda-8819-208096496b81" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0d05cc8f-54d4-4958-a83d-2c9389bcc477" type="checkbox" ><label for="0d05cc8f-54d4-4958-a83d-2c9389bcc477" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 {color: black;background-color: white;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 pre{padding: 0;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-toggleable {background-color: white;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-item {z-index: 1;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-parallel-item:only-child::after {width: 0;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-24300379-397b-4a9a-88a4-88ac0d5452d1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-24300379-397b-4a9a-88a4-88ac0d5452d1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5dc30038-cb28-476f-aa36-323e745af9bd" type="checkbox" ><label for="5dc30038-cb28-476f-aa36-323e745af9bd" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7aad71d2-3e2e-4414-8e4f-364444c59ad9" type="checkbox" ><label for="7aad71d2-3e2e-4414-8e4f-364444c59ad9" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3138e42e-1c88-463d-adf9-f53c8959adf8" type="checkbox" ><label for="3138e42e-1c88-463d-adf9-f53c8959adf8" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c96134a6-e28d-4818-815e-cbb11672dca0 {color: black;background-color: white;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 pre{padding: 0;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-toggleable {background-color: white;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-item {z-index: 1;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-parallel-item:only-child::after {width: 0;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c96134a6-e28d-4818-815e-cbb11672dca0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-c96134a6-e28d-4818-815e-cbb11672dca0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70ce16b6-f88d-4d07-91a2-87d5af1ccca0" type="checkbox" ><label for="70ce16b6-f88d-4d07-91a2-87d5af1ccca0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6a1516fd-ec8d-4a46-89b4-3850c286aada" type="checkbox" ><label for="6a1516fd-ec8d-4a46-89b4-3850c286aada" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b09e2a54-1eeb-4a11-a56c-170f0e78be46" type="checkbox" ><label for="b09e2a54-1eeb-4a11-a56c-170f0e78be46" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="59ef47a1-1795-421d-9ab7-50f11315338a" type="checkbox" ><label for="59ef47a1-1795-421d-9ab7-50f11315338a" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="90229ceb-06da-4fde-9714-ed92f21d3365" type="checkbox" ><label for="90229ceb-06da-4fde-9714-ed92f21d3365" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b74aaa1-6d2d-4ad9-ab06-6f4a7e5b19ce" type="checkbox" ><label for="5b74aaa1-6d2d-4ad9-ab06-6f4a7e5b19ce" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="76fa027b-c59f-40b2-9d14-b0cf19040925" type="checkbox" ><label for="76fa027b-c59f-40b2-9d14-b0cf19040925" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fabb905-aa29-4192-b51a-cce1d3b7cbeb" type="checkbox" ><label for="4fabb905-aa29-4192-b51a-cce1d3b7cbeb" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8b592d28-a7a9-4f08-94bb-c68bd14b09f7" type="checkbox" ><label for="8b592d28-a7a9-4f08-94bb-c68bd14b09f7" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 {color: black;background-color: white;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 pre{padding: 0;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-toggleable {background-color: white;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-item {z-index: 1;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-parallel-item:only-child::after {width: 0;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-a05192b3-3ce0-44bd-9666-96abec84fcf3 div.sk-text-repr-fallback {display: none;}</style><div id="sk-a05192b3-3ce0-44bd-9666-96abec84fcf3" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4fa2c6e7-67c7-463a-8a56-bdf39da0ad4a" type="checkbox" ><label for="4fa2c6e7-67c7-463a-8a56-bdf39da0ad4a" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="75b7cfc3-2530-4b84-8ac1-15a4df2ce45f" type="checkbox" ><label for="75b7cfc3-2530-4b84-8ac1-15a4df2ce45f" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02e601e5-500a-48c3-b39a-0d230c322dce" type="checkbox" ><label for="02e601e5-500a-48c3-b39a-0d230c322dce" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e90458d-1a75-4dc5-bd6d-38da0c6092d1" type="checkbox" ><label for="0e90458d-1a75-4dc5-bd6d-38da0c6092d1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="834e1e41-309b-4fc1-a3c2-1312c2ebda91" type="checkbox" ><label for="834e1e41-309b-4fc1-a3c2-1312c2ebda91" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7fcad2f2-35c1-4e30-9b17-499c3139d4dd" type="checkbox" ><label for="7fcad2f2-35c1-4e30-9b17-499c3139d4dd" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b6a5891d-7943-4ef0-939d-bc63ae9cb9cc" type="checkbox" ><label for="b6a5891d-7943-4ef0-939d-bc63ae9cb9cc" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e674e991-0cf3-4db8-9440-ecf146e8c665" type="checkbox" ><label for="e674e991-0cf3-4db8-9440-ecf146e8c665" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="31e4edc3-563b-428f-824a-d12a29d4948b" type="checkbox" ><label for="31e4edc3-563b-428f-824a-d12a29d4948b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
