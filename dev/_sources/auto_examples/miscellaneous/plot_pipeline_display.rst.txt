
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-696b1af1-dfcd-40e9-b538-51017cf24622 {color: black;background-color: white;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 pre{padding: 0;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-toggleable {background-color: white;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-estimator:hover {background-color: #d4ebff;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-item {z-index: 1;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-parallel-item:only-child::after {width: 0;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-696b1af1-dfcd-40e9-b538-51017cf24622 div.sk-text-repr-fallback {display: none;}</style><div id="sk-696b1af1-dfcd-40e9-b538-51017cf24622" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cadc7568-b388-421d-886d-613d38d220a0" type="checkbox" ><label for="cadc7568-b388-421d-886d-613d38d220a0" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3ba8c24-6e94-4867-b236-2bf69f38362e" type="checkbox" ><label for="f3ba8c24-6e94-4867-b236-2bf69f38362e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8a76ebb0-66aa-4b1c-b6c5-d377cec84f1f" type="checkbox" ><label for="8a76ebb0-66aa-4b1c-b6c5-d377cec84f1f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 {color: black;background-color: white;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 pre{padding: 0;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-toggleable {background-color: white;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-estimator:hover {background-color: #d4ebff;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-item {z-index: 1;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-parallel-item:only-child::after {width: 0;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0 div.sk-text-repr-fallback {display: none;}</style><div id="sk-cbc2bd21-ccca-4354-9728-fa1afcb8c3d0" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2bc4f55f-0528-4d54-9533-3dbcdff4e485" type="checkbox" ><label for="2bc4f55f-0528-4d54-9533-3dbcdff4e485" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="db687f7d-5e31-41bb-ad04-99d00096cf00" type="checkbox" ><label for="db687f7d-5e31-41bb-ad04-99d00096cf00" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36ed8aea-0bd4-43e4-b11d-d34660c95a4e" type="checkbox" ><label for="36ed8aea-0bd4-43e4-b11d-d34660c95a4e" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f77bf330-5205-432d-9520-4939f96590dc" type="checkbox" ><label for="f77bf330-5205-432d-9520-4939f96590dc" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f {color: black;background-color: white;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f pre{padding: 0;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-toggleable {background-color: white;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-estimator:hover {background-color: #d4ebff;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-item {z-index: 1;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-parallel-item:only-child::after {width: 0;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-29dfabbb-869e-4ad0-b24b-42de33bb566f div.sk-text-repr-fallback {display: none;}</style><div id="sk-29dfabbb-869e-4ad0-b24b-42de33bb566f" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2a012b2f-dddf-4c16-a157-e9ebbb00af1b" type="checkbox" ><label for="2a012b2f-dddf-4c16-a157-e9ebbb00af1b" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d75b295b-bdfc-4f0e-b4bf-ab7399752b49" type="checkbox" ><label for="d75b295b-bdfc-4f0e-b4bf-ab7399752b49" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="61a8dc9e-08f0-45c3-9bb7-3d8428d633d1" type="checkbox" ><label for="61a8dc9e-08f0-45c3-9bb7-3d8428d633d1" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 {color: black;background-color: white;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 pre{padding: 0;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-toggleable {background-color: white;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-estimator:hover {background-color: #d4ebff;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-item {z-index: 1;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-parallel-item:only-child::after {width: 0;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54 div.sk-text-repr-fallback {display: none;}</style><div id="sk-0bf47f7f-458d-42ae-aaf6-4cf626ef4d54" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b0003d9a-7043-43d3-a99a-d6a5deaaf9fc" type="checkbox" ><label for="b0003d9a-7043-43d3-a99a-d6a5deaaf9fc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0fd878a2-6a34-4f7c-95ba-aa2a8c09ae5d" type="checkbox" ><label for="0fd878a2-6a34-4f7c-95ba-aa2a8c09ae5d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="16922dfe-5391-4fb2-ba45-6da4376e897c" type="checkbox" ><label for="16922dfe-5391-4fb2-ba45-6da4376e897c" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf2a4344-26c1-4a38-8110-e113a76be2d1" type="checkbox" ><label for="bf2a4344-26c1-4a38-8110-e113a76be2d1" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ae1f7c2-6ef0-4c69-a9ed-4a97261d2b01" type="checkbox" ><label for="8ae1f7c2-6ef0-4c69-a9ed-4a97261d2b01" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f7424e37-d918-4b29-bc60-c902d7d9ccec" type="checkbox" ><label for="f7424e37-d918-4b29-bc60-c902d7d9ccec" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f9d17268-bdd8-4f2a-a834-54c7261dbe3c" type="checkbox" ><label for="f9d17268-bdd8-4f2a-a834-54c7261dbe3c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a5c00a55-319d-4d3f-95a6-2069abb2e7f6" type="checkbox" ><label for="a5c00a55-319d-4d3f-95a6-2069abb2e7f6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="01d47d06-1ec5-4996-9487-58bbec167f2f" type="checkbox" ><label for="01d47d06-1ec5-4996-9487-58bbec167f2f" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 {color: black;background-color: white;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 pre{padding: 0;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-toggleable {background-color: white;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-estimator:hover {background-color: #d4ebff;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-item {z-index: 1;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-parallel-item:only-child::after {width: 0;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-5c7952ad-97e1-4095-aa0d-30069c75db14 div.sk-text-repr-fallback {display: none;}</style><div id="sk-5c7952ad-97e1-4095-aa0d-30069c75db14" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f464ed3-a152-49b4-92da-6ec31b6f15e4" type="checkbox" ><label for="9f464ed3-a152-49b4-92da-6ec31b6f15e4" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4621d208-b64e-470f-be5f-f94cc6212c57" type="checkbox" ><label for="4621d208-b64e-470f-be5f-f94cc6212c57" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02afe105-fcca-4fbe-a605-e6131b20bddc" type="checkbox" ><label for="02afe105-fcca-4fbe-a605-e6131b20bddc" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="86c17fcd-2430-4c8e-bd94-ae5eed1e7f9b" type="checkbox" ><label for="86c17fcd-2430-4c8e-bd94-ae5eed1e7f9b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e780184-bffa-45e8-a754-8cafe27243c4" type="checkbox" ><label for="9e780184-bffa-45e8-a754-8cafe27243c4" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5bd88548-2e89-4502-a0cf-931c45c6d705" type="checkbox" ><label for="5bd88548-2e89-4502-a0cf-931c45c6d705" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8f59eb1f-9521-4508-8781-6a2a6067c180" type="checkbox" ><label for="8f59eb1f-9521-4508-8781-6a2a6067c180" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b47cf3aa-8e44-4c86-83fe-0822191fc6ba" type="checkbox" ><label for="b47cf3aa-8e44-4c86-83fe-0822191fc6ba" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8474c280-18e8-45e2-bb40-41ed2741ae00" type="checkbox" ><label for="8474c280-18e8-45e2-bb40-41ed2741ae00" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.078 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
