
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 {color: black;background-color: white;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 pre{padding: 0;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-toggleable {background-color: white;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-item {z-index: 1;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-parallel-item:only-child::after {width: 0;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4039c5a2-0587-4c30-bb27-e5edb6fbdf22" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7f83c62f-e661-48c8-a794-364a66887a88" type="checkbox" ><label for="7f83c62f-e661-48c8-a794-364a66887a88" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70de3b81-7994-4005-b3e5-5c6e4c410022" type="checkbox" ><label for="70de3b81-7994-4005-b3e5-5c6e4c410022" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d6d30f69-f950-46f7-9828-d773d6cea0bb" type="checkbox" ><label for="d6d30f69-f950-46f7-9828-d773d6cea0bb" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 {color: black;background-color: white;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 pre{padding: 0;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-toggleable {background-color: white;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-item {z-index: 1;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-parallel-item:only-child::after {width: 0;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d4477d2-a5fc-4e92-a868-a58fad4a6ec8" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="30f3969a-fdab-42b2-9750-80b245fff487" type="checkbox" ><label for="30f3969a-fdab-42b2-9750-80b245fff487" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9bbdb5f0-a921-4da1-97c6-9c5718382b7d" type="checkbox" ><label for="9bbdb5f0-a921-4da1-97c6-9c5718382b7d" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1401ca11-0ad8-40bc-a83f-488eda4baa22" type="checkbox" ><label for="1401ca11-0ad8-40bc-a83f-488eda4baa22" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f4b8d161-d966-403e-8735-fd12e23d437c" type="checkbox" ><label for="f4b8d161-d966-403e-8735-fd12e23d437c" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 {color: black;background-color: white;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 pre{padding: 0;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-toggleable {background-color: white;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-item {z-index: 1;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-parallel-item:only-child::after {width: 0;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6049f524-f551-4719-9a8d-4d8df166ddf5 div.sk-text-repr-fallback {display: none;}</style><div id="sk-6049f524-f551-4719-9a8d-4d8df166ddf5" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="744d6479-d5ca-4afa-b6bf-28bf579731e5" type="checkbox" ><label for="744d6479-d5ca-4afa-b6bf-28bf579731e5" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0bad1514-5c74-43bd-92b0-361d91ed74ae" type="checkbox" ><label for="0bad1514-5c74-43bd-92b0-361d91ed74ae" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8465f9c4-57f5-4a50-8a94-7849b63686d4" type="checkbox" ><label for="8465f9c4-57f5-4a50-8a94-7849b63686d4" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 {color: black;background-color: white;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 pre{padding: 0;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-toggleable {background-color: white;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-estimator:hover {background-color: #d4ebff;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-item {z-index: 1;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-parallel-item:only-child::after {width: 0;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-fc0af3cd-d0a5-44b4-af0c-13416f582704 div.sk-text-repr-fallback {display: none;}</style><div id="sk-fc0af3cd-d0a5-44b4-af0c-13416f582704" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f3b47333-35d7-4d61-a06e-c7ff013d277e" type="checkbox" ><label for="f3b47333-35d7-4d61-a06e-c7ff013d277e" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f41a8cb3-567e-4bb0-bb97-be261fbfc774" type="checkbox" ><label for="f41a8cb3-567e-4bb0-bb97-be261fbfc774" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="941e1c1f-1b59-46bf-8ecf-0aa8ff3894f8" type="checkbox" ><label for="941e1c1f-1b59-46bf-8ecf-0aa8ff3894f8" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="7eefcee1-b7e3-441d-b66a-b2094d8f9b6b" type="checkbox" ><label for="7eefcee1-b7e3-441d-b66a-b2094d8f9b6b" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="022cb6e3-2bf5-4e69-8446-6f90cf009504" type="checkbox" ><label for="022cb6e3-2bf5-4e69-8446-6f90cf009504" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e520a687-95cf-452f-b923-ba9dc3c8bd86" type="checkbox" ><label for="e520a687-95cf-452f-b923-ba9dc3c8bd86" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="525ec58d-0c93-43ae-a6f8-4a2d2271e5a5" type="checkbox" ><label for="525ec58d-0c93-43ae-a6f8-4a2d2271e5a5" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="200d653b-82c6-4e29-a9bd-3fd917d9ac29" type="checkbox" ><label for="200d653b-82c6-4e29-a9bd-3fd917d9ac29" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d5009590-eb61-4f71-ae51-99c0c805c67e" type="checkbox" ><label for="d5009590-eb61-4f71-ae51-99c0c805c67e" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c {color: black;background-color: white;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c pre{padding: 0;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-toggleable {background-color: white;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-estimator:hover {background-color: #d4ebff;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-item {z-index: 1;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-parallel-item:only-child::after {width: 0;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c div.sk-text-repr-fallback {display: none;}</style><div id="sk-c37b949a-4354-4dfd-8d4f-7833f2d7628c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4263087f-9dd1-4f5f-bb56-9999d5027826" type="checkbox" ><label for="4263087f-9dd1-4f5f-bb56-9999d5027826" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2008cab9-2013-41af-882c-13f96a681164" type="checkbox" ><label for="2008cab9-2013-41af-882c-13f96a681164" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99d9a7d6-6fa8-43cc-8802-be96115883b3" type="checkbox" ><label for="99d9a7d6-6fa8-43cc-8802-be96115883b3" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e3720693-3247-4084-8fff-5f894953feb3" type="checkbox" ><label for="e3720693-3247-4084-8fff-5f894953feb3" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="3e16bf86-55fb-4854-ac2e-da2a2cdbfc77" type="checkbox" ><label for="3e16bf86-55fb-4854-ac2e-da2a2cdbfc77" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c1ad8dab-14e9-45e3-95f0-68f857fb8ffb" type="checkbox" ><label for="c1ad8dab-14e9-45e3-95f0-68f857fb8ffb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0a67c30d-3aed-4f51-9212-b118ce27e5a9" type="checkbox" ><label for="0a67c30d-3aed-4f51-9212-b118ce27e5a9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29426398-3715-4854-ab31-50e44b764a0a" type="checkbox" ><label for="29426398-3715-4854-ab31-50e44b764a0a" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="124df9cc-70c0-4f46-b816-afbee380075e" type="checkbox" ><label for="124df9cc-70c0-4f46-b816-afbee380075e" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
