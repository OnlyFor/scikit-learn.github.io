
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-b7470cb6-d900-4725-b690-0ad7a28801cf {color: black;background-color: white;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf pre{padding: 0;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-toggleable {background-color: white;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-estimator:hover {background-color: #d4ebff;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-item {z-index: 1;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-parallel-item:only-child::after {width: 0;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-b7470cb6-d900-4725-b690-0ad7a28801cf div.sk-text-repr-fallback {display: none;}</style><div id="sk-b7470cb6-d900-4725-b690-0ad7a28801cf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cc5aca8a-0d72-46f5-bf78-91c17db29ddf" type="checkbox" ><label for="cc5aca8a-0d72-46f5-bf78-91c17db29ddf" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6127f573-7892-421f-9608-0e4276c349f5" type="checkbox" ><label for="6127f573-7892-421f-9608-0e4276c349f5" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="05d2083d-42bc-4592-abec-0baabfc66c93" type="checkbox" ><label for="05d2083d-42bc-4592-abec-0baabfc66c93" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 {color: black;background-color: white;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 pre{padding: 0;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-toggleable {background-color: white;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-estimator:hover {background-color: #d4ebff;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-item {z-index: 1;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-parallel-item:only-child::after {width: 0;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7 div.sk-text-repr-fallback {display: none;}</style><div id="sk-4aaf7835-fd13-4797-b9af-d2c9779c51d7" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9b546d21-7415-46d9-a358-7e8989146bbe" type="checkbox" ><label for="9b546d21-7415-46d9-a358-7e8989146bbe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0865cc60-d496-4bb4-bca0-425e89d10ad2" type="checkbox" ><label for="0865cc60-d496-4bb4-bca0-425e89d10ad2" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d97ee751-ebad-48be-b394-e979da7dda89" type="checkbox" ><label for="d97ee751-ebad-48be-b394-e979da7dda89" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="93d9cc64-18c0-4b1b-9602-239c5ce68033" type="checkbox" ><label for="93d9cc64-18c0-4b1b-9602-239c5ce68033" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 {color: black;background-color: white;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 pre{padding: 0;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-toggleable {background-color: white;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-estimator:hover {background-color: #d4ebff;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-item {z-index: 1;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-parallel-item:only-child::after {width: 0;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-e1e4e418-2fdf-4a85-9305-892ae1178a60 div.sk-text-repr-fallback {display: none;}</style><div id="sk-e1e4e418-2fdf-4a85-9305-892ae1178a60" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a7d0c614-b1fe-4fe6-bb29-3dd374ac7e76" type="checkbox" ><label for="a7d0c614-b1fe-4fe6-bb29-3dd374ac7e76" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="382da6c0-aac2-4d25-ba34-bd7333e71cbc" type="checkbox" ><label for="382da6c0-aac2-4d25-ba34-bd7333e71cbc" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a43dce4c-ebba-4959-bd13-9cf16fa091ae" type="checkbox" ><label for="a43dce4c-ebba-4959-bd13-9cf16fa091ae" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa {color: black;background-color: white;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa pre{padding: 0;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-toggleable {background-color: white;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-estimator:hover {background-color: #d4ebff;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-item {z-index: 1;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-parallel-item:only-child::after {width: 0;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa div.sk-text-repr-fallback {display: none;}</style><div id="sk-4c4b5dca-4f22-45c6-ba67-7238ad45f2fa" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="99fae056-61e1-4832-beae-326324dcb916" type="checkbox" ><label for="99fae056-61e1-4832-beae-326324dcb916" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="80864a6e-01da-4ccc-b1c0-2baa1f2f9c00" type="checkbox" ><label for="80864a6e-01da-4ccc-b1c0-2baa1f2f9c00" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="54499026-42d9-44d9-a051-b1088ef5bb1a" type="checkbox" ><label for="54499026-42d9-44d9-a051-b1088ef5bb1a" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8ac9ce71-bf9e-483a-929d-435dab51835c" type="checkbox" ><label for="8ac9ce71-bf9e-483a-929d-435dab51835c" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="42cf8d30-39c8-4052-8a8f-e48d9efcb412" type="checkbox" ><label for="42cf8d30-39c8-4052-8a8f-e48d9efcb412" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dffcffcd-a2ed-4b6d-a4b2-3402eab65cde" type="checkbox" ><label for="dffcffcd-a2ed-4b6d-a4b2-3402eab65cde" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ece94b98-364d-479a-9e87-73e2a4ccb0b2" type="checkbox" ><label for="ece94b98-364d-479a-9e87-73e2a4ccb0b2" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e95acbd2-5924-45cd-bf9e-3afc8d026ff4" type="checkbox" ><label for="e95acbd2-5924-45cd-bf9e-3afc8d026ff4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d1581adf-204b-4f62-934f-5c96e459b2a8" type="checkbox" ><label for="d1581adf-204b-4f62-934f-5c96e459b2a8" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf {color: black;background-color: white;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf pre{padding: 0;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-toggleable {background-color: white;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-estimator:hover {background-color: #d4ebff;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-item {z-index: 1;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-parallel-item:only-child::after {width: 0;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf div.sk-text-repr-fallback {display: none;}</style><div id="sk-c8ca554e-d2b0-48f1-9bc5-99c512cbd6bf" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6eeed32e-7658-4592-98e1-a9a50082b36f" type="checkbox" ><label for="6eeed32e-7658-4592-98e1-a9a50082b36f" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a8c29734-7a8c-47f8-9672-5daa3be8a559" type="checkbox" ><label for="a8c29734-7a8c-47f8-9672-5daa3be8a559" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc077c15-2cc7-4fc7-b30c-4f0d12a2d294" type="checkbox" ><label for="fc077c15-2cc7-4fc7-b30c-4f0d12a2d294" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5ed9237c-831a-4f57-ae5d-ffa5eba613c9" type="checkbox" ><label for="5ed9237c-831a-4f57-ae5d-ffa5eba613c9" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8e3d70ca-dde3-4df3-9df0-fb427f4af1b1" type="checkbox" ><label for="8e3d70ca-dde3-4df3-9df0-fb427f4af1b1" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="56e94b71-d3eb-424a-898d-c3e39b231956" type="checkbox" ><label for="56e94b71-d3eb-424a-898d-c3e39b231956" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1cc6a7e8-ea28-42b2-bd94-860bb13e81f6" type="checkbox" ><label for="1cc6a7e8-ea28-42b2-bd94-860bb13e81f6" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="89730621-3bbc-47a8-8f66-520b0b2ae7ab" type="checkbox" ><label for="89730621-3bbc-47a8-8f66-520b0b2ae7ab" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="92d8e854-2879-4871-84b8-0bf1f5e3e494" type="checkbox" ><label for="92d8e854-2879-4871-84b8-0bf1f5e3e494" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.070 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
