
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7756f8a6-576b-4d13-9030-c8220348a55c {color: black;background-color: white;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c pre{padding: 0;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-toggleable {background-color: white;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-estimator:hover {background-color: #d4ebff;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-item {z-index: 1;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-parallel-item:only-child::after {width: 0;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7756f8a6-576b-4d13-9030-c8220348a55c div.sk-text-repr-fallback {display: none;}</style><div id="sk-7756f8a6-576b-4d13-9030-c8220348a55c" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="4bd9396d-3209-4998-b0f1-cb30cb46f131" type="checkbox" ><label for="4bd9396d-3209-4998-b0f1-cb30cb46f131" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9e22035e-ed83-4a71-83d2-b55da0ffdf89" type="checkbox" ><label for="9e22035e-ed83-4a71-83d2-b55da0ffdf89" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4d2639d-22a7-4b62-aa7f-61654b79303b" type="checkbox" ><label for="a4d2639d-22a7-4b62-aa7f-61654b79303b" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 {color: black;background-color: white;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 pre{padding: 0;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-toggleable {background-color: white;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-estimator:hover {background-color: #d4ebff;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-item {z-index: 1;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-parallel-item:only-child::after {width: 0;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-90299a43-e03c-48ba-8a00-fff1957d0a59 div.sk-text-repr-fallback {display: none;}</style><div id="sk-90299a43-e03c-48ba-8a00-fff1957d0a59" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9f621bf8-4e39-466e-b2c4-44b96a2ebb66" type="checkbox" ><label for="9f621bf8-4e39-466e-b2c4-44b96a2ebb66" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f1a07dcc-416c-47e4-a02b-f5e3f3441840" type="checkbox" ><label for="f1a07dcc-416c-47e4-a02b-f5e3f3441840" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5af4a3b3-cfd9-4e35-8fda-c3306654ef54" type="checkbox" ><label for="5af4a3b3-cfd9-4e35-8fda-c3306654ef54" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="36ada885-9d27-49b3-b3ea-b3b841648a6d" type="checkbox" ><label for="36ada885-9d27-49b3-b3ea-b3b841648a6d" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 {color: black;background-color: white;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 pre{padding: 0;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-toggleable {background-color: white;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-estimator:hover {background-color: #d4ebff;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-item {z-index: 1;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-parallel-item:only-child::after {width: 0;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-722fabfe-daa9-4f21-9f86-0e454326cf38 div.sk-text-repr-fallback {display: none;}</style><div id="sk-722fabfe-daa9-4f21-9f86-0e454326cf38" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="1769b610-7275-4e2e-adcc-36ffdb72f2ae" type="checkbox" ><label for="1769b610-7275-4e2e-adcc-36ffdb72f2ae" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c5b680e1-4c21-4af8-bbae-6bfea8ec0ae4" type="checkbox" ><label for="c5b680e1-4c21-4af8-bbae-6bfea8ec0ae4" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="9ca82b98-5788-40a7-a16f-8b6a316d2a9e" type="checkbox" ><label for="9ca82b98-5788-40a7-a16f-8b6a316d2a9e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-527a97f7-178e-4f63-9eca-456c459774c1 {color: black;background-color: white;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 pre{padding: 0;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-toggleable {background-color: white;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-item {z-index: 1;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-parallel-item:only-child::after {width: 0;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-527a97f7-178e-4f63-9eca-456c459774c1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-527a97f7-178e-4f63-9eca-456c459774c1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fb2217f2-e363-498a-a1e8-98c83d932385" type="checkbox" ><label for="fb2217f2-e363-498a-a1e8-98c83d932385" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a68612c4-2f39-4911-a1ca-5f515194e30d" type="checkbox" ><label for="a68612c4-2f39-4911-a1ca-5f515194e30d" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ca52e85e-af90-46cb-9cf1-754cbe10e68b" type="checkbox" ><label for="ca52e85e-af90-46cb-9cf1-754cbe10e68b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fc7917cf-4ab0-47ee-9967-f07da138f5eb" type="checkbox" ><label for="fc7917cf-4ab0-47ee-9967-f07da138f5eb" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="dd83f3ab-1ebf-49a9-9dc4-41d6f8752b29" type="checkbox" ><label for="dd83f3ab-1ebf-49a9-9dc4-41d6f8752b29" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8c0b6cd8-73d6-4bf4-aea8-e40349c04d49" type="checkbox" ><label for="8c0b6cd8-73d6-4bf4-aea8-e40349c04d49" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="26c5c54d-e285-40b0-8ed2-508e3891262d" type="checkbox" ><label for="26c5c54d-e285-40b0-8ed2-508e3891262d" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e9e8603d-5454-47f7-bc63-9a23727283b4" type="checkbox" ><label for="e9e8603d-5454-47f7-bc63-9a23727283b4" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bb34fbfb-2b7d-46b9-958a-251f610980be" type="checkbox" ><label for="bb34fbfb-2b7d-46b9-958a-251f610980be" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 {color: black;background-color: white;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 pre{padding: 0;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-toggleable {background-color: white;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-estimator:hover {background-color: #d4ebff;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-item {z-index: 1;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-parallel-item:only-child::after {width: 0;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061 div.sk-text-repr-fallback {display: none;}</style><div id="sk-9b3389b5-df72-4aca-80dd-3c3f14ee1061" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c6d5c1e3-7790-4f45-8adb-9f84dea2a7df" type="checkbox" ><label for="c6d5c1e3-7790-4f45-8adb-9f84dea2a7df" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="96d48b51-5614-4465-aceb-fc5188324c4a" type="checkbox" ><label for="96d48b51-5614-4465-aceb-fc5188324c4a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="cf8871e3-cb3c-45f5-b8ca-28b4951050ea" type="checkbox" ><label for="cf8871e3-cb3c-45f5-b8ca-28b4951050ea" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="71d204ea-ce6e-4a54-8903-c0b44575d950" type="checkbox" ><label for="71d204ea-ce6e-4a54-8903-c0b44575d950" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="aafc9ffc-6814-4629-923a-d74b7485cf00" type="checkbox" ><label for="aafc9ffc-6814-4629-923a-d74b7485cf00" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e172fa7a-6661-47d6-86e6-f9d6ff44c6d4" type="checkbox" ><label for="e172fa7a-6661-47d6-86e6-f9d6ff44c6d4" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d47a796c-b921-4c1c-aa59-945d611eebc4" type="checkbox" ><label for="d47a796c-b921-4c1c-aa59-945d611eebc4" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="6945d05e-e6a4-473a-9ecb-0a47bd2295ee" type="checkbox" ><label for="6945d05e-e6a4-473a-9ecb-0a47bd2295ee" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="8dc3fe59-612c-4d0c-8c2b-83b2b0a0739b" type="checkbox" ><label for="8dc3fe59-612c-4d0c-8c2b-83b2b0a0739b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.071 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
