
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/miscellaneous/plot_pipeline_display.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_miscellaneous_plot_pipeline_display.py:


=================================================================
Displaying Pipelines
=================================================================

The default configuration for displaying a pipeline is `'text'` where
`set_config(display='text')`.  To visualize the diagram in Jupyter Notebook,
use `set_config(display='diagram')` and then output the pipeline object.

To see more detailed steps in the visualization of the pipeline, click on the
steps in the pipeline.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

Displaying a Pipeline with a Preprocessing Step and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a preprocessing
 step, :class:`~sklearn.preprocessing.StandardScaler`, and classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 21-33

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("preprocessing", StandardScaler()),
        ("classifier", LogisticRegression()),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 34-35

To view the text pipeline, the default is `display='text'`.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    set_config(display="text")
    pipe





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Pipeline(steps=[('preprocessing', StandardScaler()),
                    ('classifier', LogisticRegression())])



.. GENERATED FROM PYTHON SOURCE LINES 39-40

To visualize the diagram, change `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 {color: black;background-color: white;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 pre{padding: 0;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-toggleable {background-color: white;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-item {z-index: 1;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-parallel-item:only-child::after {width: 0;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-7d48110f-6ebc-40d9-8515-306d410fbcc1 div.sk-text-repr-fallback {display: none;}</style><div id="sk-7d48110f-6ebc-40d9-8515-306d410fbcc1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="222ada64-169d-4964-a197-6456f5f4ecf7" type="checkbox" ><label for="222ada64-169d-4964-a197-6456f5f4ecf7" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;preprocessing&#x27;, StandardScaler()),
                    (&#x27;classifier&#x27;, LogisticRegression())])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="52d23dc4-9ea3-4a04-bae2-caeb928e4f36" type="checkbox" ><label for="52d23dc4-9ea3-4a04-bae2-caeb928e4f36" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="43cb6a1e-85ac-4c68-bf39-3f34799f91f9" type="checkbox" ><label for="43cb6a1e-85ac-4c68-bf39-3f34799f91f9" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression()</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-51

Displaying a Pipeline Chaining Multiple Preprocessing Steps & Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with multiple
 preprocessing steps, :class:`~sklearn.preprocessing.PolynomialFeatures` and
 :class:`~sklearn.preprocessing.StandardScaler`, and a classifer step,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 51-64

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import StandardScaler, PolynomialFeatures
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    steps = [
        ("standard_scaler", StandardScaler()),
        ("polynomial", PolynomialFeatures(degree=3)),
        ("classifier", LogisticRegression(C=2.0)),
    ]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 65-66

To visualize the diagram, change to display='diagram'

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd {color: black;background-color: white;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd pre{padding: 0;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-toggleable {background-color: white;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-estimator:hover {background-color: #d4ebff;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-item {z-index: 1;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-parallel-item:only-child::after {width: 0;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd div.sk-text-repr-fallback {display: none;}</style><div id="sk-f7f16029-43ed-4341-87bf-0f8ec7bb46dd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="377422e7-4091-4183-b8b7-445307895acb" type="checkbox" ><label for="377422e7-4091-4183-b8b7-445307895acb" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;standard_scaler&#x27;, StandardScaler()),
                    (&#x27;polynomial&#x27;, PolynomialFeatures(degree=3)),
                    (&#x27;classifier&#x27;, LogisticRegression(C=2.0))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="77b848e3-1c32-4fc8-b03b-4327b53fb80e" type="checkbox" ><label for="77b848e3-1c32-4fc8-b03b-4327b53fb80e" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="fd7a8fe6-3899-4cd1-9d89-7cf7d9167662" type="checkbox" ><label for="fd7a8fe6-3899-4cd1-9d89-7cf7d9167662" class="sk-toggleable__label sk-toggleable__label-arrow">PolynomialFeatures</label><div class="sk-toggleable__content"><pre>PolynomialFeatures(degree=3)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2ed4697b-b263-484e-9c5e-cadd88c7f367" type="checkbox" ><label for="2ed4697b-b263-484e-9c5e-cadd88c7f367" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(C=2.0)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-76

Displaying a Pipeline and Dimensionality Reduction and Classifier
###############################################################################
 This section constructs a :class:`~sklearn.pipeline.Pipeline` with a
 dimensionality reduction step, :class:`~sklearn.decomposition.PCA`,
 a classifier, :class:`~sklearn.svm.SVC`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 76-85

.. code-block:: default


    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC
    from sklearn.decomposition import PCA
    from sklearn import set_config

    steps = [("reduce_dim", PCA(n_components=4)), ("classifier", SVC(kernel="linear"))]
    pipe = Pipeline(steps)








.. GENERATED FROM PYTHON SOURCE LINES 86-87

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-012bf691-a133-43f1-9ee5-e5c5024909eb {color: black;background-color: white;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb pre{padding: 0;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-toggleable {background-color: white;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-estimator:hover {background-color: #d4ebff;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-item {z-index: 1;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-parallel-item:only-child::after {width: 0;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-012bf691-a133-43f1-9ee5-e5c5024909eb div.sk-text-repr-fallback {display: none;}</style><div id="sk-012bf691-a133-43f1-9ee5-e5c5024909eb" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="87a2af08-5269-41e6-a55f-29576a11bebe" type="checkbox" ><label for="87a2af08-5269-41e6-a55f-29576a11bebe" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;reduce_dim&#x27;, PCA(n_components=4)),
                    (&#x27;classifier&#x27;, SVC(kernel=&#x27;linear&#x27;))])</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f18fb9b9-f8cd-4b4c-aaec-96ea6d068890" type="checkbox" ><label for="f18fb9b9-f8cd-4b4c-aaec-96ea6d068890" class="sk-toggleable__label sk-toggleable__label-arrow">PCA</label><div class="sk-toggleable__content"><pre>PCA(n_components=4)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="02c06f9e-f6fc-420a-81f5-f14d582d378e" type="checkbox" ><label for="02c06f9e-f6fc-420a-81f5-f14d582d378e" class="sk-toggleable__label sk-toggleable__label-arrow">SVC</label><div class="sk-toggleable__content"><pre>SVC(kernel=&#x27;linear&#x27;)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-97

Displaying a Complex Pipeline Chaining a Column Transformer
###############################################################################
 This section constructs a complex :class:`~sklearn.pipeline.Pipeline` with a
 :class:`~sklearn.compose.ColumnTransformer` and a classifier,
 :class:`~sklearn.linear_model.LogisticRegression`, and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 97-133

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.linear_model import LogisticRegression
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = make_pipeline(preprocessor, LogisticRegression(max_iter=500))








.. GENERATED FROM PYTHON SOURCE LINES 134-135

To visualize the diagram, change to `display='diagram'`

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    set_config(display="diagram")
    pipe  # click on the diagram below to see the details of each step






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd {color: black;background-color: white;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd pre{padding: 0;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-toggleable {background-color: white;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-estimator:hover {background-color: #d4ebff;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-item {z-index: 1;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-parallel-item:only-child::after {width: 0;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-6a57c426-1e04-4250-8f66-c32f0762b9dd div.sk-text-repr-fallback {display: none;}</style><div id="sk-6a57c426-1e04-4250-8f66-c32f0762b9dd" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5851ef02-474a-4229-bbcf-5c9f3a77e4cc" type="checkbox" ><label for="5851ef02-474a-4229-bbcf-5c9f3a77e4cc" class="sk-toggleable__label sk-toggleable__label-arrow">Pipeline</label><div class="sk-toggleable__content"><pre>Pipeline(steps=[(&#x27;columntransformer&#x27;,
                     ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                       SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                     strategy=&#x27;constant&#x27;)),
                                                                      (&#x27;onehot&#x27;,
                                                                       OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                      [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                                     (&#x27;numerical&#x27;,
                                                      Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                       SimpleImputer()),
                                                                      (&#x27;scaler&#x27;,
                                                                       StandardScaler())]),
                                                      [&#x27;age&#x27;, &#x27;weight&#x27;])])),
                    (&#x27;logisticregression&#x27;, LogisticRegression(max_iter=500))])</pre></div></div></div><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="5b0b462e-7409-4cb9-be19-d09de5bad2b6" type="checkbox" ><label for="5b0b462e-7409-4cb9-be19-d09de5bad2b6" class="sk-toggleable__label sk-toggleable__label-arrow">columntransformer: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="2d10c605-15cc-4cf2-af6a-ac3688c4a89b" type="checkbox" ><label for="2d10c605-15cc-4cf2-af6a-ac3688c4a89b" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="0e61892d-ec4d-4f55-b3bd-afa762827244" type="checkbox" ><label for="0e61892d-ec4d-4f55-b3bd-afa762827244" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="131bb7ae-d626-4ef8-816b-ee057f2b09ae" type="checkbox" ><label for="131bb7ae-d626-4ef8-816b-ee057f2b09ae" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="ed678d5b-a4a8-4e96-8b3e-13f8c8be59c3" type="checkbox" ><label for="ed678d5b-a4a8-4e96-8b3e-13f8c8be59c3" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="70565370-1ff4-4818-8714-88497d4be552" type="checkbox" ><label for="70565370-1ff4-4818-8714-88497d4be552" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="a4cc0c78-1e0c-4219-9a73-3f63fad842b6" type="checkbox" ><label for="a4cc0c78-1e0c-4219-9a73-3f63fad842b6" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e4d4cac8-47bd-4734-8332-d774f7aa4561" type="checkbox" ><label for="e4d4cac8-47bd-4734-8332-d774f7aa4561" class="sk-toggleable__label sk-toggleable__label-arrow">LogisticRegression</label><div class="sk-toggleable__content"><pre>LogisticRegression(max_iter=500)</pre></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-145

Displaying a Grid Search over a Pipeline with a Classifier
###############################################################################
 This section constructs a :class:`~sklearn.model_selection.GridSearchCV`
 over a :class:`~sklearn.pipeline.Pipeline` with
 :class:`~sklearn.ensemble.RandomForestClassifier` and displays its visual
 representation.

.. GENERATED FROM PYTHON SOURCE LINES 145-193

.. code-block:: default


    import numpy as np
    from sklearn.pipeline import make_pipeline
    from sklearn.pipeline import Pipeline
    from sklearn.impute import SimpleImputer
    from sklearn.compose import ColumnTransformer
    from sklearn.preprocessing import OneHotEncoder, StandardScaler
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.model_selection import GridSearchCV
    from sklearn import set_config

    numeric_preprocessor = Pipeline(
        steps=[
            ("imputation_mean", SimpleImputer(missing_values=np.nan, strategy="mean")),
            ("scaler", StandardScaler()),
        ]
    )

    categorical_preprocessor = Pipeline(
        steps=[
            (
                "imputation_constant",
                SimpleImputer(fill_value="missing", strategy="constant"),
            ),
            ("onehot", OneHotEncoder(handle_unknown="ignore")),
        ]
    )

    preprocessor = ColumnTransformer(
        [
            ("categorical", categorical_preprocessor, ["state", "gender"]),
            ("numerical", numeric_preprocessor, ["age", "weight"]),
        ]
    )

    pipe = Pipeline(
        steps=[("preprocessor", preprocessor), ("classifier", RandomForestClassifier())]
    )

    param_grid = {
        "classifier__n_estimators": [200, 500],
        "classifier__max_features": ["auto", "sqrt", "log2"],
        "classifier__max_depth": [4, 5, 6, 7, 8],
        "classifier__criterion": ["gini", "entropy"],
    }

    grid_search = GridSearchCV(pipe, param_grid=param_grid, n_jobs=1)








.. GENERATED FROM PYTHON SOURCE LINES 194-195

To visualize the diagram, change to `display='diagram'`.

.. GENERATED FROM PYTHON SOURCE LINES 195-197

.. code-block:: default

    set_config(display="diagram")
    grid_search  # click on the diagram below to see the details of each step





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-104853d8-a011-4737-914b-aa53b09ff31e {color: black;background-color: white;}#sk-104853d8-a011-4737-914b-aa53b09ff31e pre{padding: 0;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-toggleable {background-color: white;}#sk-104853d8-a011-4737-914b-aa53b09ff31e label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-104853d8-a011-4737-914b-aa53b09ff31e label.sk-toggleable__label-arrow:before {content: "▸";float: left;margin-right: 0.25em;color: #696969;}#sk-104853d8-a011-4737-914b-aa53b09ff31e label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-104853d8-a011-4737-914b-aa53b09ff31e input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-104853d8-a011-4737-914b-aa53b09ff31e input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: "▾";}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-104853d8-a011-4737-914b-aa53b09ff31e input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-estimator:hover {background-color: #d4ebff;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-parallel-item::after {content: "";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-serial::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-item {z-index: 1;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-parallel::before {content: "";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 2em;bottom: 0;left: 50%;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-parallel-item {display: flex;flex-direction: column;position: relative;background-color: white;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-parallel-item:only-child::after {width: 0;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;position: relative;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-label label {font-family: monospace;font-weight: bold;background-color: white;display: inline-block;line-height: 1.2em;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-label-container {position: relative;z-index: 2;text-align: center;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-104853d8-a011-4737-914b-aa53b09ff31e div.sk-text-repr-fallback {display: none;}</style><div id="sk-104853d8-a011-4737-914b-aa53b09ff31e" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre><b>Please rerun this cell to show the HTML repr or trust the notebook.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="d2a47530-8965-490a-ac3d-e380a48bcae0" type="checkbox" ><label for="d2a47530-8965-490a-ac3d-e380a48bcae0" class="sk-toggleable__label sk-toggleable__label-arrow">GridSearchCV</label><div class="sk-toggleable__content"><pre>GridSearchCV(estimator=Pipeline(steps=[(&#x27;preprocessor&#x27;,
                                            ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                                                              SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                                                            strategy=&#x27;constant&#x27;)),
                                                                                             (&#x27;onehot&#x27;,
                                                                                              OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                                                             [&#x27;state&#x27;,
                                                                              &#x27;gender&#x27;]),
                                                                            (&#x27;numerical&#x27;,
                                                                             Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                                                              SimpleImputer()),
                                                                                             (&#x27;scaler&#x27;,
                                                                                              StandardScaler())]),
                                                                             [&#x27;age&#x27;,
                                                                              &#x27;weight&#x27;])])),
                                           (&#x27;classifier&#x27;,
                                            RandomForestClassifier())]),
                 n_jobs=1,
                 param_grid={&#x27;classifier__criterion&#x27;: [&#x27;gini&#x27;, &#x27;entropy&#x27;],
                             &#x27;classifier__max_depth&#x27;: [4, 5, 6, 7, 8],
                             &#x27;classifier__max_features&#x27;: [&#x27;auto&#x27;, &#x27;sqrt&#x27;, &#x27;log2&#x27;],
                             &#x27;classifier__n_estimators&#x27;: [200, 500]})</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="09825345-3349-455c-830f-a321c067359a" type="checkbox" ><label for="09825345-3349-455c-830f-a321c067359a" class="sk-toggleable__label sk-toggleable__label-arrow">preprocessor: ColumnTransformer</label><div class="sk-toggleable__content"><pre>ColumnTransformer(transformers=[(&#x27;categorical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_constant&#x27;,
                                                      SimpleImputer(fill_value=&#x27;missing&#x27;,
                                                                    strategy=&#x27;constant&#x27;)),
                                                     (&#x27;onehot&#x27;,
                                                      OneHotEncoder(handle_unknown=&#x27;ignore&#x27;))]),
                                     [&#x27;state&#x27;, &#x27;gender&#x27;]),
                                    (&#x27;numerical&#x27;,
                                     Pipeline(steps=[(&#x27;imputation_mean&#x27;,
                                                      SimpleImputer()),
                                                     (&#x27;scaler&#x27;, StandardScaler())]),
                                     [&#x27;age&#x27;, &#x27;weight&#x27;])])</pre></div></div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="c0f731fa-468f-4e03-b029-b8cd32222eca" type="checkbox" ><label for="c0f731fa-468f-4e03-b029-b8cd32222eca" class="sk-toggleable__label sk-toggleable__label-arrow">categorical</label><div class="sk-toggleable__content"><pre>[&#x27;state&#x27;, &#x27;gender&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="f6001dab-5994-4d96-85e8-a7a248292558" type="checkbox" ><label for="f6001dab-5994-4d96-85e8-a7a248292558" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer(fill_value=&#x27;missing&#x27;, strategy=&#x27;constant&#x27;)</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="bf824cdb-f378-42c1-97a9-146eb81cc5da" type="checkbox" ><label for="bf824cdb-f378-42c1-97a9-146eb81cc5da" class="sk-toggleable__label sk-toggleable__label-arrow">OneHotEncoder</label><div class="sk-toggleable__content"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="29cae4e1-1de2-47d6-9386-f03cc7bb41bb" type="checkbox" ><label for="29cae4e1-1de2-47d6-9386-f03cc7bb41bb" class="sk-toggleable__label sk-toggleable__label-arrow">numerical</label><div class="sk-toggleable__content"><pre>[&#x27;age&#x27;, &#x27;weight&#x27;]</pre></div></div></div><div class="sk-serial"><div class="sk-item"><div class="sk-serial"><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="970d895a-dcea-4eb0-8e40-d97fad168d31" type="checkbox" ><label for="970d895a-dcea-4eb0-8e40-d97fad168d31" class="sk-toggleable__label sk-toggleable__label-arrow">SimpleImputer</label><div class="sk-toggleable__content"><pre>SimpleImputer()</pre></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="e6ce0828-074e-45a5-a703-f2d18cba9990" type="checkbox" ><label for="e6ce0828-074e-45a5-a703-f2d18cba9990" class="sk-toggleable__label sk-toggleable__label-arrow">StandardScaler</label><div class="sk-toggleable__content"><pre>StandardScaler()</pre></div></div></div></div></div></div></div></div></div></div><div class="sk-item"><div class="sk-estimator sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="b4f57491-be4b-430a-85e1-f4e84e4bd38b" type="checkbox" ><label for="b4f57491-be4b-430a-85e1-f4e84e4bd38b" class="sk-toggleable__label sk-toggleable__label-arrow">RandomForestClassifier</label><div class="sk-toggleable__content"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.074 seconds)


.. _sphx_glr_download_auto_examples_miscellaneous_plot_pipeline_display.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-learn/scikit-learn/main?urlpath=lab/tree/notebooks/auto_examples/miscellaneous/plot_pipeline_display.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_pipeline_display.py <plot_pipeline_display.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_pipeline_display.ipynb <plot_pipeline_display.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
